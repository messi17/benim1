Object.getPrototypeOf || (Object.getPrototypeOf = function(t) {
        if (t !== Object(t)) throw TypeError("Object.getPrototypeOf called on non-object");
        return t.__proto__ || t.constructor.prototype || Object.prototype
    }), "function" != typeof Object.getOwnPropertyNames && (Object.getOwnPropertyNames = function(t) {
        if (t !== Object(t)) throw TypeError("Object.getOwnPropertyNames called on non-object");
        var r, e = [];
        for (r in t) Object.prototype.hasOwnProperty.call(t, r) && e.push(r);
        return e
    }), "function" != typeof Object.create && (Object.create = function(t, r) {
        if ("object" != typeof t) throw TypeError();

        function e() {}
        e.prototype = t;
        var o = new e;
        if (t && (o.constructor = e), r !== undefined) {
            if (r !== Object(r)) throw TypeError();
            Object.defineProperties(o, r)
        }
        return o
    }),
    function() {
        if (!Object.defineProperty || ! function() {
                try {
                    return Object.defineProperty({}, "x", {}), !0
                } catch (t) {
                    return !1
                }
            }()) {
            var n = Object.defineProperty;
            Object.defineProperty = function(t, r, e) {
                if (n) try {
                    return n(t, r, e)
                } catch (o) {}
                if (t !== Object(t)) throw TypeError("Object.defineProperty called on non-object");
                return Object.prototype.__defineGetter__ && "get" in e && Object.prototype.__defineGetter__.call(t, r, e.get), Object.prototype.__defineSetter__ && "set" in e && Object.prototype.__defineSetter__.call(t, r, e.set), "value" in e && (t[r] = e.value), t
            }
        }
    }(), "function" != typeof Object.defineProperties && (Object.defineProperties = function(t, r) {
        if (t !== Object(t)) throw TypeError("Object.defineProperties called on non-object");
        var e;
        for (e in r) Object.prototype.hasOwnProperty.call(r, e) && Object.defineProperty(t, e, r[e]);
        return t
    }), Object.keys || (Object.keys = function(t) {
        if (t !== Object(t)) throw TypeError("Object.keys called on non-object");
        var r, e = [];
        for (r in t) Object.prototype.hasOwnProperty.call(t, r) && e.push(r);
        return e
    }), Function.prototype.bind || (Function.prototype.bind = function(t) {
        if ("function" != typeof this) throw TypeError("Bind must be called on a function");
        var r = Array.prototype.slice.call(arguments, 1),
            e = this,
            o = function() {},
            n = function() {
                return e.apply(this instanceof o ? this : t, r.concat(Array.prototype.slice.call(arguments)))
            };
        return this.prototype && (o.prototype = this.prototype), n.prototype = new o, n
    }), Array.isArray = Array.isArray || function(t) {
        return Boolean(t && "[object Array]" === Object.prototype.toString.call(Object(t)))
    }, Array.prototype.indexOf || (Array.prototype.indexOf = function(t) {
        if (null == this) throw TypeError();
        var r = Object(this),
            e = r.length >>> 0;
        if (0 === e) return -1;
        var o = 0;
        if (0 < arguments.length && (o = Number(arguments[1]), isNaN(o) ? o = 0 : 0 !== o && o !== 1 / 0 && o !== -1 / 0 && (o = (0 < o || -1) * Math.floor(Math.abs(o)))), e <= o) return -1;
        for (var n = 0 <= o ? o : Math.max(e - Math.abs(o), 0); n < e; n++)
            if (n in r && r[n] === t) return n;
        return -1
    }), Array.prototype.lastIndexOf || (Array.prototype.lastIndexOf = function(t) {
        if (null == this) throw TypeError();
        var r = Object(this),
            e = r.length >>> 0;
        if (0 === e) return -1;
        var o = e;
        1 < arguments.length && ((o = Number(arguments[1])) != o ? o = 0 : 0 !== o && o !== 1 / 0 && o !== -1 / 0 && (o = (0 < o || -1) * Math.floor(Math.abs(o))));
        for (var n = 0 <= o ? Math.min(o, e - 1) : e - Math.abs(o); 0 <= n; n--)
            if (n in r && r[n] === t) return n;
        return -1
    }), Array.prototype.every || (Array.prototype.every = function(t) {
        if (null == this) throw TypeError();
        var r = Object(this),
            e = r.length >>> 0;
        if ("function" != typeof t) throw TypeError();
        var o, n = arguments[1];
        for (o = 0; o < e; o++)
            if (o in r && !t.call(n, r[o], o, r)) return !1;
        return !0
    }), Array.prototype.some || (Array.prototype.some = function(t) {
        if (null == this) throw TypeError();
        var r = Object(this),
            e = r.length >>> 0;
        if ("function" != typeof t) throw TypeError();
        var o, n = arguments[1];
        for (o = 0; o < e; o++)
            if (o in r && t.call(n, r[o], o, r)) return !0;
        return !1
    }), Array.prototype.forEach || (Array.prototype.forEach = function(t) {
        if (null == this) throw TypeError();
        var r = Object(this),
            e = r.length >>> 0;
        if ("function" != typeof t) throw TypeError();
        var o, n = arguments[1];
        for (o = 0; o < e; o++) o in r && t.call(n, r[o], o, r)
    }), Array.prototype.map || (Array.prototype.map = function(t) {
        if (null == this) throw TypeError();
        var r = Object(this),
            e = r.length >>> 0;
        if ("function" != typeof t) throw TypeError();
        var o = [];
        o.length = e;
        var n, i = arguments[1];
        for (n = 0; n < e; n++) n in r && (o[n] = t.call(i, r[n], n, r));
        return o
    }), Array.prototype.filter || (Array.prototype.filter = function(t) {
        if (null == this) throw TypeError();
        var r = Object(this),
            e = r.length >>> 0;
        if ("function" != typeof t) throw TypeError();
        var o, n = [],
            i = arguments[1];
        for (o = 0; o < e; o++)
            if (o in r) {
                var p = r[o];
                t.call(i, p, o, r) && n.push(p)
            } return n
    }), Array.prototype.reduce || (Array.prototype.reduce = function(t) {
        if (null == this) throw TypeError();
        var r = Object(this),
            e = r.length >>> 0;
        if ("function" != typeof t) throw TypeError();
        if (0 === e && 1 === arguments.length) throw TypeError();
        var o, n = 0;
        if (2 <= arguments.length) o = arguments[1];
        else
            for (;;) {
                if (n in r) {
                    o = r[n++];
                    break
                }
                if (++n >= e) throw TypeError()
            }
        for (; n < e;) n in r && (o = t.call(undefined, o, r[n], n, r)), n++;
        return o
    }), Array.prototype.reduceRight || (Array.prototype.reduceRight = function(t) {
        if (null == this) throw TypeError();
        var r = Object(this),
            e = r.length >>> 0;
        if ("function" != typeof t) throw TypeError();
        if (0 === e && 1 === arguments.length) throw TypeError();
        var o, n = e - 1;
        if (2 <= arguments.length) o = arguments[1];
        else
            for (;;) {
                if (n in this) {
                    o = this[n--];
                    break
                }
                if (--n < 0) throw TypeError()
            }
        for (; 0 <= n;) n in r && (o = t.call(undefined, o, r[n], n, r)), n--;
        return o
    }), String.prototype.trim || (String.prototype.trim = function() {
        return String(this).replace(/^\s+/, "").replace(/\s+$/, "")
    }), Date.now || (Date.now = function now() {
        return Number(new Date)
    }), Date.prototype.toISOString || (Date.prototype.toISOString = function() {
        function t(t) {
            return ("00" + t).slice(-2)
        }
        return this.getUTCFullYear() + "-" + t(this.getUTCMonth() + 1) + "-" + t(this.getUTCDate()) + "T" + t(this.getUTCHours()) + ":" + t(this.getUTCMinutes()) + ":" + t(this.getUTCSeconds()) + "." + function r(t) {
            return ("000" + t).slice(-3)
        }(this.getUTCMilliseconds()) + "Z"
    });
if (void 0 === Set || "function" != typeof Set.prototype.keys) var Set = function() {
    "use strict";
    var i = {
            "[object Array]": !0,
            "[object Arguments]": !0,
            "[object HTMLCollection]": !0,
            "[object NodeList]": !0
        },
        n = Object.prototype.hasOwnProperty,
        o = Object.prototype.toString;

    function s(e, t) {
        return n.call(e, t)
    }
    var a = Object.defineProperty && Object.defineProperties;

    function u(e, t, n, r, i) {
        a ? Object.defineProperty(e, t, {
            enumerable: r,
            configurable: !1,
            writable: i,
            value: n
        }) : e[t] = n
    }
    var c = !1;

    function r(e, t) {
        c = !0, e.size = t, c = !1
    }

    function e(e) {
        var t = 0;
        if (u(this, "baseType", "Set", !1, !1), u(this, "_data", {}, !1, !0), a ? Object.defineProperty(this, "size", {
                enumerable: !0,
                configurable: !1,
                get: function() {
                    return t
                },
                set: function(e) {
                    if (!c) throw new Error("Can't set size property on Set object.");
                    t = e
                }
            }) : this.size = 0, e !== undefined && null !== e)
            if (function r(e) {
                    var t;
                    return "object" == typeof e && (t = o.call(e), !0 === i[t] || "number" == typeof e.length && 0 <= e.length && (0 === e.length || "object" == typeof e[0] && 0 < e[0].nodeType))
                }(e))
                for (var n = 0; n < e.length; n++) this.add(e[n]);
            else(e instanceof Set || "Set" === e.baseType) && e.forEach(function(e) {
                this.add(e)
            }, this)
    }
    var f = 0,
        l = "__objectPolyFillID",
        d = {
            string: !0,
            "boolean": !0,
            number: !0,
            undefined: !0
        };

    function h(e, t) {
        var n, r = typeof e;
        if (d[r]) return r.substr(0, 3) + "_" + e;
        if (null === e) return "nul_null";
        if ("object" === r || "function" === r) return e[l] ? e[l] : t ? (n = "obj_" + f++, "[object Object]" === o.call(e) && a ? Object.defineProperty(e, l, {
            enumerable: !1,
            configurable: !1,
            writable: !1,
            value: n
        }) : e[l] = n, n) : null;
        throw new Error("Unsupported type for Set.add()")
    }

    function t(r, i, o) {
        var a = 0,
            u = r.length;
        this.next = function() {
            for (var e, t, n = {};;) {
                if (a < u) {
                    if (n.done = !1, t = r[a++], (e = i[t]) === undefined && !s(i, t)) continue;
                    "keys" === o ? n.value = e : "entries" === o && (n.value = [e, e])
                } else i = r = null, n.done = !0;
                return n
            }
        }
    }

    function b(e) {
        var t = [];
        for (var n in e) s(e, n) && t.push(n);
        return t
    }
    return (e.prototype = {
        add: function(e) {
            var t = h(e, !0);
            return s(this._data, t) || (this._data[t] = e, r(this, this.size + 1)), this
        },
        clear: function() {
            this._data = {}, r(this, 0)
        },
        "delete": function(e) {
            var t = h(e, !1);
            return !(null === t || !s(this._data, t)) && (delete this._data[t], r(this, this.size - 1), !0)
        },
        remove: function(e) {
            return this["delete"](e)
        },
        forEach: function(e) {
            if ("function" == typeof e)
                for (var t, n, r = arguments[1], i = this.keys();
                    (t = i.next()) && !t.done;) n = t.value, e.call(r, n, n, this)
        },
        has: function(e) {
            var t = h(e, !1);
            return null !== t && n.call(this._data, t)
        },
        values: function() {
            return this.keys()
        },
        keys: function() {
            return new t(b(this._data), this._data, "keys")
        },
        entries: function() {
            return new t(b(this._data), this._data, "entries")
        }
    }).constructor = e
}();
"undefined" != typeof window && function webpackUniversalModuleDefinition(t, e) {
    "object" == typeof exports && "object" == typeof module ? module.exports = e() : "function" == typeof define && define.amd ? define([], e) : "object" == typeof exports ? exports.Hls = e() : t.Hls = e()
}(this, function() {
    return function(r) {
        var i = {};

        function n(t) {
            if (i[t]) return i[t].exports;
            var e = i[t] = {
                i: t,
                l: !1,
                exports: {}
            };
            return r[t].call(e.exports, e, e.exports, n), e.l = !0, e.exports
        }
        return n.m = r, n.c = i, n.d = function(t, e, r) {
            n.o(t, e) || Object.defineProperty(t, e, {
                configurable: !1,
                enumerable: !0,
                get: r
            })
        }, n.n = function(t) {
            var e = t && t.__esModule ? function() {
                return t["default"]
            } : function() {
                return t
            };
            return n.d(e, "a", e), e
        }, n.o = function(t, e) {
            return Object.prototype.hasOwnProperty.call(t, e)
        }, n.p = "/dist/", n(n.s = 11)
    }([function(t, e, r) {
        "use strict";
        r.d(e, "a", function() {
            return d
        }), r.d(e, "b", function() {
            return c
        });
        var i = r(4),
            n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                return typeof t
            } : function(t) {
                return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t
            };

        function o() {}
        var a = {
                trace: o,
                debug: o,
                log: o,
                warn: o,
                info: o,
                error: o
            },
            s = a;
        var l = Object(i.a)();

        function u(r) {
            for (var t = arguments.length, e = Array(1 < t ? t - 1 : 0), i = 1; i < t; i++) e[i - 1] = arguments[i];
            e.forEach(function(t) {
                s[t] = r[t] ? r[t].bind(r) : function e(n) {
                    var a = l.console[n];
                    return a ? function() {
                        for (var t = arguments.length, e = Array(t), r = 0; r < t; r++) e[r] = arguments[r];
                        e[0] && (e[0] = function i(t, e) {
                            return e = "[" + t + "] > " + e
                        }(n, e[0])), a.apply(l.console, e)
                    } : o
                }(t)
            })
        }
        var d = function d(t) {
                if (!0 === t || "object" === (void 0 === t ? "undefined" : n(t))) {
                    u(t, "debug", "log", "info", "warn", "error");
                    try {
                        s.log()
                    } catch (e) {
                        s = a
                    }
                } else s = a
            },
            c = s
    }, function(t, e, r) {
        "use strict";
        e.a = {
            MEDIA_ATTACHING: "hlsMediaAttaching",
            MEDIA_ATTACHED: "hlsMediaAttached",
            MEDIA_DETACHING: "hlsMediaDetaching",
            MEDIA_DETACHED: "hlsMediaDetached",
            BUFFER_RESET: "hlsBufferReset",
            BUFFER_CODECS: "hlsBufferCodecs",
            BUFFER_CREATED: "hlsBufferCreated",
            BUFFER_APPENDING: "hlsBufferAppending",
            BUFFER_APPENDED: "hlsBufferAppended",
            BUFFER_EOS: "hlsBufferEos",
            BUFFER_FLUSHING: "hlsBufferFlushing",
            BUFFER_FLUSHED: "hlsBufferFlushed",
            MANIFEST_LOADING: "hlsManifestLoading",
            MANIFEST_LOADED: "hlsManifestLoaded",
            MANIFEST_PARSED: "hlsManifestParsed",
            LEVEL_SWITCHING: "hlsLevelSwitching",
            LEVEL_SWITCHED: "hlsLevelSwitched",
            LEVEL_LOADING: "hlsLevelLoading",
            LEVEL_LOADED: "hlsLevelLoaded",
            LEVEL_UPDATED: "hlsLevelUpdated",
            LEVEL_PTS_UPDATED: "hlsLevelPtsUpdated",
            AUDIO_TRACKS_UPDATED: "hlsAudioTracksUpdated",
            AUDIO_TRACK_SWITCHING: "hlsAudioTrackSwitching",
            AUDIO_TRACK_SWITCHED: "hlsAudioTrackSwitched",
            AUDIO_TRACK_LOADING: "hlsAudioTrackLoading",
            AUDIO_TRACK_LOADED: "hlsAudioTrackLoaded",
            SUBTITLE_TRACKS_UPDATED: "hlsSubtitleTracksUpdated",
            SUBTITLE_TRACK_SWITCH: "hlsSubtitleTrackSwitch",
            SUBTITLE_TRACK_LOADING: "hlsSubtitleTrackLoading",
            SUBTITLE_TRACK_LOADED: "hlsSubtitleTrackLoaded",
            SUBTITLE_FRAG_PROCESSED: "hlsSubtitleFragProcessed",
            INIT_PTS_FOUND: "hlsInitPtsFound",
            FRAG_LOADING: "hlsFragLoading",
            FRAG_LOAD_PROGRESS: "hlsFragLoadProgress",
            FRAG_LOAD_EMERGENCY_ABORTED: "hlsFragLoadEmergencyAborted",
            FRAG_LOADED: "hlsFragLoaded",
            FRAG_DECRYPTED: "hlsFragDecrypted",
            FRAG_PARSING_INIT_SEGMENT: "hlsFragParsingInitSegment",
            FRAG_PARSING_USERDATA: "hlsFragParsingUserdata",
            FRAG_PARSING_METADATA: "hlsFragParsingMetadata",
            FRAG_PARSING_DATA: "hlsFragParsingData",
            FRAG_PARSED: "hlsFragParsed",
            FRAG_BUFFERED: "hlsFragBuffered",
            FRAG_CHANGED: "hlsFragChanged",
            FPS_DROP: "hlsFpsDrop",
            FPS_DROP_LEVEL_CAPPING: "hlsFpsDropLevelCapping",
            ERROR: "hlsError",
            DESTROYING: "hlsDestroying",
            KEY_LOADING: "hlsKeyLoading",
            KEY_LOADED: "hlsKeyLoaded",
            STREAM_STATE_TRANSITION: "hlsStreamStateTransition"
        }
    }, function(t, e, r) {
        "use strict";
        r.d(e, "b", function() {
            return i
        }), r.d(e, "a", function() {
            return n
        });
        var i = {
                NETWORK_ERROR: "networkError",
                MEDIA_ERROR: "mediaError",
                KEY_SYSTEM_ERROR: "keySystemError",
                MUX_ERROR: "muxError",
                OTHER_ERROR: "otherError"
            },
            n = {
                KEY_SYSTEM_NO_KEYS: "keySystemNoKeys",
                KEY_SYSTEM_NO_ACCESS: "keySystemNoAccess",
                KEY_SYSTEM_NO_SESSION: "keySystemNoSession",
                KEY_SYSTEM_LICENSE_REQUEST_FAILED: "keySystemLicenseRequestFailed",
                MANIFEST_LOAD_ERROR: "manifestLoadError",
                MANIFEST_LOAD_TIMEOUT: "manifestLoadTimeOut",
                MANIFEST_PARSING_ERROR: "manifestParsingError",
                MANIFEST_INCOMPATIBLE_CODECS_ERROR: "manifestIncompatibleCodecsError",
                LEVEL_LOAD_ERROR: "levelLoadError",
                LEVEL_LOAD_TIMEOUT: "levelLoadTimeOut",
                LEVEL_SWITCH_ERROR: "levelSwitchError",
                AUDIO_TRACK_LOAD_ERROR: "audioTrackLoadError",
                AUDIO_TRACK_LOAD_TIMEOUT: "audioTrackLoadTimeOut",
                FRAG_LOAD_ERROR: "fragLoadError",
                FRAG_LOAD_TIMEOUT: "fragLoadTimeOut",
                FRAG_DECRYPT_ERROR: "fragDecryptError",
                FRAG_PARSING_ERROR: "fragParsingError",
                REMUX_ALLOC_ERROR: "remuxAllocError",
                KEY_LOAD_ERROR: "keyLoadError",
                KEY_LOAD_TIMEOUT: "keyLoadTimeOut",
                BUFFER_ADD_CODEC_ERROR: "bufferAddCodecError",
                BUFFER_APPEND_ERROR: "bufferAppendError",
                BUFFER_APPENDING_ERROR: "bufferAppendingError",
                BUFFER_STALLED_ERROR: "bufferStalledError",
                BUFFER_FULL_ERROR: "bufferFullError",
                BUFFER_SEEK_OVER_HOLE: "bufferSeekOverHole",
                BUFFER_NUDGE_ON_STALL: "bufferNudgeOnStall",
                INTERNAL_EXCEPTION: "internalException"
            }
    }, function(t, e, r) {
        "use strict";
        r.d(e, "a", function() {
            return i
        });
        var i = Number.isFinite || function(t) {
            return "number" == typeof t && isFinite(t)
        }
    }, function(t, e, r) {
        "use strict";
        e.a = function i() {
            return "undefined" == typeof window ? self : window
        }
    }, function(t, e, r) {
        var i, d, n, a, c;
        i = /^((?:[a-zA-Z0-9+\-.]+:)?)(\/\/[^\/\;?#]*)?(.*?)??(;.*?)?(\?.*?)?(#.*?)?$/, d = /^([^\/;?#]*)(.*)$/, n = /(?:\/|^)\.(?=\/)/g, a = /(?:\/|^)\.\.\/(?!\.\.\/).*?(?=\/)/g, c = {
            buildAbsoluteURL: function(t, e, r) {
                if (r = r || {}, t = t.trim(), !(e = e.trim())) {
                    if (!r.alwaysNormalize) return t;
                    var i = this.parseURL(t);
                    if (!a) throw new Error("Error al intentar analizar la URL base.");
                    return i.path = c.normalizePath(i.path), c.buildURLFromParts(i)
                }
                var n = this.parseURL(e);
                if (!n) throw new Error("Error al intentar analizar la URL relativa.");
                if (n.scheme) return r.alwaysNormalize ? (n.path = c.normalizePath(n.path), c.buildURLFromParts(n)) : e;
                var a = this.parseURL(t);
                if (!a) throw new Error("Error al intentar analizar la URL base.");
                if (!a.netLoc && a.path && "/" !== a.path[0]) {
                    var o = d.exec(a.path);
                    a.netLoc = o[1], a.path = o[2]
                }
                a.netLoc && !a.path && (a.path = "/");
                var s = {
                    scheme: a.scheme,
                    netLoc: n.netLoc,
                    path: null,
                    params: n.params,
                    query: n.query,
                    fragment: n.fragment
                };
                if (!n.netLoc && (s.netLoc = a.netLoc, "/" !== n.path[0]))
                    if (n.path) {
                        var l = a.path,
                            u = l.substring(0, l.lastIndexOf("/") + 1) + n.path;
                        s.path = c.normalizePath(u)
                    } else s.path = a.path, n.params || (s.params = a.params, n.query || (s.query = a.query));
                return null === s.path && (s.path = r.alwaysNormalize ? c.normalizePath(n.path) : n.path), c.buildURLFromParts(s)
            },
            parseURL: function(t) {
                var e = i.exec(t);
                return e ? {
                    scheme: e[1] || "",
                    netLoc: e[2] || "",
                    path: e[3] || "",
                    params: e[4] || "",
                    query: e[5] || "",
                    fragment: e[6] || ""
                } : null
            },
            normalizePath: function(t) {
                for (t = t.split("").reverse().join("").replace(n, ""); t.length !== (t = t.replace(a, "")).length;);
                return t.split("").reverse().join("")
            },
            buildURLFromParts: function(t) {
                return t.scheme + t.netLoc + t.path + t.params + t.query + t.fragment
            }
        }, t.exports = c
    }, function(t, e, r) {
        "use strict";
        r.d(e, "b", function() {
            return n
        });
        var i = function() {
                function s() {
                    ! function r(t, e) {
                        if (!(t instanceof e)) throw new TypeError("No se puede llamar a una clase como una funciÃƒÂ³n")
                    }(this, s)
                }
                return s.isHeader = function(t, e) {
                    return e + 10 <= t.length && 73 === t[e] && 68 === t[e + 1] && 51 === t[e + 2] && t[e + 3] < 255 && t[e + 4] < 255 && t[e + 6] < 128 && t[e + 7] < 128 && t[e + 8] < 128 && t[e + 9] < 128
                }, s.isFooter = function(t, e) {
                    return e + 10 <= t.length && 51 === t[e] && 68 === t[e + 1] && 73 === t[e + 2] && t[e + 3] < 255 && t[e + 4] < 255 && t[e + 6] < 128 && t[e + 7] < 128 && t[e + 8] < 128 && t[e + 9] < 128
                }, s.getID3Data = function(t, e) {
                    for (var r = e, i = 0; s.isHeader(t, e);) {
                        i += 10, i += s._readSize(t, e + 6), s.isFooter(t, e + 10) && (i += 10), e += i
                    }
                    return 0 < i ? t.subarray(r, r + i) : undefined
                }, s._readSize = function(t, e) {
                    var r = 0;
                    return r = (127 & t[e]) << 21, r |= (127 & t[e + 1]) << 14, r |= (127 & t[e + 2]) << 7, r |= 127 & t[e + 3]
                }, s.getTimeStamp = function(t) {
                    for (var e = s.getID3Frames(t), r = 0; r < e.length; r++) {
                        var i = e[r];
                        if (s.isTimeStampFrame(i)) return s._readTimeStamp(i)
                    }
                    return undefined
                }, s.isTimeStampFrame = function(t) {
                    return t && "PRIV" === t.key && "com.apple.streaming.transportStreamTimestamp" === t.info
                }, s._getFrameData = function(t) {
                    var e = String.fromCharCode(t[0], t[1], t[2], t[3]),
                        r = s._readSize(t, 4);
                    return {
                        type: e,
                        size: r,
                        data: t.subarray(10, 10 + r)
                    }
                }, s.getID3Frames = function(t) {
                    for (var e = 0, r = []; s.isHeader(t, e);) {
                        for (var i = s._readSize(t, e + 6), n = (e += 10) + i; e + 8 < n;) {
                            var a = s._getFrameData(t.subarray(e)),
                                o = s._decodeFrame(a);
                            o && r.push(o), e += a.size + 10
                        }
                        s.isFooter(t, e) && (e += 10)
                    }
                    return r
                }, s._decodeFrame = function(t) {
                    return "PRIV" === t.type ? s._decodePrivFrame(t) : "T" === t.type[0] ? s._decodeTextFrame(t) : "W" === t.type[0] ? s._decodeURLFrame(t) : undefined
                }, s._readTimeStamp = function(t) {
                    if (8 !== t.data.byteLength) return undefined;
                    var e = new Uint8Array(t.data),
                        r = 1 & e[3],
                        i = (e[4] << 23) + (e[5] << 15) + (e[6] << 7) + e[7];
                    return i /= 45, r && (i += 47721858.84), Math.round(i)
                }, s._decodePrivFrame = function(t) {
                    if (t.size < 2) return undefined;
                    var e = s._utf8ArrayToStr(t.data, !0),
                        r = new Uint8Array(t.data.subarray(e.length + 1));
                    return {
                        key: t.type,
                        info: e,
                        data: r.buffer
                    }
                }, s._decodeTextFrame = function(t) {
                    if (t.size < 2) return undefined;
                    if ("TXXX" === t.type) {
                        var e = 1,
                            r = s._utf8ArrayToStr(t.data.subarray(e));
                        e += r.length + 1;
                        var i = s._utf8ArrayToStr(t.data.subarray(e));
                        return {
                            key: t.type,
                            info: r,
                            data: i
                        }
                    }
                    var n = s._utf8ArrayToStr(t.data.subarray(1));
                    return {
                        key: t.type,
                        data: n
                    }
                }, s._decodeURLFrame = function(t) {
                    if ("WXXX" === t.type) {
                        if (t.size < 2) return undefined;
                        var e = 1,
                            r = s._utf8ArrayToStr(t.data.subarray(e));
                        e += r.length + 1;
                        var i = s._utf8ArrayToStr(t.data.subarray(e));
                        return {
                            key: t.type,
                            info: r,
                            data: i
                        }
                    }
                    var n = s._utf8ArrayToStr(t.data);
                    return {
                        key: t.type,
                        data: n
                    }
                }, s._utf8ArrayToStr = function(t) {
                    for (var e = 1 < arguments.length && arguments[1] !== undefined && arguments[1], r = t.length, i = void 0, n = void 0, a = void 0, o = "", s = 0; s < r;) {
                        if (0 === (i = t[s++]) && e) return o;
                        if (0 !== i && 3 !== i) switch (i >> 4) {
                            case 0:
                            case 1:
                            case 2:
                            case 3:
                            case 4:
                            case 5:
                            case 6:
                            case 7:
                                o += String.fromCharCode(i);
                                break;
                            case 12:
                            case 13:
                                n = t[s++], o += String.fromCharCode((31 & i) << 6 | 63 & n);
                                break;
                            case 14:
                                n = t[s++], a = t[s++], o += String.fromCharCode((15 & i) << 12 | (63 & n) << 6 | (63 & a) << 0)
                        }
                    }
                    return o
                }, s
            }(),
            n = i._utf8ArrayToStr;
        e.a = i
    }, function(t, e) {
        function i() {
            this._events = this._events || {}, this._maxListeners = this._maxListeners || undefined
        }

        function l(t) {
            return "function" == typeof t
        }

        function u(t) {
            return "object" == typeof t && null !== t
        }

        function d(t) {
            return void 0 === t
        }((t.exports = i).EventEmitter = i).prototype._events = undefined, i.prototype._maxListeners = undefined, i.defaultMaxListeners = 10, i.prototype.setMaxListeners = function(t) {
            if (! function e(t) {
                    return "number" == typeof t
                }(t) || t < 0 || isNaN(t)) throw TypeError("n must be a positive number");
            return this._maxListeners = t, this
        }, i.prototype.emit = function(t) {
            var e, r, i, n, a, o;
            if (this._events || (this._events = {}), "error" === t && (!this._events.error || u(this._events.error) && !this._events.error.length)) {
                if ((e = arguments[1]) instanceof Error) throw e;
                var s = new Error('Uncaught, unspecified "error" event. (' + e + ")");
                throw s.context = e, s
            }
            if (d(r = this._events[t])) return !1;
            if (l(r)) switch (arguments.length) {
                case 1:
                    r.call(this);
                    break;
                case 2:
                    r.call(this, arguments[1]);
                    break;
                case 3:
                    r.call(this, arguments[1], arguments[2]);
                    break;
                default:
                    n = Array.prototype.slice.call(arguments, 1), r.apply(this, n)
            } else if (u(r))
                for (n = Array.prototype.slice.call(arguments, 1), i = (o = r.slice()).length, a = 0; a < i; a++) o[a].apply(this, n);
            return !0
        }, i.prototype.on = i.prototype.addListener = function(t, e) {
            var r;
            if (!l(e)) throw TypeError("listener must be a function");
            return this._events || (this._events = {}), this._events.newListener && this.emit("newListener", t, l(e.listener) ? e.listener : e), this._events[t] ? u(this._events[t]) ? this._events[t].push(e) : this._events[t] = [this._events[t], e] : this._events[t] = e, u(this._events[t]) && !this._events[t].warned && (r = d(this._maxListeners) ? i.defaultMaxListeners : this._maxListeners) && 0 < r && this._events[t].length > r && (this._events[t].warned = !0, console.error("(node) warning: possible EventEmitter memory leak detected. %d listeners added. Use emitter.setMaxListeners() to increase limit.", this._events[t].length), "function" == typeof console.trace && console.trace()), this
        }, i.prototype.once = function(t, e) {
            if (!l(e)) throw TypeError("listener must be a function");
            var r = !1;

            function i() {
                this.removeListener(t, i), r || (r = !0, e.apply(this, arguments))
            }
            return i.listener = e, this.on(t, i), this
        }, i.prototype.removeListener = function(t, e) {
            var r, i, n, a;
            if (!l(e)) throw TypeError("listener must be a function");
            if (!this._events || !this._events[t]) return this;
            if (n = (r = this._events[t]).length, i = -1, r === e || l(r.listener) && r.listener === e) delete this._events[t], this._events.removeListener && this.emit("removeListener", t, e);
            else if (u(r)) {
                for (a = n; 0 < a--;)
                    if (r[a] === e || r[a].listener && r[a].listener === e) {
                        i = a;
                        break
                    } if (i < 0) return this;
                1 === r.length ? (r.length = 0, delete this._events[t]) : r.splice(i, 1), this._events.removeListener && this.emit("removeListener", t, e)
            }
            return this
        }, i.prototype.removeAllListeners = function(t) {
            var e, r;
            if (!this._events) return this;
            if (!this._events.removeListener) return 0 === arguments.length ? this._events = {} : this._events[t] && delete this._events[t], this;
            if (0 === arguments.length) {
                for (e in this._events) "removeListener" !== e && this.removeAllListeners(e);
                return this.removeAllListeners("removeListener"), this._events = {}, this
            }
            if (l(r = this._events[t])) this.removeListener(t, r);
            else if (r)
                for (; r.length;) this.removeListener(t, r[r.length - 1]);
            return delete this._events[t], this
        }, i.prototype.listeners = function(t) {
            return this._events && this._events[t] ? l(this._events[t]) ? [this._events[t]] : this._events[t].slice() : []
        }, i.prototype.listenerCount = function(t) {
            if (this._events) {
                var e = this._events[t];
                if (l(e)) return 1;
                if (e) return e.length
            }
            return 0
        }, i.listenerCount = function(t, e) {
            return t.listenerCount(e)
        }
    }, function(t, e, r) {
        "use strict";
        var l = function() {
            function i(t, e) {
                ! function r(t, e) {
                    if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function")
                }(this, i), this.subtle = t, this.aesIV = e
            }
            return i.prototype.decrypt = function(t, e) {
                return this.subtle.decrypt({
                    name: "AES-CBC",
                    iv: this.aesIV
                }, e, t)
            }, i
        }();
        var u = function() {
            function i(t, e) {
                ! function r(t, e) {
                    if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function")
                }(this, i), this.subtle = t, this.key = e
            }
            return i.prototype.expandKey = function() {
                return this.subtle.importKey("raw", this.key, {
                    name: "AES-CBC"
                }, !1, ["encrypt", "decrypt"])
            }, i
        }();
        var d = function() {
                function t() {
                    ! function r(t, e) {
                        if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function")
                    }(this, t), this.rcon = [0, 1, 2, 4, 8, 16, 32, 64, 128, 27, 54], this.subMix = [new Uint32Array(256), new Uint32Array(256), new Uint32Array(256), new Uint32Array(256)], this.invSubMix = [new Uint32Array(256), new Uint32Array(256), new Uint32Array(256), new Uint32Array(256)], this.sBox = new Uint32Array(256), this.invSBox = new Uint32Array(256), this.key = new Uint32Array(0), this.initTable()
                }
                return t.prototype.uint8ArrayToUint32Array_ = function(t) {
                    for (var e = new DataView(t), r = new Uint32Array(4), i = 0; i < 4; i++) r[i] = e.getUint32(4 * i);
                    return r
                }, t.prototype.initTable = function() {
                    var t = this.sBox,
                        e = this.invSBox,
                        r = this.subMix,
                        i = r[0],
                        n = r[1],
                        a = r[2],
                        o = r[3],
                        s = this.invSubMix,
                        l = s[0],
                        u = s[1],
                        d = s[2],
                        c = s[3],
                        h = new Uint32Array(256),
                        f = 0,
                        p = 0,
                        g = 0;
                    for (g = 0; g < 256; g++) h[g] = g < 128 ? g << 1 : g << 1 ^ 283;
                    for (g = 0; g < 256; g++) {
                        var v = p ^ p << 1 ^ p << 2 ^ p << 3 ^ p << 4;
                        v = v >>> 8 ^ 255 & v ^ 99;
                        var y = h[e[t[f] = v] = f],
                            m = h[y],
                            b = h[m],
                            T = 257 * h[v] ^ 16843008 * v;
                        i[f] = T << 24 | T >>> 8, n[f] = T << 16 | T >>> 16, a[f] = T << 8 | T >>> 24, o[f] = T, T = 16843009 * b ^ 65537 * m ^ 257 * y ^ 16843008 * f, l[v] = T << 24 | T >>> 8, u[v] = T << 16 | T >>> 16, d[v] = T << 8 | T >>> 24, c[v] = T, f ? (f = y ^ h[h[h[b ^ y]]], p ^= h[h[p]]) : f = p = 1
                    }
                }, t.prototype.expandKey = function(t) {
                    for (var e = this.uint8ArrayToUint32Array_(t), r = !0, i = 0; i < e.length && r;) r = e[i] === this.key[i], i++;
                    if (!r) {
                        this.key = e;
                        var n = this.keySize = e.length;
                        if (4 !== n && 6 !== n && 8 !== n) throw new Error("Invalid aes key size=" + n);
                        var a = this.ksRows = 4 * (n + 6 + 1),
                            o = void 0,
                            s = void 0,
                            l = this.keySchedule = new Uint32Array(a),
                            u = this.invKeySchedule = new Uint32Array(a),
                            d = this.sBox,
                            c = this.rcon,
                            h = this.invSubMix,
                            f = h[0],
                            p = h[1],
                            g = h[2],
                            v = h[3],
                            y = void 0,
                            m = void 0;
                        for (o = 0; o < a; o++) o < n ? y = l[o] = e[o] : (m = y, o % n == 0 ? (m = d[(m = m << 8 | m >>> 24) >>> 24] << 24 | d[m >>> 16 & 255] << 16 | d[m >>> 8 & 255] << 8 | d[255 & m], m ^= c[o / n | 0] << 24) : 6 < n && o % n == 4 && (m = d[m >>> 24] << 24 | d[m >>> 16 & 255] << 16 | d[m >>> 8 & 255] << 8 | d[255 & m]), l[o] = y = (l[o - n] ^ m) >>> 0);
                        for (s = 0; s < a; s++) o = a - s, m = 3 & s ? l[o] : l[o - 4], u[s] = s < 4 || o <= 4 ? m : f[d[m >>> 24]] ^ p[d[m >>> 16 & 255]] ^ g[d[m >>> 8 & 255]] ^ v[d[255 & m]], u[s] = u[s] >>> 0
                    }
                }, t.prototype.networkToHostOrderSwap = function(t) {
                    return t << 24 | (65280 & t) << 8 | (16711680 & t) >> 8 | t >>> 24
                }, t.prototype.decrypt = function(t, e, r, i) {
                    for (var n = this.keySize + 6, a = this.invKeySchedule, o = this.invSBox, s = this.invSubMix, l = s[0], u = s[1], d = s[2], c = s[3], h = this.uint8ArrayToUint32Array_(r), f = h[0], p = h[1], g = h[2], v = h[3], y = new Int32Array(t), m = new Int32Array(y.length), b = void 0, T = void 0, E = void 0, S = void 0, _ = void 0, R = void 0, A = void 0, w = void 0, L = void 0, k = void 0, D = void 0, O = void 0, C = void 0, I = void 0, P = this.networkToHostOrderSwap; e < y.length;) {
                        for (L = P(y[e]), k = P(y[e + 1]), D = P(y[e + 2]), O = P(y[e + 3]), _ = L ^ a[0], R = O ^ a[1], A = D ^ a[2], w = k ^ a[3], C = 4, I = 1; I < n; I++) b = l[_ >>> 24] ^ u[R >> 16 & 255] ^ d[A >> 8 & 255] ^ c[255 & w] ^ a[C], T = l[R >>> 24] ^ u[A >> 16 & 255] ^ d[w >> 8 & 255] ^ c[255 & _] ^ a[C + 1], E = l[A >>> 24] ^ u[w >> 16 & 255] ^ d[_ >> 8 & 255] ^ c[255 & R] ^ a[C + 2], S = l[w >>> 24] ^ u[_ >> 16 & 255] ^ d[R >> 8 & 255] ^ c[255 & A] ^ a[C + 3], _ = b, R = T, A = E, w = S, C += 4;
                        b = o[_ >>> 24] << 24 ^ o[R >> 16 & 255] << 16 ^ o[A >> 8 & 255] << 8 ^ o[255 & w] ^ a[C], T = o[R >>> 24] << 24 ^ o[A >> 16 & 255] << 16 ^ o[w >> 8 & 255] << 8 ^ o[255 & _] ^ a[C + 1], E = o[A >>> 24] << 24 ^ o[w >> 16 & 255] << 16 ^ o[_ >> 8 & 255] << 8 ^ o[255 & R] ^ a[C + 2], S = o[w >>> 24] << 24 ^ o[_ >> 16 & 255] << 16 ^ o[R >> 8 & 255] << 8 ^ o[255 & A] ^ a[C + 3], C += 3, m[e] = P(b ^ f), m[e + 1] = P(S ^ p), m[e + 2] = P(E ^ g), m[e + 3] = P(T ^ v), f = L, p = k, g = D, v = O, e += 4
                    }
                    return i ? function x(t) {
                        var e = t.byteLength,
                            r = e && new DataView(t).getUint8(e - 1);
                        return r ? t.slice(0, e - r) : t
                    }(m.buffer) : m.buffer
                }, t.prototype.destroy = function() {
                    this.key = undefined, this.keySize = undefined, this.ksRows = undefined, this.sBox = undefined, this.invSBox = undefined, this.subMix = undefined, this.invSubMix = undefined, this.keySchedule = undefined, this.invKeySchedule = undefined, this.rcon = undefined
                }, t
            }(),
            a = r(2),
            c = r(0),
            o = r(1),
            i = r(4);
        var h = Object(i.a)(),
            n = function() {
                function s(t, e) {
                    var r = (2 < arguments.length && arguments[2] !== undefined ? arguments[2] : {}).removePKCS7Padding,
                        i = r === undefined || r;
                    if (function a(t, e) {
                            if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function")
                        }(this, s), this.logEnabled = !0, this.observer = t, this.config = e, this.removePKCS7Padding = i) try {
                        var n = h.crypto;
                        n && (this.subtle = n.subtle || n.webkitSubtle)
                    } catch (o) {}
                    this.disableWebCrypto = !this.subtle
                }
                return s.prototype.isSync = function() {
                    return this.disableWebCrypto && this.config.enableSoftwareAES
                }, s.prototype.decrypt = function(e, r, i, n) {
                    var a = this;
                    if (this.disableWebCrypto && this.config.enableSoftwareAES) {
                        this.logEnabled && (c.b.log("JS AES decrypt"), this.logEnabled = !1);
                        var t = this.decryptor;
                        t || (this.decryptor = t = new d), t.expandKey(r), n(t.decrypt(e, 0, i, this.removePKCS7Padding))
                    } else {
                        this.logEnabled && (c.b.log("WebCrypto AES decrypt"), this.logEnabled = !1);
                        var o = this.subtle;
                        this.key !== r && (this.key = r, this.fastAesKey = new u(o, r)), this.fastAesKey.expandKey().then(function(t) {
                            new l(o, i).decrypt(e, t)["catch"](function(t) {
                                a.onWebCryptoError(t, e, r, i, n)
                            }).then(function(t) {
                                n(t)
                            })
                        })["catch"](function(t) {
                            a.onWebCryptoError(t, e, r, i, n)
                        })
                    }
                }, s.prototype.onWebCryptoError = function(t, e, r, i, n) {
                    this.config.enableSoftwareAES ? (c.b.log("WebCrypto Error, disable WebCrypto API"), this.disableWebCrypto = !0, this.logEnabled = !0, this.decrypt(e, r, i, n)) : (c.b.error("decrypting error : " + t.message), this.observer.trigger(o.a.ERROR, {
                        type: a.b.MEDIA_ERROR,
                        details: a.a.FRAG_DECRYPT_ERROR,
                        fatal: !0,
                        reason: t.message
                    }))
                }, s.prototype.destroy = function() {
                    var t = this.decryptor;
                    t && (t.destroy(), this.decryptor = undefined)
                }, s
            }();
        e.a = n
    }, function(t, e, r) {
        "use strict";
        var h = r(0),
            l = r(1);
        var s = Math.pow(2, 32) - 1,
            i = function() {
                function g(t, e) {
                    ! function r(t, e) {
                        if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function")
                    }(this, g), this.observer = t, this.remuxer = e
                }
                return g.prototype.resetTimeStamp = function(t) {
                    this.initPTS = t
                }, g.prototype.resetInitSegment = function(t, e, r, i) {
                    if (t && t.byteLength) {
                        var n = this.initData = g.parseInitSegment(t);
                        null == e && (e = "mp4a.40.5"), null == r && (r = "avc1.42e01e");
                        var a = {};
                        n.audio && n.video ? a.audiovideo = {
                            container: "video/mp4",
                            codec: e + "," + r,
                            initSegment: i ? t : null
                        } : (n.audio && (a.audio = {
                            container: "audio/mp4",
                            codec: e,
                            initSegment: i ? t : null
                        }), n.video && (a.video = {
                            container: "video/mp4",
                            codec: r,
                            initSegment: i ? t : null
                        })), this.observer.trigger(l.a.FRAG_PARSING_INIT_SEGMENT, {
                            tracks: a
                        })
                    } else e && (this.audioCodec = e), r && (this.videoCodec = r)
                }, g.probe = function(t) {
                    return 0 < g.findBox({
                        data: t,
                        start: 0,
                        end: Math.min(t.length, 16384)
                    }, ["moof"]).length
                }, g.bin2str = function(t) {
                    return String.fromCharCode.apply(null, t)
                }, g.readUint16 = function(t, e) {
                    t.data && (e += t.start, t = t.data);
                    var r = t[e] << 8 | t[e + 1];
                    return r < 0 ? 65536 + r : r
                }, g.readUint32 = function(t, e) {
                    t.data && (e += t.start, t = t.data);
                    var r = t[e] << 24 | t[e + 1] << 16 | t[e + 2] << 8 | t[e + 3];
                    return r < 0 ? 4294967296 + r : r
                }, g.writeUint32 = function(t, e, r) {
                    t.data && (e += t.start, t = t.data), t[e] = r >> 24, t[e + 1] = r >> 16 & 255, t[e + 2] = r >> 8 & 255, t[e + 3] = 255 & r
                }, g.findBox = function(t, e) {
                    var r = [],
                        i = void 0,
                        n = void 0,
                        a = void 0,
                        o = void 0,
                        s = void 0,
                        l = void 0;
                    if (t.data ? (s = t.start, a = t.end, t = t.data) : (s = 0, a = t.byteLength), !e.length) return null;
                    for (i = s; i < a;) l = 1 < (n = g.readUint32(t, i)) ? i + n : a, g.bin2str(t.subarray(i + 4, i + 8)) === e[0] && (1 === e.length ? r.push({
                        data: t,
                        start: i + 8,
                        end: l
                    }) : (o = g.findBox({
                        data: t,
                        start: i + 8,
                        end: l
                    }, e.slice(1))).length && (r = r.concat(o))), i = l;
                    return r
                }, g.parseSegmentIndex = function(t) {
                    var e = g.findBox(t, ["moov"])[0],
                        r = e ? e.end : null,
                        i = 0,
                        n = g.findBox(t, ["sidx"]),
                        a = void 0;
                    if (!n || !n[0]) return null;
                    a = [];
                    var o = (n = n[0]).data[0],
                        s = g.readUint32(n, i = 0 === o ? 8 : 16);
                    i += 4;
                    i += 0 === o ? 8 : 16, i += 2;
                    var l = n.end + 0,
                        u = g.readUint16(n, i);
                    i += 2;
                    for (var d = 0; d < u; d++) {
                        var c = i,
                            h = g.readUint32(n, c);
                        c += 4;
                        var f = 2147483647 & h;
                        if (1 === (2147483648 & h) >>> 31) return void console.warn("SIDX has hierarchical references (not supported)");
                        var p = g.readUint32(n, c);
                        c += 4, a.push({
                            referenceSize: f,
                            subsegmentDuration: p,
                            info: {
                                duration: p / s,
                                start: l,
                                end: l + f - 1
                            }
                        }), l += f, i = c += 4
                    }
                    return {
                        earliestPresentationTime: 0,
                        timescale: s,
                        version: o,
                        referencesCount: u,
                        references: a,
                        moovEndOffset: r
                    }
                }, g.parseInitSegment = function(t) {
                    var c = [];
                    return g.findBox(t, ["moov", "trak"]).forEach(function(t) {
                        var e = g.findBox(t, ["tkhd"])[0];
                        if (e) {
                            var r = e.data[e.start],
                                i = 0 === r ? 12 : 20,
                                n = g.readUint32(e, i),
                                a = g.findBox(t, ["mdia", "mdhd"])[0];
                            if (a) {
                                r = a.data[a.start];
                                var o = g.readUint32(a, i = 0 === r ? 12 : 20),
                                    s = g.findBox(t, ["mdia", "hdlr"])[0];
                                if (s) {
                                    var l = {
                                        soun: "audio",
                                        vide: "video"
                                    } [g.bin2str(s.data.subarray(s.start + 8, s.start + 12))];
                                    if (l) {
                                        var u = g.findBox(t, ["mdia", "minf", "stbl", "stsd"]);
                                        if (u.length) {
                                            u = u[0];
                                            var d = g.bin2str(u.data.subarray(u.start + 12, u.start + 16));
                                            h.b.log("MP4Demuxer:" + l + ":" + d + " found")
                                        }
                                        c[n] = {
                                            timescale: o,
                                            type: l
                                        }, c[l] = {
                                            timescale: o,
                                            id: n
                                        }
                                    }
                                }
                            }
                        }
                    }), c
                }, g.getStartDTS = function(n, t) {
                    var e, r, i = void 0;
                    return i = g.findBox(t, ["moof", "traf"]), e = [].concat.apply([], i.map(function(i) {
                        return g.findBox(i, ["tfhd"]).map(function(t) {
                            var e, r;
                            return e = g.readUint32(t, 4), r = n[e].timescale || 9e4, g.findBox(i, ["tfdt"]).map(function(t) {
                                var e, r = void 0;
                                return e = t.data[t.start], r = g.readUint32(t, 4), 1 === e && (r *= Math.pow(2, 32), r += g.readUint32(t, 8)), r
                            })[0] / r
                        })
                    })), r = Math.min.apply(null, e), isFinite(r) ? r : 0
                }, g.offsetStartDTS = function(i, t, o) {
                    g.findBox(t, ["moof", "traf"]).map(function(r) {
                        return g.findBox(r, ["tfhd"]).map(function(t) {
                            var e = g.readUint32(t, 4),
                                a = i[e].timescale || 9e4;
                            g.findBox(r, ["tfdt"]).map(function(t) {
                                var e = t.data[t.start],
                                    r = g.readUint32(t, 4);
                                if (0 === e) g.writeUint32(t, 4, r - o * a);
                                else {
                                    r *= Math.pow(2, 32), r += g.readUint32(t, 8), r -= o * a, r = Math.max(r, 0);
                                    var i = Math.floor(r / (s + 1)),
                                        n = Math.floor(r % (s + 1));
                                    g.writeUint32(t, 4, i), g.writeUint32(t, 8, n)
                                }
                            })
                        })
                    })
                }, g.prototype.append = function(t, e, r, i) {
                    var n = this.initData;
                    n || (this.resetInitSegment(t, this.audioCodec, this.videoCodec, !1), n = this.initData);
                    var a, o = this.initPTS;
                    if (o === undefined) {
                        var s = g.getStartDTS(n, t);
                        this.initPTS = o = s - e, this.observer.trigger(l.a.INIT_PTS_FOUND, {
                            initPTS: o
                        })
                    }
                    g.offsetStartDTS(n, t, o), a = g.getStartDTS(n, t), this.remuxer.remux(n.audio, n.video, null, null, a, r, i, t)
                }, g.prototype.destroy = function() {}, g
            }();
        e.a = i
    }, function(t, e, r) {
        "use strict";
        var tt = r(1),
            et = r(2),
            v = r(8),
            p = r(3),
            rt = r(0),
            i = r(4);

        function n(t, e) {
            return 255 === t[e] && 240 == (246 & t[e + 1])
        }

        function l(t, e) {
            return 1 & t[e + 1] ? 7 : 9
        }

        function u(t, e) {
            return (3 & t[e + 3]) << 11 | t[e + 4] << 3 | (224 & t[e + 5]) >>> 5
        }

        function y(t, e) {
            return !!(e + 1 < t.length && n(t, e))
        }

        function a(t, e) {
            if (e + 1 < t.length && n(t, e)) {
                var r = l(t, e);
                e + 5 < t.length && (r = u(t, e));
                var i = e + r;
                if (i === t.length || i + 1 < t.length && n(t, i)) return !0
            }
            return !1
        }

        function m(t, e, r, i, n) {
            if (!t.samplerate) {
                var a = function h(t, e, r, i) {
                    var n, a = void 0,
                        o = void 0,
                        s = void 0,
                        l = void 0,
                        u = navigator.userAgent.toLowerCase(),
                        d = i,
                        c = [96e3, 88200, 64e3, 48e3, 44100, 32e3, 24e3, 22050, 16e3, 12e3, 11025, 8e3, 7350];
                    if (a = 1 + ((192 & e[r + 2]) >>> 6), n = (60 & e[r + 2]) >>> 2, !(c.length - 1 < n)) return s = (1 & e[r + 2]) << 2, s |= (192 & e[r + 3]) >>> 6, rt.b.log("manifest codec:" + i + ",ADTS data:type:" + a + ",sampleingIndex:" + n + "[" + c[n] + "Hz],channelConfig:" + s), o = /firefox/i.test(u) ? 6 <= n ? (a = 5, l = new Array(4), n - 3) : (a = 2, l = new Array(2), n) : -1 !== u.indexOf("android") ? (a = 2, l = new Array(2), n) : (a = 5, l = new Array(4), i && (-1 !== i.indexOf("mp4a.40.29") || -1 !== i.indexOf("mp4a.40.5")) || !i && 6 <= n ? n - 3 : ((i && -1 !== i.indexOf("mp4a.40.2") && (6 <= n && 1 === s || /vivaldi/i.test(u)) || !i && 1 === s) && (a = 2, l = new Array(2)), n)), l[0] = a << 3, l[0] |= (14 & n) >> 1, l[1] |= (1 & n) << 7, l[1] |= s << 3, 5 === a && (l[1] |= (14 & o) >> 1, l[2] = (1 & o) << 7, l[2] |= 8, l[3] = 0), {
                        config: l,
                        samplerate: c[n],
                        channelCount: s,
                        codec: "mp4a.40." + a,
                        manifestCodec: d
                    };
                    t.trigger(tt.a.ERROR, {
                        type: et.b.MEDIA_ERROR,
                        details: et.a.FRAG_PARSING_ERROR,
                        fatal: !0,
                        reason: "invalid ADTS sampling index:" + n
                    })
                }(e, r, i, n);
                t.config = a.config, t.samplerate = a.samplerate, t.channelCount = a.channelCount, t.codec = a.codec, t.manifestCodec = a.manifestCodec, rt.b.log("parsed codec:" + t.codec + ",rate:" + a.samplerate + ",nb channel:" + a.channelCount)
            }
        }

        function c(t, e, r, i, n) {
            var a, o = void 0,
                s = t.length;
            return a = l(t, e), o = u(t, e), 0 < (o -= a) && e + a + o <= s ? {
                headerLength: a,
                frameLength: o,
                stamp: r + i * n
            } : undefined
        }

        function b(t, e, r, i, n) {
            var a = c(e, r, i, n, function d(t) {
                return 9216e4 / t
            }(t.samplerate));
            if (a) {
                var o = a.stamp,
                    s = a.headerLength,
                    l = a.frameLength,
                    u = {
                        unit: e.subarray(r + s, r + s + l),
                        pts: o,
                        dts: o
                    };
                return t.samples.push(u), t.len += l, {
                    sample: u,
                    length: l + s
                }
            }
            return undefined
        }
        var g = r(6);
        var _ = function() {
                function n(t, e, r) {
                    ! function i(t, e) {
                        if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function")
                    }(this, n), this.observer = t, this.config = r, this.remuxer = e
                }
                return n.prototype.resetInitSegment = function(t, e, r, i) {
                    this._audioTrack = {
                        container: "audio/adts",
                        type: "audio",
                        id: 0,
                        sequenceNumber: 0,
                        isAAC: !0,
                        samples: [],
                        len: 0,
                        manifestCodec: e,
                        duration: i,
                        inputTimeScale: 9e4
                    }
                }, n.prototype.resetTimeStamp = function() {}, n.probe = function(t) {
                    if (!t) return !1;
                    for (var e = (g.a.getID3Data(t, 0) || []).length, r = t.length; e < r; e++)
                        if (a(t, e)) return rt.b.log("ADTS sync word found !"), !0;
                    return !1
                }, n.prototype.append = function(t, e, r, i) {
                    for (var n = this._audioTrack, a = g.a.getID3Data(t, 0) || [], o = g.a.getTimeStamp(a), s = Object(p.a)(o) ? 90 * o : 9e4 * e, l = 0, u = s, d = t.length, c = a.length, h = [{
                            pts: u,
                            dts: u,
                            data: a
                        }]; c < d - 1;)
                        if (y(t, c) && c + 5 < d) {
                            m(n, this.observer, t, c, n.manifestCodec);
                            var f = b(n, t, c, s, l);
                            if (!f) {
                                rt.b.log("Unable to parse AAC frame");
                                break
                            }
                            c += f.length, u = f.sample.pts, l++
                        } else g.a.isHeader(t, c) ? (a = g.a.getID3Data(t, c), h.push({
                            pts: u,
                            dts: u,
                            data: a
                        }), c += a.length) : c++;
                    this.remuxer.remux(n, {
                        samples: []
                    }, {
                        samples: h,
                        inputTimeScale: 9e4
                    }, {
                        samples: []
                    }, e, r, i)
                }, n.prototype.destroy = function() {}, n
            }(),
            R = r(9),
            T = {
                BitratesMap: [32, 64, 96, 128, 160, 192, 224, 256, 288, 320, 352, 384, 416, 448, 32, 48, 56, 64, 80, 96, 112, 128, 160, 192, 224, 256, 320, 384, 32, 40, 48, 56, 64, 80, 96, 112, 128, 160, 192, 224, 256, 320, 32, 48, 56, 64, 80, 96, 112, 128, 144, 160, 176, 192, 224, 256, 8, 16, 24, 32, 40, 48, 56, 64, 80, 96, 112, 128, 144, 160],
                SamplingRateMap: [44100, 48e3, 32e3, 22050, 24e3, 16e3, 11025, 12e3, 8e3],
                SamplesCoefficients: [
                    [0, 72, 144, 12],
                    [0, 0, 0, 0],
                    [0, 72, 144, 12],
                    [0, 144, 144, 12]
                ],
                BytesInSlot: [0, 1, 1, 4],
                appendFrame: function b(t, e, r, i, n) {
                    if (r + 24 > e.length) return undefined;
                    var a = this.parseHeader(e, r);
                    if (a && r + a.frameLength <= e.length) {
                        var o = i + n * (9e4 * a.samplesPerFrame / a.sampleRate),
                            s = {
                                unit: e.subarray(r, r + a.frameLength),
                                pts: o,
                                dts: o
                            };
                        return t.config = [], t.channelCount = a.channelCount, t.samplerate = a.sampleRate, t.samples.push(s), t.len += a.frameLength, {
                            sample: s,
                            length: a.frameLength
                        }
                    }
                    return undefined
                },
                parseHeader: function(t, e) {
                    var r = t[e + 1] >> 3 & 3,
                        i = t[e + 1] >> 1 & 3,
                        n = t[e + 2] >> 4 & 15,
                        a = t[e + 2] >> 2 & 3,
                        o = t[e + 2] >> 1 & 1;
                    if (1 === r || 0 === n || 15 === n || 3 === a) return undefined;
                    var s = 3 === r ? 3 - i : 3 === i ? 3 : 4,
                        l = 1e3 * T.BitratesMap[14 * s + n - 1],
                        u = 3 === r ? 0 : 2 === r ? 1 : 2,
                        d = T.SamplingRateMap[3 * u + a],
                        c = t[e + 3] >> 6 == 3 ? 1 : 2,
                        h = T.SamplesCoefficients[r][i],
                        f = T.BytesInSlot[i],
                        p = 8 * h * f;
                    return {
                        sampleRate: d,
                        channelCount: c,
                        frameLength: parseInt(h * l / d + o, 10) * f,
                        samplesPerFrame: p
                    }
                },
                isHeaderPattern: function n(t, e) {
                    return 255 === t[e] && 224 == (224 & t[e + 1]) && 0 != (6 & t[e + 1])
                },
                isHeader: function y(t, e) {
                    return !!(e + 1 < t.length && this.isHeaderPattern(t, e))
                },
                probe: function(t, e) {
                    if (e + 1 < t.length && this.isHeaderPattern(t, e)) {
                        var r = this.parseHeader(t, e),
                            i = 4;
                        r && r.frameLength && (i = r.frameLength);
                        var n = e + i;
                        if (n === t.length || n + 1 < t.length && this.isHeaderPattern(t, n)) return !0
                    }
                    return !1
                }
            },
            E = T;
        var A = function() {
            function e(t) {
                ! function r(t, e) {
                    if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function")
                }(this, e), this.data = t, this.bytesAvailable = t.byteLength, this.word = 0, this.bitsAvailable = 0
            }
            return e.prototype.loadWord = function() {
                var t = this.data,
                    e = this.bytesAvailable,
                    r = t.byteLength - e,
                    i = new Uint8Array(4),
                    n = Math.min(4, e);
                if (0 === n) throw new Error("no bytes available");
                i.set(t.subarray(r, r + n)), this.word = new DataView(i.buffer).getUint32(0), this.bitsAvailable = 8 * n, this.bytesAvailable -= n
            }, e.prototype.skipBits = function(t) {
                var e = void 0;
                this.bitsAvailable > t || (t -= this.bitsAvailable, t -= (e = t >> 3) >> 3, this.bytesAvailable -= e, this.loadWord()), this.word <<= t, this.bitsAvailable -= t
            }, e.prototype.readBits = function(t) {
                var e = Math.min(this.bitsAvailable, t),
                    r = this.word >>> 32 - e;
                return 32 < t && rt.b.error("Cannot read more than 32 bits at a time"), this.bitsAvailable -= e, 0 < this.bitsAvailable ? this.word <<= e : 0 < this.bytesAvailable && this.loadWord(), 0 < (e = t - e) && this.bitsAvailable ? r << e | this.readBits(e) : r
            }, e.prototype.skipLZ = function() {
                var t = void 0;
                for (t = 0; t < this.bitsAvailable; ++t)
                    if (0 != (this.word & 2147483648 >>> t)) return this.word <<= t, this.bitsAvailable -= t, t;
                return this.loadWord(), t + this.skipLZ()
            }, e.prototype.skipUEG = function() {
                this.skipBits(1 + this.skipLZ())
            }, e.prototype.skipEG = function() {
                this.skipBits(1 + this.skipLZ())
            }, e.prototype.readUEG = function() {
                var t = this.skipLZ();
                return this.readBits(t + 1) - 1
            }, e.prototype.readEG = function() {
                var t = this.readUEG();
                return 1 & t ? 1 + t >>> 1 : -1 * (t >>> 1)
            }, e.prototype.readBoolean = function() {
                return 1 === this.readBits(1)
            }, e.prototype.readUByte = function() {
                return this.readBits(8)
            }, e.prototype.readUShort = function() {
                return this.readBits(16)
            }, e.prototype.readUInt = function() {
                return this.readBits(32)
            }, e.prototype.skipScalingList = function(t) {
                var e = 8,
                    r = 8,
                    i = void 0;
                for (i = 0; i < t; i++) 0 !== r && (r = (e + this.readEG() + 256) % 256), e = 0 === r ? e : r
            }, e.prototype.readSPS = function() {
                var t, e, r, i, n = 0,
                    a = 0,
                    o = 0,
                    s = 0,
                    l = void 0,
                    u = void 0,
                    d = void 0,
                    c = this.readUByte.bind(this),
                    h = this.readBits.bind(this),
                    f = this.readUEG.bind(this),
                    p = this.readBoolean.bind(this),
                    g = this.skipBits.bind(this),
                    v = this.skipEG.bind(this),
                    y = this.skipUEG.bind(this),
                    m = this.skipScalingList.bind(this);
                if (c(), t = c(), h(5), g(3), c(), y(), 100 === t || 110 === t || 122 === t || 244 === t || 44 === t || 83 === t || 86 === t || 118 === t || 128 === t) {
                    var b = f();
                    if (3 === b && g(1), y(), y(), g(1), p())
                        for (u = 3 !== b ? 8 : 12, d = 0; d < u; d++) p() && m(d < 6 ? 16 : 64)
                }
                y();
                var T = f();
                if (0 === T) f();
                else if (1 === T)
                    for (g(1), v(), v(), l = f(), d = 0; d < l; d++) v();
                y(), g(1), e = f(), r = f(), 0 === (i = h(1)) && g(1), g(1), p() && (n = f(), a = f(), o = f(), s = f());
                var E = [1, 1];
                if (p() && p()) switch (c()) {
                    case 1:
                        E = [1, 1];
                        break;
                    case 2:
                        E = [12, 11];
                        break;
                    case 3:
                        E = [10, 11];
                        break;
                    case 4:
                        E = [16, 11];
                        break;
                    case 5:
                        E = [40, 33];
                        break;
                    case 6:
                        E = [24, 11];
                        break;
                    case 7:
                        E = [20, 11];
                        break;
                    case 8:
                        E = [32, 11];
                        break;
                    case 9:
                        E = [80, 33];
                        break;
                    case 10:
                        E = [18, 11];
                        break;
                    case 11:
                        E = [15, 11];
                        break;
                    case 12:
                        E = [64, 33];
                        break;
                    case 13:
                        E = [160, 99];
                        break;
                    case 14:
                        E = [4, 3];
                        break;
                    case 15:
                        E = [3, 2];
                        break;
                    case 16:
                        E = [2, 1];
                        break;
                    case 255:
                        E = [c() << 8 | c(), c() << 8 | c()]
                }
                return {
                    width: Math.ceil(16 * (e + 1) - 2 * n - 2 * a),
                    height: (2 - i) * (r + 1) * 16 - (i ? 2 : 4) * (o + s),
                    pixelRatio: E
                }
            }, e.prototype.readSliceType = function() {
                return this.readUByte(), this.readUEG(), this.readUEG()
            }, e
        }();
        var o = function() {
            function a(t, e, r, i) {
                ! function n(t, e) {
                    if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function")
                }(this, a), this.decryptdata = r, this.discardEPB = i, this.decrypter = new v.a(t, e, {
                    removePKCS7Padding: !1
                })
            }
            return a.prototype.decryptBuffer = function(t, e) {
                this.decrypter.decrypt(t, this.decryptdata.key.buffer, this.decryptdata.iv.buffer, e)
            }, a.prototype.decryptAacSample = function(e, r, i, n) {
                var a = e[r].unit,
                    t = a.subarray(16, a.length - a.length % 16),
                    o = t.buffer.slice(t.byteOffset, t.byteOffset + t.length),
                    s = this;
                this.decryptBuffer(o, function(t) {
                    t = new Uint8Array(t), a.set(t, 16), n || s.decryptAacSamples(e, r + 1, i)
                })
            }, a.prototype.decryptAacSamples = function(t, e, r) {
                for (;; e++) {
                    if (e >= t.length) return void r();
                    if (!(t[e].unit.length < 32)) {
                        var i = this.decrypter.isSync();
                        if (this.decryptAacSample(t, e, r, i), !i) return
                    }
                }
            }, a.prototype.getAvcEncryptedData = function(t) {
                for (var e = 16 * Math.floor((t.length - 48) / 160) + 16, r = new Int8Array(e), i = 0, n = 32; n <= t.length - 16; n += 160, i += 16) r.set(t.subarray(n, n + 16), i);
                return r
            }, a.prototype.getAvcDecryptedUnit = function(t, e) {
                e = new Uint8Array(e);
                for (var r = 0, i = 32; i <= t.length - 16; i += 160, r += 16) t.set(e.subarray(r, r + 16), i);
                return t
            }, a.prototype.decryptAvcSample = function(e, r, i, n, a, o) {
                var s = this.discardEPB(a.data),
                    t = this.getAvcEncryptedData(s),
                    l = this;
                this.decryptBuffer(t.buffer, function(t) {
                    a.data = l.getAvcDecryptedUnit(s, t), o || l.decryptAvcSamples(e, r, i + 1, n)
                })
            }, a.prototype.decryptAvcSamples = function(t, e, r, i) {
                for (;; e++, r = 0) {
                    if (e >= t.length) return void i();
                    for (var n = t[e].units; !(r >= n.length); r++) {
                        var a = n[r];
                        if (!(a.length <= 48 || 1 !== a.type && 5 !== a.type)) {
                            var o = this.decrypter.isSync();
                            if (this.decryptAvcSample(t, e, r, i, a, o), !o) return
                        }
                    }
                }
            }, a
        }();
        var s = {
                video: 1,
                audio: 2,
                id3: 3,
                text: 4
            },
            w = function() {
                function C(t, e, r, i) {
                    ! function n(t, e) {
                        if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function")
                    }(this, C), this.observer = t, this.config = r, this.typeSupported = i, this.remuxer = e, this.sampleAes = null
                }
                return C.prototype.setDecryptData = function(t) {
                    null != t && null != t.key && "SAMPLE-AES" === t.method ? this.sampleAes = new o(this.observer, this.config, t, this.discardEPB) : this.sampleAes = null
                }, C.probe = function(t) {
                    var e = C._syncOffset(t);
                    return !(e < 0) && (e && rt.b.warn("MPEG2-TS detected but first sync word found @ offset " + e + ", junk ahead ?"), !0)
                }, C._syncOffset = function(t) {
                    for (var e = Math.min(1e3, t.length - 564), r = 0; r < e;) {
                        if (71 === t[r] && 71 === t[r + 188] && 71 === t[r + 376]) return r;
                        r++
                    }
                    return -1
                }, C.createTrack = function(t, e) {
                    return {
                        container: "video" === t || "audio" === t ? "video/mp2t" : undefined,
                        type: t,
                        id: s[t],
                        pid: -1,
                        inputTimeScale: 9e4,
                        sequenceNumber: 0,
                        samples: [],
                        len: 0,
                        dropped: "video" === t ? 0 : undefined,
                        isAAC: "audio" === t || undefined,
                        duration: "audio" === t ? e : undefined
                    }
                }, C.prototype.resetInitSegment = function(t, e, r, i) {
                    this.pmtParsed = !1, this._pmtId = -1, this._avcTrack = C.createTrack("video", i), this._audioTrack = C.createTrack("audio", i), this._id3Track = C.createTrack("id3", i), this._txtTrack = C.createTrack("text", i), this.aacOverFlow = null, this.aacLastPTS = null, this.avcSample = null, this.audioCodec = e, this.videoCodec = r, this._duration = i
                }, C.prototype.resetTimeStamp = function() {}, C.prototype.append = function(t, e, r, i) {
                    var n = void 0,
                        a = t.length,
                        o = void 0,
                        s = void 0,
                        l = void 0,
                        u = void 0,
                        d = !1;
                    this.contiguous = r;
                    var c = this.pmtParsed,
                        h = this._avcTrack,
                        f = this._audioTrack,
                        p = this._id3Track,
                        g = h.pid,
                        v = f.pid,
                        y = p.pid,
                        m = this._pmtId,
                        b = h.pesData,
                        T = f.pesData,
                        E = p.pesData,
                        S = this._parsePAT,
                        _ = this._parsePMT,
                        R = this._parsePES,
                        A = this._parseAVCPES.bind(this),
                        w = this._parseAACPES.bind(this),
                        L = this._parseMPEGPES.bind(this),
                        k = this._parseID3PES.bind(this),
                        D = C._syncOffset(t);
                    for (a -= (a + D) % 188, n = D; n < a; n += 188)
                        if (71 === t[n]) {
                            if (o = !!(64 & t[n + 1]), s = ((31 & t[n + 1]) << 8) + t[n + 2], 1 < (48 & t[n + 3]) >> 4) {
                                if ((l = n + 5 + t[n + 4]) === n + 188) continue
                            } else l = n + 4;
                            switch (s) {
                                case g:
                                    o && (b && (u = R(b)) && u.pts !== undefined && A(u, !1), b = {
                                        data: [],
                                        size: 0
                                    }), b && (b.data.push(t.subarray(l, n + 188)), b.size += n + 188 - l);
                                    break;
                                case v:
                                    o && (T && (u = R(T)) && u.pts !== undefined && (f.isAAC ? w(u) : L(u)), T = {
                                        data: [],
                                        size: 0
                                    }), T && (T.data.push(t.subarray(l, n + 188)), T.size += n + 188 - l);
                                    break;
                                case y:
                                    o && (E && (u = R(E)) && u.pts !== undefined && k(u), E = {
                                        data: [],
                                        size: 0
                                    }), E && (E.data.push(t.subarray(l, n + 188)), E.size += n + 188 - l);
                                    break;
                                case 0:
                                    o && (l += t[l] + 1), m = this._pmtId = S(t, l);
                                    break;
                                case m:
                                    o && (l += t[l] + 1);
                                    var O = _(t, l, !0 === this.typeSupported.mpeg || !0 === this.typeSupported.mp3, null != this.sampleAes);
                                    0 < (g = O.avc) && (h.pid = g), 0 < (v = O.audio) && (f.pid = v, f.isAAC = O.isAAC), 0 < (y = O.id3) && (p.pid = y), d && !c && (rt.b.log("reparse from beginning"), d = !1, n = D - 188), c = this.pmtParsed = !0;
                                    break;
                                case 17:
                                case 8191:
                                    break;
                                default:
                                    d = !0
                            }
                        } else this.observer.trigger(tt.a.ERROR, {
                            type: et.b.MEDIA_ERROR,
                            details: et.a.FRAG_PARSING_ERROR,
                            fatal: !1,
                            reason: "TS packet did not start with 0x47"
                        });
                    b && (u = R(b)) && u.pts !== undefined ? (A(u, !0), h.pesData = null) : h.pesData = b, T && (u = R(T)) && u.pts !== undefined ? (f.isAAC ? w(u) : L(u), f.pesData = null) : (T && T.size && rt.b.log("last AAC PES packet truncated,might overlap between fragments"), f.pesData = T), E && (u = R(E)) && u.pts !== undefined ? (k(u), p.pesData = null) : p.pesData = E, null == this.sampleAes ? this.remuxer.remux(f, h, p, this._txtTrack, e, r, i) : this.decryptAndRemux(f, h, p, this._txtTrack, e, r, i)
                }, C.prototype.decryptAndRemux = function(t, e, r, i, n, a, o) {
                    if (t.samples && t.isAAC) {
                        var s = this;
                        this.sampleAes.decryptAacSamples(t.samples, 0, function() {
                            s.decryptAndRemuxAvc(t, e, r, i, n, a, o)
                        })
                    } else this.decryptAndRemuxAvc(t, e, r, i, n, a, o)
                }, C.prototype.decryptAndRemuxAvc = function(t, e, r, i, n, a, o) {
                    if (e.samples) {
                        var s = this;
                        this.sampleAes.decryptAvcSamples(e.samples, 0, 0, function() {
                            s.remuxer.remux(t, e, r, i, n, a, o)
                        })
                    } else this.remuxer.remux(t, e, r, i, n, a, o)
                }, C.prototype.destroy = function() {
                    this._initPTS = this._initDTS = undefined, this._duration = 0
                }, C.prototype._parsePAT = function(t, e) {
                    return (31 & t[e + 10]) << 8 | t[e + 11]
                }, C.prototype._parsePMT = function(t, e, r, i) {
                    var n, a = void 0,
                        o = {
                            audio: -1,
                            avc: -1,
                            id3: -1,
                            isAAC: !0
                        };
                    for (n = e + 3 + ((15 & t[e + 1]) << 8 | t[e + 2]) - 4, e += 12 + ((15 & t[e + 10]) << 8 | t[e + 11]); e < n;) {
                        switch (a = (31 & t[e + 1]) << 8 | t[e + 2], t[e]) {
                            case 207:
                                if (!i) {
                                    rt.b.log("unkown stream type:" + t[e]);
                                    break
                                }
                                case 15:
                                    -1 === o.audio && (o.audio = a);
                                    break;
                                case 21:
                                    -1 === o.id3 && (o.id3 = a);
                                    break;
                                case 219:
                                    if (!i) {
                                        rt.b.log("unkown stream type:" + t[e]);
                                        break
                                    }
                                    case 27:
                                        -1 === o.avc && (o.avc = a);
                                        break;
                                    case 3:
                                    case 4:
                                        r ? -1 === o.audio && (o.audio = a, o.isAAC = !1) : rt.b.log("MPEG audio found, not supported in this browser for now");
                                        break;
                                    case 36:
                                        rt.b.warn("HEVC stream type found, not supported for now");
                                        break;
                                    default:
                                        rt.b.log("unkown stream type:" + t[e])
                        }
                        e += 5 + ((15 & t[e + 3]) << 8 | t[e + 4])
                    }
                    return o
                }, C.prototype._parsePES = function(t) {
                    var e = 0,
                        r = void 0,
                        i = void 0,
                        n = void 0,
                        a = void 0,
                        o = void 0,
                        s = void 0,
                        l = void 0,
                        u = void 0,
                        d = t.data;
                    if (!t || 0 === t.size) return null;
                    for (; d[0].length < 19 && 1 < d.length;) {
                        var c = new Uint8Array(d[0].length + d[1].length);
                        c.set(d[0]), c.set(d[1], d[0].length), d[0] = c, d.splice(1, 1)
                    }
                    if (1 !== ((r = d[0])[0] << 16) + (r[1] << 8) + r[2]) return null;
                    if ((n = (r[4] << 8) + r[5]) && n > t.size - 6) return null;
                    192 & (i = r[7]) && (4294967295 < (s = 536870912 * (14 & r[9]) + 4194304 * (255 & r[10]) + 16384 * (254 & r[11]) + 128 * (255 & r[12]) + (254 & r[13]) / 2) && (s -= 8589934592), 64 & i ? (4294967295 < (l = 536870912 * (14 & r[14]) + 4194304 * (255 & r[15]) + 16384 * (254 & r[16]) + 128 * (255 & r[17]) + (254 & r[18]) / 2) && (l -= 8589934592), 54e5 < s - l && (rt.b.warn(Math.round((s - l) / 9e4) + "s delta between PTS and DTS, align them"), s = l)) : l = s), u = (a = r[8]) + 9, t.size -= u, o = new Uint8Array(t.size);
                    for (var h = 0, f = d.length; h < f; h++) {
                        var p = (r = d[h]).byteLength;
                        if (u) {
                            if (p < u) {
                                u -= p;
                                continue
                            }
                            r = r.subarray(u), p -= u, u = 0
                        }
                        o.set(r, e), e += p
                    }
                    return n && (n -= a + 3), {
                        data: o,
                        pts: s,
                        dts: l,
                        len: n
                    }
                }, C.prototype.pushAccesUnit = function(t, e) {
                    if (t.units.length && t.frame) {
                        var r = e.samples,
                            i = r.length;
                        !this.config.forceKeyFrameOnDiscontinuity || !0 === t.key || e.sps && (i || this.contiguous) ? (t.id = i, r.push(t)) : e.dropped++
                    }
                    t.debug.length && rt.b.log(t.pts + "/" + t.dts + ":" + t.debug)
                }, C.prototype._parseAVCPES = function(p, t) {
                    var g = this,
                        v = this._avcTrack,
                        e = this._parseAVCNALu(p.data),
                        y = void 0,
                        m = this.avcSample,
                        b = void 0,
                        T = !1,
                        E = void 0,
                        S = this.pushAccesUnit.bind(this),
                        _ = function _(t, e, r, i) {
                            return {
                                key: t,
                                pts: e,
                                dts: r,
                                units: [],
                                debug: i
                            }
                        };
                    p.data = null, m && e.length && !v.audFound && (S(m, v), m = this.avcSample = _(!1, p.pts, p.dts, "")), e.forEach(function(t) {
                        switch (t.type) {
                            case 1:
                                b = !0, m || (m = g.avcSample = _(!0, p.pts, p.dts, "")), m.frame = !0;
                                var e = t.data;
                                if (T && 4 < e.length) {
                                    var r = new A(e).readSliceType();
                                    2 !== r && 4 !== r && 7 !== r && 9 !== r || (m.key = !0)
                                }
                                break;
                            case 5:
                                b = !0, m || (m = g.avcSample = _(!0, p.pts, p.dts, "")), m.key = !0, m.frame = !0;
                                break;
                            case 6:
                                b = !0, (y = new A(g.discardEPB(t.data))).readUByte();
                                for (var i = 0, n = 0, a = !1, o = 0; !a && 1 < y.bytesAvailable;) {
                                    for (i = 0; i += o = y.readUByte(), 255 === o;);
                                    for (n = 0; n += o = y.readUByte(), 255 === o;);
                                    if (4 === i && 0 !== y.bytesAvailable) {
                                        if (a = !0, 181 === y.readUByte())
                                            if (49 === y.readUShort())
                                                if (1195456820 === y.readUInt())
                                                    if (3 === y.readUByte()) {
                                                        var s = y.readUByte(),
                                                            l = 31 & s,
                                                            u = [s, y.readUByte()];
                                                        for (E = 0; E < l; E++) u.push(y.readUByte()), u.push(y.readUByte()), u.push(y.readUByte());
                                                        g._insertSampleInOrder(g._txtTrack.samples, {
                                                            type: 3,
                                                            pts: p.pts,
                                                            bytes: u
                                                        })
                                                    }
                                    } else if (n < y.bytesAvailable)
                                        for (E = 0; E < n; E++) y.readUByte()
                                }
                                break;
                            case 7:
                                if (T = b = !0, !v.sps) {
                                    var d = (y = new A(t.data)).readSPS();
                                    v.width = d.width, v.height = d.height, v.pixelRatio = d.pixelRatio, v.sps = [t.data], v.duration = g._duration;
                                    var c = t.data.subarray(1, 4),
                                        h = "avc1.";
                                    for (E = 0; E < 3; E++) {
                                        var f = c[E].toString(16);
                                        f.length < 2 && (f = "0" + f), h += f
                                    }
                                    v.codec = h
                                }
                                break;
                            case 8:
                                b = !0, v.pps || (v.pps = [t.data]);
                                break;
                            case 9:
                                b = !1, v.audFound = !0, m && S(m, v), m = g.avcSample = _(!1, p.pts, p.dts, "");
                                break;
                            case 12:
                                b = !1;
                                break;
                            default:
                                b = !1, m && (m.debug += "unknown NAL " + t.type + " ")
                        }
                        m && b && m.units.push(t)
                    }), t && m && (S(m, v), this.avcSample = null)
                }, C.prototype._insertSampleInOrder = function(t, e) {
                    var r = t.length;
                    if (0 < r) {
                        if (e.pts >= t[r - 1].pts) t.push(e);
                        else
                            for (var i = r - 1; 0 <= i; i--)
                                if (e.pts < t[i].pts) {
                                    t.splice(i, 0, e);
                                    break
                                }
                    } else t.push(e)
                }, C.prototype._getLastNalUnit = function() {
                    var t = this.avcSample,
                        e = void 0;
                    if (!t || 0 === t.units.length) {
                        var r = this._avcTrack.samples;
                        t = r[r.length - 1]
                    }
                    if (t) {
                        var i = t.units;
                        e = i[i.length - 1]
                    }
                    return e
                }, C.prototype._parseAVCNALu = function(t) {
                    var e = 0,
                        r = t.byteLength,
                        i = void 0,
                        n = void 0,
                        a = this._avcTrack,
                        o = a.naluState || 0,
                        s = o,
                        l = [],
                        u = void 0,
                        d = -1,
                        c = void 0;
                    for (-1 === o && (c = 31 & t[d = 0], o = 0, e = 1); e < r;)
                        if (i = t[e++], o)
                            if (1 !== o)
                                if (i)
                                    if (1 === i) {
                                        if (0 <= d) u = {
                                            data: t.subarray(d, e - o - 1),
                                            type: c
                                        }, l.push(u);
                                        else {
                                            var h = this._getLastNalUnit();
                                            if (h && (s && e <= 4 - s && h.state && (h.data = h.data.subarray(0, h.data.byteLength - s)), 0 < (n = e - o - 1))) {
                                                var f = new Uint8Array(h.data.byteLength + n);
                                                f.set(h.data, 0), f.set(t.subarray(0, n), h.data.byteLength), h.data = f
                                            }
                                        }
                                        o = e < r ? (c = 31 & t[d = e], 0) : -1
                                    } else o = 0;
                    else o = 3;
                    else o = i ? 0 : 2;
                    else o = i ? 0 : 1;
                    if (0 <= d && 0 <= o && (u = {
                            data: t.subarray(d, r),
                            type: c,
                            state: o
                        }, l.push(u)), 0 === l.length) {
                        var p = this._getLastNalUnit();
                        if (p) {
                            var g = new Uint8Array(p.data.byteLength + t.byteLength);
                            g.set(p.data, 0), g.set(t, p.data.byteLength), p.data = g
                        }
                    }
                    return a.naluState = o, l
                }, C.prototype.discardEPB = function(t) {
                    for (var e, r = t.byteLength, i = [], n = 1, a = void 0; n < r - 2;) 0 === t[n] && 0 === t[n + 1] && 3 === t[n + 2] ? (i.push(n + 2), n += 2) : n++;
                    if (0 === i.length) return t;
                    e = r - i.length, a = new Uint8Array(e);
                    var o = 0;
                    for (n = 0; n < e; o++, n++) o === i[0] && (o++, i.shift()), a[n] = t[o];
                    return a
                }, C.prototype._parseAACPES = function(t) {
                    var e, r, i = this._audioTrack,
                        n = t.data,
                        a = t.pts,
                        o = this.aacOverFlow,
                        s = this.aacLastPTS,
                        l = void 0,
                        u = void 0,
                        d = void 0;
                    if (o) {
                        var c = new Uint8Array(o.byteLength + n.byteLength);
                        c.set(o, 0), c.set(n, o.byteLength), n = c
                    }
                    for (u = 0, e = n.length; u < e - 1 && !y(n, u); u++);
                    if (u) {
                        var h = void 0,
                            f = void 0;
                        if (f = u < e - 1 ? (h = "AAC PES did not start with ADTS header,offset:" + u, !1) : (h = "no ADTS header found in AAC PES", !0), rt.b.warn("parsing error:" + h), this.observer.trigger(tt.a.ERROR, {
                                type: et.b.MEDIA_ERROR,
                                details: et.a.FRAG_PARSING_ERROR,
                                fatal: f,
                                reason: h
                            }), f) return
                    }
                    if (m(i, this.observer, n, u, this.audioCodec), l = 0, r = i.samplerate, o && s) {
                        var p = s + 9216e4 / r;
                        1 < Math.abs(p - a) && (rt.b.log("AAC: align PTS for overlapping frames by " + Math.round((p - a) / 90)), a = p)
                    }
                    for (; u < e;)
                        if (y(n, u) && u + 5 < e) {
                            var g = b(i, n, u, a, l);
                            if (!g) break;
                            u += g.length, d = g.sample.pts, l++
                        } else u++;
                    o = u < e ? n.subarray(u, e) : null, this.aacOverFlow = o, this.aacLastPTS = d
                }, C.prototype._parseMPEGPES = function(t) {
                    for (var e = t.data, r = e.length, i = 0, n = 0, a = t.pts; n < r;)
                        if (E.isHeader(e, n)) {
                            var o = E.appendFrame(this._audioTrack, e, n, a, i);
                            if (!o) break;
                            n += o.length, i++
                        } else n++
                }, C.prototype._parseID3PES = function(t) {
                    this._id3Track.samples.push(t)
                }, C
            }();
        var L = function() {
            function n(t, e, r) {
                ! function i(t, e) {
                    if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function")
                }(this, n), this.observer = t, this.config = r, this.remuxer = e
            }
            return n.prototype.resetInitSegment = function(t, e, r, i) {
                this._audioTrack = {
                    container: "audio/mpeg",
                    type: "audio",
                    id: -1,
                    sequenceNumber: 0,
                    isAAC: !1,
                    samples: [],
                    len: 0,
                    manifestCodec: e,
                    duration: i,
                    inputTimeScale: 9e4
                }
            }, n.prototype.resetTimeStamp = function() {}, n.probe = function(t) {
                var e = void 0,
                    r = void 0,
                    i = g.a.getID3Data(t, 0);
                if (i && g.a.getTimeStamp(i) !== undefined)
                    for (e = i.length, r = Math.min(t.length - 1, e + 100); e < r; e++)
                        if (E.probe(t, e)) return rt.b.log("MPEG Audio sync word found !"), !0;
                return !1
            }, n.prototype.append = function(t, e, r, i) {
                for (var n = g.a.getID3Data(t, 0), a = g.a.getTimeStamp(n), o = a ? 90 * a : 9e4 * e, s = n.length, l = t.length, u = 0, d = 0, c = this._audioTrack, h = [{
                        pts: o,
                        dts: o,
                        data: n
                    }]; s < l;)
                    if (E.isHeader(t, s)) {
                        var f = E.appendFrame(c, t, s, o, u);
                        if (!f) break;
                        s += f.length, d = f.sample.pts, u++
                    } else g.a.isHeader(t, s) ? (n = g.a.getID3Data(t, s), h.push({
                        pts: d,
                        dts: d,
                        data: n
                    }), s += n.length) : s++;
                this.remuxer.remux(c, {
                    samples: []
                }, {
                    samples: h,
                    inputTimeScale: 9e4
                }, {
                    samples: []
                }, e, r, i)
            }, n.prototype.destroy = function() {}, n
        }();
        var W = function() {
            function t() {
                ! function r(t, e) {
                    if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function")
                }(this, t)
            }
            return t.getSilentFrame = function(t, e) {
                switch (t) {
                    case "mp4a.40.2":
                        if (1 === e) return new Uint8Array([0, 200, 0, 128, 35, 128]);
                        if (2 === e) return new Uint8Array([33, 0, 73, 144, 2, 25, 0, 35, 128]);
                        if (3 === e) return new Uint8Array([0, 200, 0, 128, 32, 132, 1, 38, 64, 8, 100, 0, 142]);
                        if (4 === e) return new Uint8Array([0, 200, 0, 128, 32, 132, 1, 38, 64, 8, 100, 0, 128, 44, 128, 8, 2, 56]);
                        if (5 === e) return new Uint8Array([0, 200, 0, 128, 32, 132, 1, 38, 64, 8, 100, 0, 130, 48, 4, 153, 0, 33, 144, 2, 56]);
                        if (6 === e) return new Uint8Array([0, 200, 0, 128, 32, 132, 1, 38, 64, 8, 100, 0, 130, 48, 4, 153, 0, 33, 144, 2, 0, 178, 0, 32, 8, 224]);
                        break;
                    default:
                        if (1 === e) return new Uint8Array([1, 64, 34, 128, 163, 78, 230, 128, 186, 8, 0, 0, 0, 28, 6, 241, 193, 10, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 94]);
                        if (2 === e) return new Uint8Array([1, 64, 34, 128, 163, 94, 230, 128, 186, 8, 0, 0, 0, 0, 149, 0, 6, 241, 161, 10, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 94]);
                        if (3 === e) return new Uint8Array([1, 64, 34, 128, 163, 94, 230, 128, 186, 8, 0, 0, 0, 0, 149, 0, 6, 241, 161, 10, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 94])
                }
                return null
            }, t
        }();
        var d = Math.pow(2, 32) - 1,
            it = function() {
                function h() {
                    ! function r(t, e) {
                        if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function")
                    }(this, h)
                }
                return h.init = function() {
                    h.types = {
                        avc1: [],
                        avcC: [],
                        btrt: [],
                        dinf: [],
                        dref: [],
                        esds: [],
                        ftyp: [],
                        hdlr: [],
                        mdat: [],
                        mdhd: [],
                        mdia: [],
                        mfhd: [],
                        minf: [],
                        moof: [],
                        moov: [],
                        mp4a: [],
                        ".mp3": [],
                        mvex: [],
                        mvhd: [],
                        pasp: [],
                        sdtp: [],
                        stbl: [],
                        stco: [],
                        stsc: [],
                        stsd: [],
                        stsz: [],
                        stts: [],
                        tfdt: [],
                        tfhd: [],
                        traf: [],
                        trak: [],
                        trun: [],
                        trex: [],
                        tkhd: [],
                        vmhd: [],
                        smhd: []
                    };
                    var t = void 0;
                    for (t in h.types) h.types.hasOwnProperty(t) && (h.types[t] = [t.charCodeAt(0), t.charCodeAt(1), t.charCodeAt(2), t.charCodeAt(3)]);
                    var e = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0, 118, 105, 100, 101, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 86, 105, 100, 101, 111, 72, 97, 110, 100, 108, 101, 114, 0]),
                        r = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0, 115, 111, 117, 110, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 83, 111, 117, 110, 100, 72, 97, 110, 100, 108, 101, 114, 0]);
                    h.HDLR_TYPES = {
                        video: e,
                        audio: r
                    };
                    var i = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 12, 117, 114, 108, 32, 0, 0, 0, 1]),
                        n = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0]);
                    h.STTS = h.STSC = h.STCO = n, h.STSZ = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), h.VMHD = new Uint8Array([0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0]), h.SMHD = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0]), h.STSD = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 1]);
                    var a = new Uint8Array([105, 115, 111, 109]),
                        o = new Uint8Array([97, 118, 99, 49]),
                        s = new Uint8Array([0, 0, 0, 1]);
                    h.FTYP = h.box(h.types.ftyp, a, s, a, o), h.DINF = h.box(h.types.dinf, h.box(h.types.dref, i))
                }, h.box = function(t) {
                    for (var e = Array.prototype.slice.call(arguments, 1), r = 8, i = e.length, n = i, a = void 0; i--;) r += e[i].byteLength;
                    for ((a = new Uint8Array(r))[0] = r >> 24 & 255, a[1] = r >> 16 & 255, a[2] = r >> 8 & 255, a[3] = 255 & r, a.set(t, 4), i = 0, r = 8; i < n; i++) a.set(e[i], r), r += e[i].byteLength;
                    return a
                }, h.hdlr = function(t) {
                    return h.box(h.types.hdlr, h.HDLR_TYPES[t])
                }, h.mdat = function(t) {
                    return h.box(h.types.mdat, t)
                }, h.mdhd = function(t, e) {
                    e *= t;
                    var r = Math.floor(e / (d + 1)),
                        i = Math.floor(e % (d + 1));
                    return h.box(h.types.mdhd, new Uint8Array([1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 3, t >> 24 & 255, t >> 16 & 255, t >> 8 & 255, 255 & t, r >> 24, r >> 16 & 255, r >> 8 & 255, 255 & r, i >> 24, i >> 16 & 255, i >> 8 & 255, 255 & i, 85, 196, 0, 0]))
                }, h.mdia = function(t) {
                    return h.box(h.types.mdia, h.mdhd(t.timescale, t.duration), h.hdlr(t.type), h.minf(t))
                }, h.mfhd = function(t) {
                    return h.box(h.types.mfhd, new Uint8Array([0, 0, 0, 0, t >> 24, t >> 16 & 255, t >> 8 & 255, 255 & t]))
                }, h.minf = function(t) {
                    return "audio" === t.type ? h.box(h.types.minf, h.box(h.types.smhd, h.SMHD), h.DINF, h.stbl(t)) : h.box(h.types.minf, h.box(h.types.vmhd, h.VMHD), h.DINF, h.stbl(t))
                }, h.moof = function(t, e, r) {
                    return h.box(h.types.moof, h.mfhd(t), h.traf(r, e))
                }, h.moov = function(t) {
                    for (var e = t.length, r = []; e--;) r[e] = h.trak(t[e]);
                    return h.box.apply(null, [h.types.moov, h.mvhd(t[0].timescale, t[0].duration)].concat(r).concat(h.mvex(t)))
                }, h.mvex = function(t) {
                    for (var e = t.length, r = []; e--;) r[e] = h.trex(t[e]);
                    return h.box.apply(null, [h.types.mvex].concat(r))
                }, h.mvhd = function(t, e) {
                    e *= t;
                    var r = Math.floor(e / (d + 1)),
                        i = Math.floor(e % (d + 1)),
                        n = new Uint8Array([1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 3, t >> 24 & 255, t >> 16 & 255, t >> 8 & 255, 255 & t, r >> 24, r >> 16 & 255, r >> 8 & 255, 255 & r, i >> 24, i >> 16 & 255, i >> 8 & 255, 255 & i, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 64, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255]);
                    return h.box(h.types.mvhd, n)
                }, h.sdtp = function(t) {
                    var e = t.samples || [],
                        r = new Uint8Array(4 + e.length),
                        i = void 0,
                        n = void 0;
                    for (n = 0; n < e.length; n++) i = e[n].flags, r[n + 4] = i.dependsOn << 4 | i.isDependedOn << 2 | i.hasRedundancy;
                    return h.box(h.types.sdtp, r)
                }, h.stbl = function(t) {
                    return h.box(h.types.stbl, h.stsd(t), h.box(h.types.stts, h.STTS), h.box(h.types.stsc, h.STSC), h.box(h.types.stsz, h.STSZ), h.box(h.types.stco, h.STCO))
                }, h.avc1 = function(t) {
                    var e = [],
                        r = [],
                        i = void 0,
                        n = void 0,
                        a = void 0;
                    for (i = 0; i < t.sps.length; i++) a = (n = t.sps[i]).byteLength, e.push(a >>> 8 & 255), e.push(255 & a), e = e.concat(Array.prototype.slice.call(n));
                    for (i = 0; i < t.pps.length; i++) a = (n = t.pps[i]).byteLength, r.push(a >>> 8 & 255), r.push(255 & a), r = r.concat(Array.prototype.slice.call(n));
                    var o = h.box(h.types.avcC, new Uint8Array([1, e[3], e[4], e[5], 255, 224 | t.sps.length].concat(e).concat([t.pps.length]).concat(r))),
                        s = t.width,
                        l = t.height,
                        u = t.pixelRatio[0],
                        d = t.pixelRatio[1];
                    return h.box(h.types.avc1, new Uint8Array([0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, s >> 8 & 255, 255 & s, l >> 8 & 255, 255 & l, 0, 72, 0, 0, 0, 72, 0, 0, 0, 0, 0, 0, 0, 1, 18, 100, 97, 105, 108, 121, 109, 111, 116, 105, 111, 110, 47, 104, 108, 115, 46, 106, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 24, 17, 17]), o, h.box(h.types.btrt, new Uint8Array([0, 28, 156, 128, 0, 45, 198, 192, 0, 45, 198, 192])), h.box(h.types.pasp, new Uint8Array([u >> 24, u >> 16 & 255, u >> 8 & 255, 255 & u, d >> 24, d >> 16 & 255, d >> 8 & 255, 255 & d])))
                }, h.esds = function(t) {
                    var e = t.config.length;
                    return new Uint8Array([0, 0, 0, 0, 3, 23 + e, 0, 1, 0, 4, 15 + e, 64, 21, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5].concat([e]).concat(t.config).concat([6, 1, 2]))
                }, h.mp4a = function(t) {
                    var e = t.samplerate;
                    return h.box(h.types.mp4a, new Uint8Array([0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, t.channelCount, 0, 16, 0, 0, 0, 0, e >> 8 & 255, 255 & e, 0, 0]), h.box(h.types.esds, h.esds(t)))
                }, h.mp3 = function(t) {
                    var e = t.samplerate;
                    return h.box(h.types[".mp3"], new Uint8Array([0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, t.channelCount, 0, 16, 0, 0, 0, 0, e >> 8 & 255, 255 & e, 0, 0]))
                }, h.stsd = function(t) {
                    return "audio" === t.type ? t.isAAC || "mp3" !== t.codec ? h.box(h.types.stsd, h.STSD, h.mp4a(t)) : h.box(h.types.stsd, h.STSD, h.mp3(t)) : h.box(h.types.stsd, h.STSD, h.avc1(t))
                }, h.tkhd = function(t) {
                    var e = t.id,
                        r = t.duration * t.timescale,
                        i = t.width,
                        n = t.height,
                        a = Math.floor(r / (d + 1)),
                        o = Math.floor(r % (d + 1));
                    return h.box(h.types.tkhd, new Uint8Array([1, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 3, e >> 24 & 255, e >> 16 & 255, e >> 8 & 255, 255 & e, 0, 0, 0, 0, a >> 24, a >> 16 & 255, a >> 8 & 255, 255 & a, o >> 24, o >> 16 & 255, o >> 8 & 255, 255 & o, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 64, 0, 0, 0, i >> 8 & 255, 255 & i, 0, 0, n >> 8 & 255, 255 & n, 0, 0]))
                }, h.traf = function(t, e) {
                    var r = h.sdtp(t),
                        i = t.id,
                        n = Math.floor(e / (d + 1)),
                        a = Math.floor(e % (d + 1));
                    return h.box(h.types.traf, h.box(h.types.tfhd, new Uint8Array([0, 0, 0, 0, i >> 24, i >> 16 & 255, i >> 8 & 255, 255 & i])), h.box(h.types.tfdt, new Uint8Array([1, 0, 0, 0, n >> 24, n >> 16 & 255, n >> 8 & 255, 255 & n, a >> 24, a >> 16 & 255, a >> 8 & 255, 255 & a])), h.trun(t, r.length + 16 + 20 + 8 + 16 + 8 + 8), r)
                }, h.trak = function(t) {
                    return t.duration = t.duration || 4294967295, h.box(h.types.trak, h.tkhd(t), h.mdia(t))
                }, h.trex = function(t) {
                    var e = t.id;
                    return h.box(h.types.trex, new Uint8Array([0, 0, 0, 0, e >> 24, e >> 16 & 255, e >> 8 & 255, 255 & e, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1]))
                }, h.trun = function(t, e) {
                    var r = t.samples || [],
                        i = r.length,
                        n = 12 + 16 * i,
                        a = new Uint8Array(n),
                        o = void 0,
                        s = void 0,
                        l = void 0,
                        u = void 0,
                        d = void 0,
                        c = void 0;
                    for (e += 8 + n, a.set([0, 0, 15, 1, i >>> 24 & 255, i >>> 16 & 255, i >>> 8 & 255, 255 & i, e >>> 24 & 255, e >>> 16 & 255, e >>> 8 & 255, 255 & e], 0), o = 0; o < i; o++) l = (s = r[o]).duration, u = s.size, d = s.flags, c = s.cts, a.set([l >>> 24 & 255, l >>> 16 & 255, l >>> 8 & 255, 255 & l, u >>> 24 & 255, u >>> 16 & 255, u >>> 8 & 255, 255 & u, d.isLeading << 2 | d.dependsOn, d.isDependedOn << 6 | d.hasRedundancy << 4 | d.paddingValue << 1 | d.isNonSync, 61440 & d.degradPrio, 15 & d.degradPrio, c >>> 24 & 255, c >>> 16 & 255, c >>> 8 & 255, 255 & c], 12 + 16 * o);
                    return h.box(h.types.trun, a)
                }, h.initSegment = function(t) {
                    h.types || h.init();
                    var e = h.moov(t),
                        r = void 0;
                    return (r = new Uint8Array(h.FTYP.byteLength + e.byteLength)).set(h.FTYP), r.set(e, h.FTYP.byteLength), r
                }, h
            }();
        var k = function() {
            function o(t, e, r, i) {
                ! function a(t, e) {
                    if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function")
                }(this, o), this.observer = t, this.config = e, this.typeSupported = r;
                var n = navigator.userAgent;
                this.isSafari = i && -1 < i.indexOf("Apple") && n && !n.match("CriOS"), this.ISGenerated = !1
            }
            return o.prototype.destroy = function() {}, o.prototype.resetTimeStamp = function(t) {
                this._initPTS = this._initDTS = t
            }, o.prototype.resetInitSegment = function() {
                this.ISGenerated = !1
            }, o.prototype.remux = function(t, e, r, i, n, a, o) {
                if (this.ISGenerated || this.generateIS(t, e, n), this.ISGenerated) {
                    var s = t.samples.length,
                        l = e.samples.length,
                        u = n,
                        d = n;
                    if (s && l) {
                        var c = (t.samples[0].dts - e.samples[0].dts) / e.inputTimeScale;
                        u += Math.max(0, c), d += Math.max(0, -c)
                    }
                    if (s) {
                        t.timescale || (rt.b.warn("regenerate InitSegment as audio detected"), this.generateIS(t, e, n));
                        var h = this.remuxAudio(t, u, a, o);
                        if (l) {
                            var f = void 0;
                            h && (f = h.endPTS - h.startPTS), e.timescale || (rt.b.warn("regenerate InitSegment as video detected"), this.generateIS(t, e, n)), this.remuxVideo(e, d, a, f, o)
                        }
                    } else if (l) {
                        var p = this.remuxVideo(e, d, a, 0, o);
                        p && t.codec && this.remuxEmptyAudio(t, u, a, p)
                    }
                }
                r.samples.length && this.remuxID3(r, n), i.samples.length && this.remuxText(i, n), this.observer.trigger(tt.a.FRAG_PARSED)
            }, o.prototype.generateIS = function(t, e, r) {
                var i = this.observer,
                    n = t.samples,
                    a = e.samples,
                    o = this.typeSupported,
                    s = "audio/mp4",
                    l = {},
                    u = {
                        tracks: l
                    },
                    d = this._initPTS === undefined,
                    c = void 0,
                    h = void 0;
                if (d && (c = h = Infinity), t.config && n.length && (t.timescale = t.samplerate, rt.b.log("audio sampling rate : " + t.samplerate), t.isAAC || (o.mpeg ? (s = "audio/mpeg", t.codec = "") : o.mp3 && (t.codec = "mp3")), l.audio = {
                        container: s,
                        codec: t.codec,
                        initSegment: !t.isAAC && o.mpeg ? new Uint8Array : it.initSegment([t]),
                        metadata: {
                            channelCount: t.channelCount
                        }
                    }, d && (c = h = n[0].pts - t.inputTimeScale * r)), e.sps && e.pps && a.length) {
                    var f = e.inputTimeScale;
                    e.timescale = f, l.video = {
                        container: "video/mp4",
                        codec: e.codec,
                        initSegment: it.initSegment([e]),
                        metadata: {
                            width: e.width,
                            height: e.height
                        }
                    }, d && (c = Math.min(c, a[0].pts - f * r), h = Math.min(h, a[0].dts - f * r), this.observer.trigger(tt.a.INIT_PTS_FOUND, {
                        initPTS: c
                    }))
                }
                Object.keys(l).length ? (i.trigger(tt.a.FRAG_PARSING_INIT_SEGMENT, u), this.ISGenerated = !0, d && (this._initPTS = c, this._initDTS = h)) : i.trigger(tt.a.ERROR, {
                    type: et.b.MEDIA_ERROR,
                    details: et.a.FRAG_PARSING_ERROR,
                    fatal: !1,
                    reason: "no audio/video samples found"
                })
            }, o.prototype.remuxVideo = function(t, e, r, i, n) {
                var a, o, s, l = 8,
                    u = t.timescale,
                    d = void 0,
                    c = void 0,
                    h = void 0,
                    f = void 0,
                    p = t.samples,
                    g = [],
                    v = p.length,
                    y = this._PTSNormalize,
                    m = this._initDTS,
                    b = this.nextAvcDts,
                    T = this.isSafari;
                if (0 !== v) {
                    T && (r |= p.length && b && (n && Math.abs(e - b / u) < .1 || Math.abs(p[0].pts - b - m) < u / 5)), r || (b = e * u), p.forEach(function(t) {
                        t.pts = y(t.pts - m, b), t.dts = y(t.dts - m, b)
                    }), p.sort(function(t, e) {
                        var r = t.dts - e.dts,
                            i = t.pts - e.pts;
                        return r || i || t.id - e.id
                    });
                    var E = p.reduce(function(t, e) {
                        return Math.max(Math.min(t, e.pts - e.dts), -18e3)
                    }, 0);
                    if (E < 0) {
                        rt.b.warn("PTS < DTS detected in video samples, shifting DTS by " + Math.round(E / 90) + " ms to overcome this issue");
                        for (var S = 0; S < p.length; S++) p[S].dts += E
                    }
                    var _ = p[0];
                    f = Math.max(_.dts, 0), h = Math.max(_.pts, 0);
                    var R = Math.round((f - b) / 90);
                    r && R && (1 < R ? rt.b.log("AVC:" + R + " ms hole between fragments detected,filling it") : R < -1 && rt.b.log("AVC:" + -R + " ms overlapping between fragments detected"), f = b, p[0].dts = f, h = Math.max(h - R, b), p[0].pts = h, rt.b.log("Video/PTS/DTS adjusted: " + Math.round(h / 90) + "/" + Math.round(f / 90) + ",delta:" + R + " ms")), f, _ = p[p.length - 1], s = Math.max(_.dts, 0), o = Math.max(_.pts, 0, s), T && (d = Math.round((s - f) / (p.length - 1)));
                    for (var A = 0, w = 0, L = 0; L < v; L++) {
                        for (var k = p[L], D = k.units, O = D.length, C = 0, I = 0; I < O; I++) C += D[I].data.length;
                        w += C, A += O, k.length = C, k.dts = T ? f + L * d : Math.max(k.dts, f), k.pts = Math.max(k.pts, k.dts)
                    }
                    var P = w + 4 * A + 8;
                    try {
                        c = new Uint8Array(P)
                    } catch (Z) {
                        return void this.observer.trigger(tt.a.ERROR, {
                            type: et.b.MUX_ERROR,
                            details: et.a.REMUX_ALLOC_ERROR,
                            fatal: !1,
                            bytes: P,
                            reason: "fail allocating video mdat " + P
                        })
                    }
                    var x = new DataView(c.buffer);
                    x.setUint32(0, P), c.set(it.types.mdat, 4);
                    for (var F = 0; F < v; F++) {
                        for (var M = p[F], U = M.units, N = 0, B = void 0, G = 0, K = U.length; G < K; G++) {
                            var j = U[G],
                                H = j.data,
                                V = j.data.byteLength;
                            x.setUint32(l, V), l += 4, c.set(H, l), l += V, N += 4 + V
                        }
                        if (T) B = Math.max(0, d * Math.round((M.pts - M.dts) / d));
                        else {
                            if (F < v - 1) d = p[F + 1].dts - M.dts;
                            else {
                                var Y = this.config,
                                    W = M.dts - p[0 < F ? F - 1 : F].dts;
                                if (Y.stretchShortVideoTrack) {
                                    var q = Y.maxBufferHole,
                                        X = Math.floor(q * u),
                                        z = (i ? h + i * u : this.nextAudioPts) - M.pts;
                                    X < z ? ((d = z - W) < 0 && (d = W), rt.b.log("It is approximately " + z / 90 + " ms to the next segment; using duration " + d / 90 + " ms for the last video frame.")) : d = W
                                } else d = W
                            }
                            B = Math.round(M.pts - M.dts)
                        }
                        g.push({
                            size: N,
                            duration: d,
                            cts: B,
                            flags: {
                                isLeading: 0,
                                isDependedOn: 0,
                                hasRedundancy: 0,
                                degradPrio: 0,
                                dependsOn: M.key ? 2 : 1,
                                isNonSync: M.key ? 0 : 1
                            }
                        })
                    }
                    this.nextAvcDts = s + d;
                    var Q = t.dropped;
                    if (t.len = 0, t.nbNalu = 0, t.dropped = 0, g.length && -1 < navigator.userAgent.toLowerCase().indexOf("chrome")) {
                        var $ = g[0].flags;
                        $.dependsOn = 2, $.isNonSync = 0
                    }
                    t.samples = g, a = it.moof(t.sequenceNumber++, f, t), t.samples = [];
                    var J = {
                        data1: a,
                        data2: c,
                        startPTS: h / u,
                        endPTS: (o + d) / u,
                        startDTS: f / u,
                        endDTS: this.nextAvcDts / u,
                        type: "video",
                        hasAudio: !1,
                        hasVideo: !0,
                        nb: g.length,
                        dropped: Q
                    };
                    return this.observer.trigger(tt.a.FRAG_PARSING_DATA, J), J
                }
            }, o.prototype.remuxAudio = function(t, e, r, i) {
                var n = t.inputTimeScale,
                    a = t.timescale,
                    o = n / a,
                    s = (t.isAAC ? 1024 : 1152) * o,
                    l = this._PTSNormalize,
                    u = this._initDTS,
                    d = !t.isAAC && this.typeSupported.mpeg,
                    c = void 0,
                    h = void 0,
                    f = void 0,
                    p = void 0,
                    g = void 0,
                    v = void 0,
                    y = void 0,
                    m = t.samples,
                    b = [],
                    T = this.nextAudioPts;
                if (r |= m.length && T && (i && Math.abs(e - T / n) < .1 || Math.abs(m[0].pts - T - u) < 20 * s), m.forEach(function(t) {
                        t.pts = t.dts = l(t.pts - u, e * n)
                    }), 0 !== (m = m.filter(function(t) {
                        return 0 <= t.pts
                    })).length) {
                    if (r || (T = i ? e * n : m[0].pts), t.isAAC)
                        for (var E = this.config.maxAudioFramesDrift, S = 0, _ = T; S < m.length;) {
                            var R, A = m[S];
                            R = A.pts - _;
                            var w = Math.abs(1e3 * R / n);
                            if (R <= -E * s) rt.b.warn("Dropping 1 audio frame @ " + (_ / n).toFixed(3) + "s due to " + Math.round(w) + " ms overlap."), m.splice(S, 1), t.len -= A.unit.length;
                            else if (E * s <= R && w < 1e4 && _) {
                                var L = Math.round(R / s);
                                rt.b.warn("Injecting " + L + " audio frame @ " + (_ / n).toFixed(3) + "s due to " + Math.round(1e3 * R / n) + " ms gap.");
                                for (var k = 0; k < L; k++) {
                                    var D = Math.max(_, 0);
                                    (f = W.getSilentFrame(t.manifestCodec || t.codec, t.channelCount)) || (rt.b.log("Unable to get silent frame for given audio codec; duplicating last frame instead."), f = A.unit.subarray()), m.splice(S, 0, {
                                        unit: f,
                                        pts: D,
                                        dts: D
                                    }), t.len += f.length, _ += s, S++
                                }
                                A.pts = A.dts = _, _ += s, S++
                            } else Math.abs(R), A.pts = A.dts = _, _ += s, S++
                        }
                    for (var O = 0, C = m.length; O < C; O++) {
                        var I = m[O],
                            P = I.unit,
                            x = I.pts;
                        if (y !== undefined) h.duration = Math.round((x - y) / o);
                        else {
                            var F = Math.round(1e3 * (x - T) / n),
                                M = 0;
                            if (r && t.isAAC && F) {
                                if (0 < F && F < 1e4) M = Math.round((x - T) / s), rt.b.log(F + " ms hole between AAC samples detected,filling it"), 0 < M && ((f = W.getSilentFrame(t.manifestCodec || t.codec, t.channelCount)) || (f = P.subarray()), t.len += M * f.length);
                                else if (F < -12) {
                                    rt.b.log("drop overlapping AAC sample, expected/parsed/delta:" + (T / n).toFixed(3) + "s/" + (x / n).toFixed(3) + "s/" + -F + "ms"), t.len -= P.byteLength;
                                    continue
                                }
                                x = T
                            }
                            if (v = x, !(0 < t.len)) return;
                            var U = d ? t.len : t.len + 8;
                            c = d ? 0 : 8;
                            try {
                                p = new Uint8Array(U)
                            } catch (Y) {
                                return void this.observer.trigger(tt.a.ERROR, {
                                    type: et.b.MUX_ERROR,
                                    details: et.a.REMUX_ALLOC_ERROR,
                                    fatal: !1,
                                    bytes: U,
                                    reason: "fail allocating audio mdat " + U
                                })
                            }
                            d || (new DataView(p.buffer).setUint32(0, U), p.set(it.types.mdat, 4));
                            for (var N = 0; N < M; N++)(f = W.getSilentFrame(t.manifestCodec || t.codec, t.channelCount)) || (rt.b.log("Unable to get silent frame for given audio codec; duplicating this frame instead."), f = P.subarray()), p.set(f, c), c += f.byteLength, h = {
                                size: f.byteLength,
                                cts: 0,
                                duration: 1024,
                                flags: {
                                    isLeading: 0,
                                    isDependedOn: 0,
                                    hasRedundancy: 0,
                                    degradPrio: 0,
                                    dependsOn: 1
                                }
                            }, b.push(h)
                        }
                        p.set(P, c);
                        var B = P.byteLength;
                        c += B, h = {
                            size: B,
                            cts: 0,
                            duration: 0,
                            flags: {
                                isLeading: 0,
                                isDependedOn: 0,
                                hasRedundancy: 0,
                                degradPrio: 0,
                                dependsOn: 1
                            }
                        }, b.push(h), y = x
                    }
                    var G = 0,
                        K = b.length;
                    if (2 <= K && (G = b[K - 2].duration, h.duration = G), K) {
                        this.nextAudioPts = T = y + o * G, t.len = 0, t.samples = b, g = d ? new Uint8Array : it.moof(t.sequenceNumber++, v / o, t), t.samples = [];
                        var j = v / n,
                            H = T / n,
                            V = {
                                data1: g,
                                data2: p,
                                startPTS: j,
                                endPTS: H,
                                startDTS: j,
                                endDTS: H,
                                type: "audio",
                                hasAudio: !0,
                                hasVideo: !1,
                                nb: K
                            };
                        return this.observer.trigger(tt.a.FRAG_PARSING_DATA, V), V
                    }
                    return null
                }
            }, o.prototype.remuxEmptyAudio = function(t, e, r, i) {
                var n = t.inputTimeScale,
                    a = n / (t.samplerate ? t.samplerate : n),
                    o = this.nextAudioPts,
                    s = (o !== undefined ? o : i.startDTS * n) + this._initDTS,
                    l = i.endDTS * n + this._initDTS,
                    u = 1024 * a,
                    d = Math.ceil((l - s) / u),
                    c = W.getSilentFrame(t.manifestCodec || t.codec, t.channelCount);
                if (rt.b.warn("remux empty Audio"), c) {
                    for (var h = [], f = 0; f < d; f++) {
                        var p = s + f * u;
                        h.push({
                            unit: c,
                            pts: p,
                            dts: p
                        }), t.len += c.length
                    }
                    t.samples = h, this.remuxAudio(t, e, r)
                } else rt.b.trace("Unable to remuxEmptyAudio since we were unable to get a silent frame for given audio codec!")
            }, o.prototype.remuxID3 = function(t, e) {
                var r = t.samples.length,
                    i = void 0,
                    n = t.inputTimeScale,
                    a = this._initPTS,
                    o = this._initDTS;
                if (r) {
                    for (var s = 0; s < r; s++)(i = t.samples[s]).pts = (i.pts - a) / n, i.dts = (i.dts - o) / n;
                    this.observer.trigger(tt.a.FRAG_PARSING_METADATA, {
                        samples: t.samples
                    })
                }
                t.samples = [], e = e
            }, o.prototype.remuxText = function(t, e) {
                t.samples.sort(function(t, e) {
                    return t.pts - e.pts
                });
                var r = t.samples.length,
                    i = void 0,
                    n = t.inputTimeScale,
                    a = this._initPTS;
                if (r) {
                    for (var o = 0; o < r; o++)(i = t.samples[o]).pts = (i.pts - a) / n;
                    this.observer.trigger(tt.a.FRAG_PARSING_USERDATA, {
                        samples: t.samples
                    })
                }
                t.samples = [], e = e
            }, o.prototype._PTSNormalize = function(t, e) {
                var r = void 0;
                if (e === undefined) return t;
                for (r = e < t ? -8589934592 : 8589934592; 4294967296 < Math.abs(t - e);) t += r;
                return t
            }, o
        }();
        var D = function() {
            function e(t) {
                ! function r(t, e) {
                    if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function")
                }(this, e), this.observer = t
            }
            return e.prototype.destroy = function() {}, e.prototype.resetTimeStamp = function() {}, e.prototype.resetInitSegment = function() {}, e.prototype.remux = function(t, e, r, i, n, a, o, s) {
                var l = this.observer,
                    u = "";
                t && (u += "audio"), e && (u += "video"), l.trigger(tt.a.FRAG_PARSING_DATA, {
                    data1: s,
                    startPTS: n,
                    startDTS: n,
                    type: u,
                    hasAudio: !!t,
                    hasVideo: !!e,
                    nb: 1,
                    dropped: 0
                }), l.trigger(tt.a.FRAG_PARSED)
            }, e
        }();
        var S = Object(i.a)().performance,
            h = function() {
                function a(t, e, r, i) {
                    ! function n(t, e) {
                        if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function")
                    }(this, a), this.observer = t, this.typeSupported = e, this.config = r, this.vendor = i
                }
                return a.prototype.destroy = function() {
                    var t = this.demuxer;
                    t && t.destroy()
                }, a.prototype.push = function(t, r, i, n, a, o, s, l, u, d, c, h) {
                    if (0 < t.byteLength && null != r && null != r.key && "AES-128" === r.method) {
                        var e = this.decrypter;
                        null == e && (e = this.decrypter = new v.a(this.observer, this.config));
                        var f = this,
                            p = void 0;
                        try {
                            p = S.now()
                        } catch (g) {
                            p = Date.now()
                        }
                        e.decrypt(t, r.key.buffer, r.iv.buffer, function(t) {
                            var e = void 0;
                            try {
                                e = S.now()
                            } catch (g) {
                                e = Date.now()
                            }
                            f.observer.trigger(tt.a.FRAG_DECRYPTED, {
                                stats: {
                                    tstart: p,
                                    tdecrypt: e
                                }
                            }), f.pushDecrypted(new Uint8Array(t), r, new Uint8Array(i), n, a, o, s, l, u, d, c, h)
                        })
                    } else this.pushDecrypted(new Uint8Array(t), r, new Uint8Array(i), n, a, o, s, l, u, d, c, h)
                }, a.prototype.pushDecrypted = function(t, e, r, i, n, a, o, s, l, u, d, c) {
                    var h = this.demuxer;
                    if (!h || (o || s) && !this.probe(t)) {
                        for (var f = this.observer, p = this.typeSupported, g = this.config, v = [{
                                demux: w,
                                remux: k
                            }, {
                                demux: R.a,
                                remux: D
                            }, {
                                demux: _,
                                remux: k
                            }, {
                                demux: L,
                                remux: k
                            }], y = 0, m = v.length; y < m; y++) {
                            var b = v[y],
                                T = b.demux.probe;
                            if (T(t)) {
                                var E = this.remuxer = new b.remux(f, g, p, this.vendor);
                                h = new b.demux(f, E, g, p), this.probe = T;
                                break
                            }
                        }
                        if (!h) return void f.trigger(tt.a.ERROR, {
                            type: et.b.MEDIA_ERROR,
                            details: et.a.FRAG_PARSING_ERROR,
                            fatal: !0,
                            reason: "no demux matching with content found"
                        });
                        this.demuxer = h
                    }
                    var S = this.remuxer;
                    (o || s) && (h.resetInitSegment(r, i, n, u), S.resetInitSegment()), o && (h.resetTimeStamp(c), S.resetTimeStamp(c)), "function" == typeof h.setDecryptData && h.setDecryptData(e), h.append(t, a, l, d)
                }, a
            }();
        e.a = h
    }, function(t, e, r) {
        "use strict";
        Object.defineProperty(e, "__esModule", {
            value: !0
        });
        var i = {};
        r.d(i, "newCue", function() {
            return _e
        });
        var n = r(5),
            a = r.n(n),
            h = r(2),
            x = r(3),
            F = r(1),
            M = r(0),
            o = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                return typeof t
            } : function(t) {
                return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t
            };
        var s = new Set(["hlsEventGeneric", "hlsHandlerDestroying", "hlsHandlerDestroyed"]),
            l = function() {
                function a(t) {
                    ! function n(t, e) {
                        if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function")
                    }(this, a), this.hls = t, this.onEvent = this.onEvent.bind(this);
                    for (var e = arguments.length, r = Array(1 < e ? e - 1 : 0), i = 1; i < e; i++) r[i - 1] = arguments[i];
                    this.handledEvents = r, this.useGenericHandler = !0, this.registerListeners()
                }
                return a.prototype.destroy = function() {
                    this.onHandlerDestroying(), this.unregisterListeners(), this.onHandlerDestroyed()
                }, a.prototype.onHandlerDestroying = function() {}, a.prototype.onHandlerDestroyed = function() {}, a.prototype.isEventHandler = function() {
                    return "object" === o(this.handledEvents) && this.handledEvents.length && "function" == typeof this.onEvent
                }, a.prototype.registerListeners = function() {
                    this.isEventHandler() && this.handledEvents.forEach(function(t) {
                        if (s.has(t)) throw new Error("Forbidden event-name: " + t);
                        this.hls.on(t, this.onEvent)
                    }, this)
                }, a.prototype.unregisterListeners = function() {
                    this.isEventHandler() && this.handledEvents.forEach(function(t) {
                        this.hls.off(t, this.onEvent)
                    }, this)
                }, a.prototype.onEvent = function(t, e) {
                    this.onEventGeneric(t, e)
                }, a.prototype.onEventGeneric = function(t, e) {
                    var i = function i(t, e) {
                        var r = "on" + t.replace("hls", "");
                        if ("function" != typeof this[r]) throw new Error("Event " + t + " has no generic handler in this " + this.constructor.name + " class (tried " + r + ")");
                        return this[r].bind(this, e)
                    };
                    try {
                        i.call(this, t, e).call()
                    } catch (r) {
                        M.b.error("An internal error happened while handling event " + t + '. Error message: "' + r.message + '". Here is a stacktrace:', r), this.hls.trigger(F.a.ERROR, {
                            type: h.b.OTHER_ERROR,
                            details: h.a.INTERNAL_EXCEPTION,
                            fatal: !1,
                            event: t,
                            err: r
                        })
                    }
                }, a
            }(),
            u = r(9),
            d = function() {
                function i(t, e) {
                    for (var r = 0; r < e.length; r++) {
                        var i = e[r];
                        i.enumerable = i.enumerable || !1, i.configurable = !0, "value" in i && (i.writable = !0), Object.defineProperty(t, i.key, i)
                    }
                }
                return function(t, e, r) {
                    return e && i(t.prototype, e), r && i(t, r), t
                }
            }();
        var k = function() {
                function t() {
                    ! function r(t, e) {
                        if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function")
                    }(this, t), this.method = null, this.key = null, this.iv = null, this._uri = null
                }
                return d(t, [{
                    key: "uri",
                    get: function() {
                        return !this._uri && this.reluri && (this._uri = a.a.buildAbsoluteURL(this.baseuri, this.reluri, {
                            alwaysNormalize: !0
                        })), this._uri
                    }
                }]), t
            }(),
            c = function() {
                function i(t, e) {
                    for (var r = 0; r < e.length; r++) {
                        var i = e[r];
                        i.enumerable = i.enumerable || !1, i.configurable = !0, "value" in i && (i.writable = !0), Object.defineProperty(t, i.key, i)
                    }
                }
                return function(t, e, r) {
                    return e && i(t.prototype, e), r && i(t, r), t
                }
            }();
        var D = function() {
                function e() {
                    var t;
                    ! function r(t, e) {
                        if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function")
                    }(this, e), this._url = null, this._byteRange = null, this._decryptdata = null, this.tagList = [], this.programDateTime = null, this.rawProgramDateTime = null, this._elementaryStreams = ((t = {})[e.ElementaryStreamTypes.AUDIO] = !1, t[e.ElementaryStreamTypes.VIDEO] = !1, t)
                }
                return e.prototype.addElementaryStream = function(t) {
                    this._elementaryStreams[t] = !0
                }, e.prototype.hasElementaryStream = function(t) {
                    return !0 === this._elementaryStreams[t]
                }, e.prototype.createInitializationVector = function(t) {
                    for (var e = new Uint8Array(16), r = 12; r < 16; r++) e[r] = t >> 8 * (15 - r) & 255;
                    return e
                }, e.prototype.fragmentDecryptdataFromLevelkey = function(t, e) {
                    var r = t;
                    return t && t.method && t.uri && !t.iv && ((r = new k).method = t.method, r.baseuri = t.baseuri, r.reluri = t.reluri, r.iv = this.createInitializationVector(e)), r
                }, c(e, [{
                    key: "url",
                    get: function() {
                        return !this._url && this.relurl && (this._url = a.a.buildAbsoluteURL(this.baseurl, this.relurl, {
                            alwaysNormalize: !0
                        })), this._url
                    },
                    set: function(t) {
                        this._url = t
                    }
                }, {
                    key: "byteRange",
                    get: function() {
                        if (!this._byteRange && !this.rawByteRange) return [];
                        if (this._byteRange) return this._byteRange;
                        var t = [];
                        if (this.rawByteRange) {
                            var e = this.rawByteRange.split("@", 2);
                            if (1 === e.length) {
                                var r = this.lastByteRangeEndOffset;
                                t[0] = r || 0
                            } else t[0] = parseInt(e[1]);
                            t[1] = parseInt(e[0]) + t[0], this._byteRange = t
                        }
                        return t
                    }
                }, {
                    key: "byteRangeStartOffset",
                    get: function() {
                        return this.byteRange[0]
                    }
                }, {
                    key: "byteRangeEndOffset",
                    get: function() {
                        return this.byteRange[1]
                    }
                }, {
                    key: "decryptdata",
                    get: function() {
                        return this._decryptdata || (this._decryptdata = this.fragmentDecryptdataFromLevelkey(this.levelkey, this.sn)), this._decryptdata
                    }
                }, {
                    key: "endProgramDateTime",
                    get: function() {
                        if (!Object(x.a)(this.programDateTime)) return null;
                        var t = Object(x.a)(this.duration) ? this.duration : 0;
                        return this.programDateTime + 1e3 * t
                    }
                }, {
                    key: "encrypted",
                    get: function() {
                        return !(!this.decryptdata || null === this.decryptdata.uri || null !== this.decryptdata.key)
                    }
                }], [{
                    key: "ElementaryStreamTypes",
                    get: function() {
                        return {
                            AUDIO: "audio",
                            VIDEO: "video"
                        }
                    }
                }]), e
            }(),
            f = function() {
                function i(t, e) {
                    for (var r = 0; r < e.length; r++) {
                        var i = e[r];
                        i.enumerable = i.enumerable || !1, i.configurable = !0, "value" in i && (i.writable = !0), Object.defineProperty(t, i.key, i)
                    }
                }
                return function(t, e, r) {
                    return e && i(t.prototype, e), r && i(t, r), t
                }
            }();
        var O = function() {
            function e(t) {
                ! function r(t, e) {
                    if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function")
                }(this, e), this.endCC = 0, this.endSN = 0, this.fragments = [], this.initSegment = null, this.live = !0, this.needSidxRanges = !1, this.startCC = 0, this.startSN = 0, this.startTimeOffset = null, this.targetduration = 0, this.totalduration = 0, this.type = null, this.url = t, this.version = null
            }
            return f(e, [{
                key: "hasProgramDateTime",
                get: function() {
                    return !(!this.fragments[0] || !Object(x.a)(this.fragments[0].programDateTime))
                }
            }]), e
        }();
        var p = /^(\d+)x(\d+)$/,
            g = /\s*(.+?)\s*=((?:\".*?\")|.*?)(?:,|$)/g,
            C = function() {
                function i(t) {
                    for (var e in function r(t, e) {
                            if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function")
                        }(this, i), "string" == typeof t && (t = i.parseAttrList(t)), t) t.hasOwnProperty(e) && (this[e] = t[e])
                }
                return i.prototype.decimalInteger = function(t) {
                    var e = parseInt(this[t], 10);
                    return e > Number.MAX_SAFE_INTEGER ? Infinity : e
                }, i.prototype.hexadecimalInteger = function(t) {
                    if (this[t]) {
                        var e = (this[t] || "0x").slice(2);
                        e = (1 & e.length ? "0" : "") + e;
                        for (var r = new Uint8Array(e.length / 2), i = 0; i < e.length / 2; i++) r[i] = parseInt(e.slice(2 * i, 2 * i + 2), 16);
                        return r
                    }
                    return null
                }, i.prototype.hexadecimalIntegerAsNumber = function(t) {
                    var e = parseInt(this[t], 16);
                    return e > Number.MAX_SAFE_INTEGER ? Infinity : e
                }, i.prototype.decimalFloatingPoint = function(t) {
                    return parseFloat(this[t])
                }, i.prototype.enumeratedString = function(t) {
                    return this[t]
                }, i.prototype.decimalResolution = function(t) {
                    var e = p.exec(this[t]);
                    return null === e ? undefined : {
                        width: parseInt(e[1], 10),
                        height: parseInt(e[2], 10)
                    }
                }, i.parseAttrList = function(t) {
                    var e = void 0,
                        r = {};
                    for (g.lastIndex = 0; null !== (e = g.exec(t));) {
                        var i = e[2];
                        0 === i.indexOf('"') && i.lastIndexOf('"') === i.length - 1 && (i = i.slice(1, -1)), r[e[1]] = i
                    }
                    return r
                }, i
            }(),
            v = {
                audio: {
                    a3ds: !0,
                    "ac-3": !0,
                    "ac-4": !0,
                    alac: !0,
                    alaw: !0,
                    dra1: !0,
                    "dts+": !0,
                    "dts-": !0,
                    dtsc: !0,
                    dtse: !0,
                    dtsh: !0,
                    "ec-3": !0,
                    enca: !0,
                    g719: !0,
                    g726: !0,
                    m4ae: !0,
                    mha1: !0,
                    mha2: !0,
                    mhm1: !0,
                    mhm2: !0,
                    mlpa: !0,
                    mp4a: !0,
                    "raw ": !0,
                    Opus: !0,
                    samr: !0,
                    sawb: !0,
                    sawp: !0,
                    sevc: !0,
                    sqcp: !0,
                    ssmv: !0,
                    twos: !0,
                    ulaw: !0
                },
                video: {
                    avc1: !0,
                    avc2: !0,
                    avc3: !0,
                    avc4: !0,
                    avcp: !0,
                    drac: !0,
                    dvav: !0,
                    dvhe: !0,
                    encv: !0,
                    hev1: !0,
                    hvc1: !0,
                    mjp2: !0,
                    mp4v: !0,
                    mvc1: !0,
                    mvc2: !0,
                    mvc3: !0,
                    mvc4: !0,
                    resv: !0,
                    rv60: !0,
                    s263: !0,
                    svc1: !0,
                    svc2: !0,
                    "vc-1": !0,
                    vp08: !0,
                    vp09: !0
                }
            };

        function y(t, e) {
            return window.MediaSource.isTypeSupported((e || "video") + '/mp4;codecs="' + t + '"')
        }
        var m = /#EXT-X-STREAM-INF:([^\n\r]*)[\r\n]+([^\r\n]+)/g,
            b = /#EXT-X-MEDIA:(.*)/g,
            I = new RegExp([/#EXTINF:\s*(\d*(?:\.\d+)?)(?:,(.*)\s+)?/.source, /|(?!#)(\S+)/.source, /|#EXT-X-BYTERANGE:*(.+)/.source, /|#EXT-X-PROGRAM-DATE-TIME:(.+)/.source, /|#.*/.source].join(""), "g"),
            P = /(?:(?:#(EXTM3U))|(?:#EXT-X-(PLAYLIST-TYPE):(.+))|(?:#EXT-X-(MEDIA-SEQUENCE): *(\d+))|(?:#EXT-X-(TARGETDURATION): *(\d+))|(?:#EXT-X-(KEY):(.+))|(?:#EXT-X-(START):(.+))|(?:#EXT-X-(ENDLIST))|(?:#EXT-X-(DISCONTINUITY-SEQ)UENCE:(\d+))|(?:#EXT-X-(DIS)CONTINUITY))|(?:#EXT-X-(VERSION):(\d+))|(?:#EXT-X-(MAP):(.+))|(?:(#)([^:]*):(.*))|(?:(#)(.*))(?:.*)\r?\n?/,
            U = /\.(mp4|m4s|m4v|m4a)$/i,
            T = function() {
                function d() {
                    ! function r(t, e) {
                        if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function")
                    }(this, d)
                }
                return d.findGroup = function(t, e) {
                    if (!t) return null;
                    for (var r = null, i = 0; i < t.length; i++) {
                        var n = t[i];
                        n.id === e && (r = n)
                    }
                    return r
                }, d.convertAVC1ToAVCOTI = function(t) {
                    var e = void 0,
                        r = t.split(".");
                    return 2 < r.length ? (e = r.shift() + ".", e += parseInt(r.shift()).toString(16), e += ("000" + parseInt(r.shift()).toString(16)).substr(-4)) : e = t, e
                }, d.resolve = function(t, e) {
                    return a.a.buildAbsoluteURL(e, t, {
                        alwaysNormalize: !0
                    })
                }, d.parseMasterPlaylist = function(t, e) {
                    var r = [],
                        i = void 0;

                    function n(i, n) {
                        ["video", "audio"].forEach(function(e) {
                            var r = i.filter(function(t) {
                                return function i(t, e) {
                                    var r = v[e];
                                    return !!r && !0 === r[t.slice(0, 4)]
                                }(t, e)
                            });
                            if (r.length) {
                                var t = r.filter(function(t) {
                                    return 0 === t.lastIndexOf("avc1", 0) || 0 === t.lastIndexOf("mp4a", 0)
                                });
                                n[e + "Codec"] = 0 < t.length ? t[0] : r[0], i = i.filter(function(t) {
                                    return -1 === r.indexOf(t)
                                })
                            }
                        }), n.unknownCodecs = i
                    }
                    for (m.lastIndex = 0; null != (i = m.exec(t));) {
                        var a = {},
                            o = a.attrs = new C(i[1]);
                        a.url = d.resolve(i[2], e);
                        var s = o.decimalResolution("RESOLUTION");
                        s && (a.width = s.width, a.height = s.height), a.bitrate = o.decimalInteger("AVERAGE-BANDWIDTH") || o.decimalInteger("BANDWIDTH"), a.name = o.NAME, n([].concat((o.CODECS || "").split(/[ ,]+/)), a), a.videoCodec && -1 !== a.videoCodec.indexOf("avc1") && (a.videoCodec = d.convertAVC1ToAVCOTI(a.videoCodec)), r.push(a)
                    }
                    return r
                }, d.parseMasterPlaylistMedia = function(t, e, r) {
                    var i = 3 < arguments.length && arguments[3] !== undefined ? arguments[3] : [],
                        n = void 0,
                        a = [],
                        o = 0;
                    for (b.lastIndex = 0; null !== (n = b.exec(t));) {
                        var s = {},
                            l = new C(n[1]);
                        if (l.TYPE === r) {
                            if (s.groupId = l["GROUP-ID"], s.name = l.NAME, s.type = r, s["default"] = "YES" === l.DEFAULT, s.autoselect = "YES" === l.AUTOSELECT, s.forced = "YES" === l.FORCED, l.URI && (s.url = d.resolve(l.URI, e)), s.lang = l.LANGUAGE, s.name || (s.name = s.lang), i.length) {
                                var u = d.findGroup(i, s.groupId);
                                s.audioCodec = u ? u.codec : i[0].codec
                            }
                            s.id = o++, a.push(s)
                        }
                    }
                    return a
                }, d.parseLevelPlaylist = function(t, e, r, i, n) {
                    var a = 0,
                        o = 0,
                        s = new O(e),
                        l = new k,
                        u = 0,
                        d = null,
                        c = new D,
                        h = void 0,
                        f = void 0,
                        p = null;
                    for (I.lastIndex = 0; null !== (h = I.exec(t));) {
                        var g = h[1];
                        if (g) {
                            c.duration = parseFloat(g);
                            var v = (" " + h[2]).slice(1);
                            c.title = v || null, c.tagList.push(v ? ["INF", g, v] : ["INF", g])
                        } else if (h[3]) {
                            if (Object(x.a)(c.duration)) {
                                var y = a++;
                                c.type = i, c.start = o, c.levelkey = l, c.sn = y, c.level = r, c.cc = u, c.urlId = n, c.baseurl = e, c.relurl = (" " + h[3]).slice(1), N(c, d), s.fragments.push(c), o += (d = c).duration, c = new D
                            }
                        } else if (h[4]) {
                            if (c.rawByteRange = (" " + h[4]).slice(1), d) {
                                var m = d.byteRangeEndOffset;
                                m && (c.lastByteRangeEndOffset = m)
                            }
                        } else if (h[5]) c.rawProgramDateTime = (" " + h[5]).slice(1), c.tagList.push(["PROGRAM-DATE-TIME", c.rawProgramDateTime]), null === p && (p = s.fragments.length);
                        else {
                            for (h = h[0].match(P), f = 1; f < h.length && h[f] === undefined; f++);
                            var b = (" " + h[f + 1]).slice(1),
                                T = (" " + h[f + 2]).slice(1);
                            switch (h[f]) {
                                case "#":
                                    c.tagList.push(T ? [b, T] : [b]);
                                    break;
                                case "PLAYLIST-TYPE":
                                    s.type = b.toUpperCase();
                                    break;
                                case "MEDIA-SEQUENCE":
                                    a = s.startSN = parseInt(b);
                                    break;
                                case "TARGETDURATION":
                                    s.targetduration = parseFloat(b);
                                    break;
                                case "VERSION":
                                    s.version = parseInt(b);
                                    break;
                                case "EXTM3U":
                                    break;
                                case "ENDLIST":
                                    s.live = !1;
                                    break;
                                case "DIS":
                                    u++, c.tagList.push(["DIS"]);
                                    break;
                                case "DISCONTINUITY-SEQ":
                                    u = parseInt(b);
                                    break;
                                case "KEY":
                                    var E = new C(b),
                                        S = E.enumeratedString("METHOD"),
                                        _ = E.URI,
                                        R = E.hexadecimalInteger("IV");
                                    S && (l = new k, _ && 0 <= ["AES-128", "SAMPLE-AES", "SAMPLE-AES-CENC"].indexOf(S) && (l.method = S, l.baseuri = e, l.reluri = _, l.key = null, l.iv = R));
                                    break;
                                case "START":
                                    var A = new C(b).decimalFloatingPoint("TIME-OFFSET");
                                    Object(x.a)(A) && (s.startTimeOffset = A);
                                    break;
                                case "MAP":
                                    var w = new C(b);
                                    c.relurl = w.URI, c.rawByteRange = w.BYTERANGE, c.baseurl = e, c.level = r, c.type = i, c.sn = "initSegment", s.initSegment = c, (c = new D).rawProgramDateTime = s.initSegment.rawProgramDateTime;
                                    break;
                                default:
                                    M.b.warn("line parsed but not handled: " + h)
                            }
                        }
                    }
                    return (c = d) && !c.relurl && (s.fragments.pop(), o -= c.duration), s.totalduration = o, s.averagetargetduration = o / s.fragments.length, s.endSN = a - 1, s.startCC = s.fragments[0] ? s.fragments[0].cc : 0, s.endCC = u, !s.initSegment && s.fragments.length && s.fragments.every(function(t) {
                        return U.test(t.relurl)
                    }) && (M.b.warn("MP4 fragments found but no init segment (probably no MAP, incomplete M3U8), trying to fetch SIDX"), (c = new D).relurl = s.fragments[0].relurl, c.baseurl = e, c.level = r, c.type = i, c.sn = "initSegment", s.initSegment = c, s.needSidxRanges = !0), p && function L(t, e) {
                        for (var r = t[e], i = e - 1; 0 <= i; i--) {
                            var n = t[i];
                            n.programDateTime = r.programDateTime - 1e3 * n.duration, r = n
                        }
                    }(s.fragments, p), s
                }, d
            }();

        function N(t, e) {
            t.rawProgramDateTime ? t.programDateTime = Date.parse(t.rawProgramDateTime) : e && e.programDateTime && (t.programDateTime = e.endProgramDateTime), Object(x.a)(t.programDateTime) || (t.programDateTime = null, t.rawProgramDateTime = null)
        }
        var E = function() {
            function i(t, e) {
                for (var r = 0; r < e.length; r++) {
                    var i = e[r];
                    i.enumerable = i.enumerable || !1, i.configurable = !0, "value" in i && (i.writable = !0), Object.defineProperty(t, i.key, i)
                }
            }
            return function(t, e, r) {
                return e && i(t.prototype, e), r && i(t, r), t
            }
        }();
        var S = window.performance,
            _ = {
                MANIFEST: "manifest",
                LEVEL: "level",
                AUDIO_TRACK: "audioTrack",
                SUBTITLE_TRACK: "subtitleTrack"
            },
            R = {
                MAIN: "main",
                AUDIO: "audio",
                SUBTITLE: "subtitle"
            },
            A = function(n) {
                function g(t) {
                    ! function r(t, e) {
                        if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function")
                    }(this, g);
                    var e = function i(t, e) {
                        if (!t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                        return !e || "object" != typeof e && "function" != typeof e ? t : e
                    }(this, n.call(this, t, F.a.MANIFEST_LOADING, F.a.LEVEL_LOADING, F.a.AUDIO_TRACK_LOADING, F.a.SUBTITLE_TRACK_LOADING));
                    return e.loaders = {}, e
                }
                return function r(t, e) {
                    if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function, not " + typeof e);
                    t.prototype = Object.create(e && e.prototype, {
                        constructor: {
                            value: t,
                            enumerable: !1,
                            writable: !0,
                            configurable: !0
                        }
                    }), e && (Object.setPrototypeOf ? Object.setPrototypeOf(t, e) : t.__proto__ = e)
                }(g, n), g.canHaveQualityLevels = function(t) {
                    return t !== _.AUDIO_TRACK && t !== _.SUBTITLE_TRACK
                }, g.mapContextToLevelType = function(t) {
                    switch (t.type) {
                        case _.AUDIO_TRACK:
                            return R.AUDIO;
                        case _.SUBTITLE_TRACK:
                            return R.SUBTITLE;
                        default:
                            return R.MAIN
                    }
                }, g.getResponseUrl = function(t, e) {
                    var r = t.url;
                    return r !== undefined && 0 !== r.indexOf("data:") || (r = e.url), r
                }, g.prototype.createInternalLoader = function(t) {
                    var e = this.hls.config,
                        r = e.pLoader,
                        i = e.loader,
                        n = new(r || i)(e);
                    return t.loader = n, this.loaders[t.type] = n
                }, g.prototype.getInternalLoader = function(t) {
                    return this.loaders[t.type]
                }, g.prototype.resetInternalLoader = function(t) {
                    this.loaders[t] && delete this.loaders[t]
                }, g.prototype.destroyInternalLoaders = function() {
                    for (var t in this.loaders) {
                        var e = this.loaders[t];
                        e && e.destroy(), this.resetInternalLoader(t)
                    }
                }, g.prototype.destroy = function() {
                    this.destroyInternalLoaders(), n.prototype.destroy.call(this)
                }, g.prototype.onManifestLoading = function(t) {
                    this.load(t.url, {
                        type: _.MANIFEST,
                        level: 0,
                        id: null
                    })
                }, g.prototype.onLevelLoading = function(t) {
                    this.load(t.url, {
                        type: _.LEVEL,
                        level: t.level,
                        id: t.id
                    })
                }, g.prototype.onAudioTrackLoading = function(t) {
                    this.load(t.url, {
                        type: _.AUDIO_TRACK,
                        level: null,
                        id: t.id
                    })
                }, g.prototype.onSubtitleTrackLoading = function(t) {
                    this.load(t.url, {
                        type: _.SUBTITLE_TRACK,
                        level: null,
                        id: t.id
                    })
                }, g.prototype.load = function(t, e) {
                    var r = this.hls.config;
                    M.b.debug("Loading playlist of type " + e.type + ", level: " + e.level + ", id: " + e.id);
                    var i = this.getInternalLoader(e);
                    if (i) {
                        var n = i.context;
                        if (n && n.url === t) return M.b.trace("playlist request ongoing"), !1;
                        M.b.warn("aborting previous loader for type: " + e.type), i.abort()
                    }
                    var a = void 0,
                        o = void 0,
                        s = void 0,
                        l = void 0;
                    switch (e.type) {
                        case _.MANIFEST:
                            a = r.manifestLoadingMaxRetry, o = r.manifestLoadingTimeOut, s = r.manifestLoadingRetryDelay, l = r.manifestLoadingMaxRetryTimeout;
                            break;
                        case _.LEVEL:
                            a = 0, o = r.levelLoadingTimeOut;
                            break;
                        default:
                            a = r.levelLoadingMaxRetry, o = r.levelLoadingTimeOut, s = r.levelLoadingRetryDelay, l = r.levelLoadingMaxRetryTimeout
                    }
                    i = this.createInternalLoader(e), e.url = t, e.responseType = e.responseType || "";
                    var u = {
                            timeout: o,
                            maxRetry: a,
                            retryDelay: s,
                            maxRetryDelay: l
                        },
                        d = {
                            onSuccess: this.loadsuccess.bind(this),
                            onError: this.loaderror.bind(this),
                            onTimeout: this.loadtimeout.bind(this)
                        };
                    return M.b.debug("Calling internal loader delegate for URL: " + t), i.load(e, u, d), !0
                }, g.prototype.loadsuccess = function(t, e, r) {
                    var i = 3 < arguments.length && arguments[3] !== undefined ? arguments[3] : null;
                    if (r.isSidxRequest) return this._handleSidxRequest(t, r), void this._handlePlaylistLoaded(t, e, r, i);
                    this.resetInternalLoader(r.type);
                    var n = t.data;
                    e.tload = S.now(), 0 === n.indexOf("#EXTM3U") ? 0 < n.indexOf("#EXTINF:") || 0 < n.indexOf("#EXT-X-TARGETDURATION:") ? this._handleTrackOrLevelPlaylist(t, e, r, i) : this._handleMasterPlaylist(t, e, r, i) : this._handleManifestParsingError(t, r, "no EXTM3U delimiter", i)
                }, g.prototype.loaderror = function(t, e) {
                    var r = 2 < arguments.length && arguments[2] !== undefined ? arguments[2] : null;
                    this._handleNetworkError(e, r)
                }, g.prototype.loadtimeout = function(t, e) {
                    var r = 2 < arguments.length && arguments[2] !== undefined ? arguments[2] : null;
                    this._handleNetworkError(e, r, !0)
                }, g.prototype._handleMasterPlaylist = function(t, e, r, i) {
                    var n = this.hls,
                        a = t.data,
                        o = g.getResponseUrl(t, r),
                        s = T.parseMasterPlaylist(a, o);
                    if (s.length) {
                        var l = s.map(function(t) {
                                return {
                                    id: t.attrs.AUDIO,
                                    codec: t.audioCodec
                                }
                            }),
                            u = T.parseMasterPlaylistMedia(a, o, "AUDIO", l),
                            d = T.parseMasterPlaylistMedia(a, o, "SUBTITLES");
                        if (u.length) {
                            var c = !1;
                            u.forEach(function(t) {
                                t.url || (c = !0)
                            }), !1 === c && s[0].audioCodec && !s[0].attrs.AUDIO && (M.b.log("audio codec signaled in quality level, but no embedded audio track signaled, create one"), u.unshift({
                                type: "main",
                                name: "main"
                            }))
                        }
                        n.trigger(F.a.MANIFEST_LOADED, {
                            levels: s,
                            audioTracks: u,
                            subtitles: d,
                            url: o,
                            stats: e,
                            networkDetails: i
                        })
                    } else this._handleManifestParsingError(t, r, "no level found in manifest", i)
                }, g.prototype._handleTrackOrLevelPlaylist = function(t, e, r, i) {
                    var n = this.hls,
                        a = r.id,
                        o = r.level,
                        s = r.type,
                        l = g.getResponseUrl(t, r),
                        u = Object(x.a)(a) ? a : 0,
                        d = Object(x.a)(o) ? o : u,
                        c = g.mapContextToLevelType(r),
                        h = T.parseLevelPlaylist(t.data, l, d, c, u);
                    if (h.tload = e.tload, s === _.MANIFEST) {
                        var f = {
                            url: l,
                            details: h
                        };
                        n.trigger(F.a.MANIFEST_LOADED, {
                            levels: [f],
                            audioTracks: [],
                            url: l,
                            stats: e,
                            networkDetails: i
                        })
                    }
                    if (e.tparsed = S.now(), h.needSidxRanges) {
                        var p = h.initSegment.url;
                        this.load(p, {
                            isSidxRequest: !0,
                            type: s,
                            level: o,
                            levelDetails: h,
                            id: a,
                            rangeStart: 0,
                            rangeEnd: 2048,
                            responseType: "arraybuffer"
                        })
                    } else r.levelDetails = h, this._handlePlaylistLoaded(t, e, r, i)
                }, g.prototype._handleSidxRequest = function(t, n) {
                    var e = u.a.parseSegmentIndex(new Uint8Array(t.data));
                    e.references.forEach(function(t, e) {
                        var r = t.info,
                            i = n.levelDetails.fragments[e];
                        0 === i.byteRange.length && (i.rawByteRange = String(1 + r.end - r.start) + "@" + String(r.start))
                    }), n.levelDetails.initSegment.rawByteRange = String(e.moovEndOffset) + "@0"
                }, g.prototype._handleManifestParsingError = function(t, e, r, i) {
                    this.hls.trigger(F.a.ERROR, {
                        type: h.b.NETWORK_ERROR,
                        details: h.a.MANIFEST_PARSING_ERROR,
                        fatal: !0,
                        url: t.url,
                        reason: r,
                        networkDetails: i
                    })
                }, g.prototype._handleNetworkError = function(t, e) {
                    var r = 2 < arguments.length && arguments[2] !== undefined && arguments[2];
                    M.b.info("A network error occured while loading a " + t.type + "-type playlist");
                    var i = void 0,
                        n = void 0,
                        a = this.getInternalLoader(t);
                    switch (t.type) {
                        case _.MANIFEST:
                            i = r ? h.a.MANIFEST_LOAD_TIMEOUT : h.a.MANIFEST_LOAD_ERROR, n = !0;
                            break;
                        case _.LEVEL:
                            i = r ? h.a.LEVEL_LOAD_TIMEOUT : h.a.LEVEL_LOAD_ERROR, n = !1;
                            break;
                        case _.AUDIO_TRACK:
                            i = r ? h.a.AUDIO_TRACK_LOAD_TIMEOUT : h.a.AUDIO_TRACK_LOAD_ERROR, n = !1;
                            break;
                        default:
                            n = !1
                    }
                    a && (a.abort(), this.resetInternalLoader(t.type)), this.hls.trigger(F.a.ERROR, {
                        type: h.b.NETWORK_ERROR,
                        details: i,
                        fatal: n,
                        url: a.url,
                        loader: a,
                        context: t,
                        networkDetails: e
                    })
                }, g.prototype._handlePlaylistLoaded = function(t, e, r, i) {
                    var n = r.type,
                        a = r.level,
                        o = r.id,
                        s = r.levelDetails;
                    if (s.targetduration)
                        if (g.canHaveQualityLevels(r.type)) this.hls.trigger(F.a.LEVEL_LOADED, {
                            details: s,
                            level: a || 0,
                            id: o || 0,
                            stats: e,
                            networkDetails: i
                        });
                        else switch (n) {
                            case _.AUDIO_TRACK:
                                this.hls.trigger(F.a.AUDIO_TRACK_LOADED, {
                                    details: s,
                                    id: o,
                                    stats: e,
                                    networkDetails: i
                                });
                                break;
                            case _.SUBTITLE_TRACK:
                                this.hls.trigger(F.a.SUBTITLE_TRACK_LOADED, {
                                    details: s,
                                    id: o,
                                    stats: e,
                                    networkDetails: i
                                })
                        } else this._handleManifestParsingError(t, r, "invalid target duration", i)
                }, E(g, null, [{
                    key: "ContextType",
                    get: function() {
                        return _
                    }
                }, {
                    key: "LevelType",
                    get: function() {
                        return R
                    }
                }]), g
            }(l);
        var w = function(n) {
            function a(t) {
                ! function r(t, e) {
                    if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function")
                }(this, a);
                var e = function i(t, e) {
                    if (!t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                    return !e || "object" != typeof e && "function" != typeof e ? t : e
                }(this, n.call(this, t, F.a.FRAG_LOADING));
                return e.loaders = {}, e
            }
            return function r(t, e) {
                if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function, not " + typeof e);
                t.prototype = Object.create(e && e.prototype, {
                    constructor: {
                        value: t,
                        enumerable: !1,
                        writable: !0,
                        configurable: !0
                    }
                }), e && (Object.setPrototypeOf ? Object.setPrototypeOf(t, e) : t.__proto__ = e)
            }(a, n), a.prototype.destroy = function() {
                var t = this.loaders;
                for (var e in t) {
                    var r = t[e];
                    r && r.destroy()
                }
                this.loaders = {}, n.prototype.destroy.call(this)
            }, a.prototype.onFragLoading = function(t) {
                var e = t.frag,
                    r = e.type,
                    i = this.loaders,
                    n = this.hls.config,
                    a = n.fLoader,
                    o = n.loader;
                e.loaded = 0;
                var s = i[r];
                s && (M.b.warn("abort previous fragment loader for type: " + r), s.abort()), s = i[r] = e.loader = n.fLoader ? new a(n) : new o(n);
                var l, u, d = void 0;
                d = {
                    url: e.url,
                    frag: e,
                    responseType: "arraybuffer",
                    progressData: !1
                };
                var c = e.byteRangeStartOffset,
                    h = e.byteRangeEndOffset;
                Object(x.a)(c) && Object(x.a)(h) && (d.rangeStart = c, d.rangeEnd = h), l = {
                    timeout: n.fragLoadingTimeOut,
                    maxRetry: 0,
                    retryDelay: 0,
                    maxRetryDelay: n.fragLoadingMaxRetryTimeout
                }, u = {
                    onSuccess: this.loadsuccess.bind(this),
                    onError: this.loaderror.bind(this),
                    onTimeout: this.loadtimeout.bind(this),
                    onProgress: this.loadprogress.bind(this)
                }, s.load(d, l, u)
            }, a.prototype.loadsuccess = function(t, e, r) {
                var i = 3 < arguments.length && arguments[3] !== undefined ? arguments[3] : null,
                    n = t.data,
                    a = r.frag;
                a.loader = undefined, this.loaders[a.type] = undefined, this.hls.trigger(F.a.FRAG_LOADED, {
                    payload: n,
                    frag: a,
                    stats: e,
                    networkDetails: i
                })
            }, a.prototype.loaderror = function(t, e) {
                var r = 2 < arguments.length && arguments[2] !== undefined ? arguments[2] : null,
                    i = e.frag,
                    n = i.loader;
                n && n.abort(), this.loaders[i.type] = undefined, this.hls.trigger(F.a.ERROR, {
                    type: h.b.NETWORK_ERROR,
                    details: h.a.FRAG_LOAD_ERROR,
                    fatal: !1,
                    frag: e.frag,
                    response: t,
                    networkDetails: r
                })
            }, a.prototype.loadtimeout = function(t, e) {
                var r = 2 < arguments.length && arguments[2] !== undefined ? arguments[2] : null,
                    i = e.frag,
                    n = i.loader;
                n && n.abort(), this.loaders[i.type] = undefined, this.hls.trigger(F.a.ERROR, {
                    type: h.b.NETWORK_ERROR,
                    details: h.a.FRAG_LOAD_TIMEOUT,
                    fatal: !1,
                    frag: e.frag,
                    networkDetails: r
                })
            }, a.prototype.loadprogress = function(t, e, r) {
                var i = 3 < arguments.length && arguments[3] !== undefined ? arguments[3] : null,
                    n = e.frag;
                n.loaded = t.loaded, this.hls.trigger(F.a.FRAG_LOAD_PROGRESS, {
                    frag: n,
                    stats: t,
                    networkDetails: i
                })
            }, a
        }(l);
        var L = function(n) {
            function a(t) {
                ! function r(t, e) {
                    if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function")
                }(this, a);
                var e = function i(t, e) {
                    if (!t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                    return !e || "object" != typeof e && "function" != typeof e ? t : e
                }(this, n.call(this, t, F.a.KEY_LOADING));
                return e.loaders = {}, e.decryptkey = null, e.decrypturl = null, e
            }
            return function r(t, e) {
                if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function, not " + typeof e);
                t.prototype = Object.create(e && e.prototype, {
                    constructor: {
                        value: t,
                        enumerable: !1,
                        writable: !0,
                        configurable: !0
                    }
                }), e && (Object.setPrototypeOf ? Object.setPrototypeOf(t, e) : t.__proto__ = e)
            }(a, n), a.prototype.destroy = function() {
                for (var t in this.loaders) {
                    var e = this.loaders[t];
                    e && e.destroy()
                }
                this.loaders = {}, l.prototype.destroy.call(this)
            }, a.prototype.onKeyLoading = function(t) {
                var e = t.frag,
                    r = e.type,
                    i = this.loaders[r],
                    n = e.decryptdata,
                    a = n.uri;
                if (a !== this.decrypturl || null === this.decryptkey) {
                    var o = this.hls.config;
                    i && (M.b.warn("abort previous key loader for type:" + r), i.abort()), e.loader = this.loaders[r] = new o.loader(o), this.decrypturl = a, this.decryptkey = null;
                    var s, l, u;
                    s = {
                        url: a,
                        frag: e,
                        responseType: "arraybuffer"
                    }, l = {
                        timeout: o.fragLoadingTimeOut,
                        maxRetry: o.fragLoadingMaxRetry,
                        retryDelay: o.fragLoadingRetryDelay,
                        maxRetryDelay: o.fragLoadingMaxRetryTimeout
                    }, u = {
                        onSuccess: this.loadsuccess.bind(this),
                        onError: this.loaderror.bind(this),
                        onTimeout: this.loadtimeout.bind(this)
                    }, e.loader.load(s, l, u)
                } else this.decryptkey && (n.key = this.decryptkey, this.hls.trigger(F.a.KEY_LOADED, {
                    frag: e
                }))
            }, a.prototype.loadsuccess = function(t, e, r) {
                var i = r.frag;
                this.decryptkey = i.decryptdata.key = new Uint8Array(t.data), i.loader = undefined, this.loaders[i.type] = undefined, this.hls.trigger(F.a.KEY_LOADED, {
                    frag: i
                })
            }, a.prototype.loaderror = function(t, e) {
                var r = e.frag,
                    i = r.loader;
                i && i.abort(), this.loaders[e.type] = undefined, this.hls.trigger(F.a.ERROR, {
                    type: h.b.NETWORK_ERROR,
                    details: h.a.KEY_LOAD_ERROR,
                    fatal: !1,
                    frag: r,
                    response: t
                })
            }, a.prototype.loadtimeout = function(t, e) {
                var r = e.frag,
                    i = r.loader;
                i && i.abort(), this.loaders[e.type] = undefined, this.hls.trigger(F.a.ERROR, {
                    type: h.b.NETWORK_ERROR,
                    details: h.a.KEY_LOAD_TIMEOUT,
                    fatal: !1,
                    frag: r
                })
            }, a
        }(l);
        var B = "NOT_LOADED",
            G = "APPENDING",
            K = "PARTIAL",
            j = "OK",
            H = function(n) {
                function a(t) {
                    ! function r(t, e) {
                        if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function")
                    }(this, a);
                    var e = function i(t, e) {
                        if (!t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                        return !e || "object" != typeof e && "function" != typeof e ? t : e
                    }(this, n.call(this, t, F.a.BUFFER_APPENDED, F.a.FRAG_BUFFERED, F.a.FRAG_LOADED));
                    return e.bufferPadding = .2, e.fragments = Object.create(null), e.timeRanges = Object.create(null), e.config = t.config, e
                }
                return function r(t, e) {
                    if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function, not " + typeof e);
                    t.prototype = Object.create(e && e.prototype, {
                        constructor: {
                            value: t,
                            enumerable: !1,
                            writable: !0,
                            configurable: !0
                        }
                    }), e && (Object.setPrototypeOf ? Object.setPrototypeOf(t, e) : t.__proto__ = e)
                }(a, n), a.prototype.destroy = function() {
                    this.fragments = null, this.timeRanges = null, this.config = null, l.prototype.destroy.call(this), n.prototype.destroy.call(this)
                }, a.prototype.getBufferedFrag = function(i, n) {
                    var a = this.fragments,
                        t = Object.keys(a).filter(function(t) {
                            var e = a[t];
                            if (e.body.type !== n) return !1;
                            if (!e.buffered) return !1;
                            var r = e.body;
                            return r.startPTS <= i && i <= r.endPTS
                        });
                    if (0 === t.length) return null;
                    var e = t.pop();
                    return a[e].body
                }, a.prototype.detectEvictedFragments = function(n, a) {
                    var o = this,
                        s = void 0,
                        l = void 0;
                    Object.keys(this.fragments).forEach(function(t) {
                        var e = o.fragments[t];
                        if (!0 === e.buffered) {
                            var r = e.range[n];
                            if (r) {
                                s = r.time;
                                for (var i = 0; i < s.length; i++)
                                    if (l = s[i], !1 === o.isTimeBuffered(l.startPTS, l.endPTS, a)) {
                                        o.removeFragment(e.body);
                                        break
                                    }
                            }
                        }
                    })
                }, a.prototype.detectPartialFragments = function(r) {
                    var i = this,
                        t = this.getFragmentKey(r),
                        n = this.fragments[t];
                    n && (n.buffered = !0, Object.keys(this.timeRanges).forEach(function(t) {
                        if (r.hasElementaryStream(t)) {
                            var e = i.timeRanges[t];
                            n.range[t] = i.getBufferedTimes(r.startPTS, r.endPTS, e)
                        }
                    }))
                }, a.prototype.getBufferedTimes = function(t, e, r) {
                    for (var i = [], n = void 0, a = void 0, o = !1, s = 0; s < r.length; s++) {
                        if (n = r.start(s) - this.bufferPadding, a = r.end(s) + this.bufferPadding, n <= t && e <= a) {
                            i.push({
                                startPTS: Math.max(t, r.start(s)),
                                endPTS: Math.min(e, r.end(s))
                            });
                            break
                        }
                        if (t < a && n < e) i.push({
                            startPTS: Math.max(t, r.start(s)),
                            endPTS: Math.min(e, r.end(s))
                        }), o = !0;
                        else if (e <= n) break
                    }
                    return {
                        time: i,
                        partial: o
                    }
                }, a.prototype.getFragmentKey = function(t) {
                    return t.type + "_" + t.level + "_" + t.urlId + "_" + t.sn
                }, a.prototype.getPartialFragment = function(r) {
                    var i = this,
                        n = void 0,
                        a = void 0,
                        o = void 0,
                        s = null,
                        l = 0;
                    return Object.keys(this.fragments).forEach(function(t) {
                        var e = i.fragments[t];
                        i.isPartial(e) && (a = e.body.startPTS - i.bufferPadding, o = e.body.endPTS + i.bufferPadding, a <= r && r <= o && (n = Math.min(r - a, o - r), l <= n && (s = e.body, l = n)))
                    }), s
                }, a.prototype.getState = function(t) {
                    var e = this.getFragmentKey(t),
                        r = this.fragments[e],
                        i = B;
                    return r !== undefined && (i = r.buffered ? !0 === this.isPartial(r) ? K : j : G), i
                }, a.prototype.isPartial = function(t) {
                    return !0 === t.buffered && (t.range.video !== undefined && !0 === t.range.video.partial || t.range.audio !== undefined && !0 === t.range.audio.partial)
                }, a.prototype.isTimeBuffered = function(t, e, r) {
                    for (var i = void 0, n = void 0, a = 0; a < r.length; a++) {
                        if (i = r.start(a) - this.bufferPadding, n = r.end(a) + this.bufferPadding, i <= t && e <= n) return !0;
                        if (e <= i) return !1
                    }
                    return !1
                }, a.prototype.onFragLoaded = function(t) {
                    var e = t.frag;
                    Object(x.a)(e.sn) && !e.bitrateTest && (this.fragments[this.getFragmentKey(e)] = {
                        body: e,
                        range: Object.create(null),
                        buffered: !1
                    })
                }, a.prototype.onBufferAppended = function(t) {
                    var r = this;
                    this.timeRanges = t.timeRanges, Object.keys(this.timeRanges).forEach(function(t) {
                        var e = r.timeRanges[t];
                        r.detectEvictedFragments(t, e)
                    })
                }, a.prototype.onFragBuffered = function(t) {
                    this.detectPartialFragments(t.frag)
                }, a.prototype.hasFragment = function(t) {
                    var e = this.getFragmentKey(t);
                    return this.fragments[e] !== undefined
                }, a.prototype.removeFragment = function(t) {
                    var e = this.getFragmentKey(t);
                    delete this.fragments[e]
                }, a.prototype.removeAllFragments = function() {
                    this.fragments = Object.create(null)
                }, a
            }(l),
            V = {
                search: function(t, e) {
                    for (var r = 0, i = t.length - 1, n = null, a = null; r <= i;) {
                        var o = e(a = t[n = (r + i) / 2 | 0]);
                        if (0 < o) r = n + 1;
                        else {
                            if (!(o < 0)) return a;
                            i = n - 1
                        }
                    }
                    return null
                }
            };
        var Y = function() {
                function t() {
                    ! function r(t, e) {
                        if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function")
                    }(this, t)
                }
                return t.isBuffered = function(t, e) {
                    try {
                        if (t)
                            for (var r = t.buffered, i = 0; i < r.length; i++)
                                if (e >= r.start(i) && e <= r.end(i)) return !0
                    } catch (n) {}
                    return !1
                }, t.bufferInfo = function(t, e, r) {
                    try {
                        if (t) {
                            var i = t.buffered,
                                n = [],
                                a = void 0;
                            for (a = 0; a < i.length; a++) n.push({
                                start: i.start(a),
                                end: i.end(a)
                            });
                            return this.bufferedInfo(n, e, r)
                        }
                    } catch (o) {}
                    return {
                        len: 0,
                        start: e,
                        end: e,
                        nextStart: undefined
                    }
                }, t.bufferedInfo = function(t, e, r) {
                    var i = [],
                        n = void 0,
                        a = void 0,
                        o = void 0,
                        s = void 0,
                        l = void 0;
                    for (t.sort(function(t, e) {
                            var r = t.start - e.start;
                            return r || e.end - t.end
                        }), l = 0; l < t.length; l++) {
                        var u = i.length;
                        if (u) {
                            var d = i[u - 1].end;
                            t[l].start - d < r ? t[l].end > d && (i[u - 1].end = t[l].end) : i.push(t[l])
                        } else i.push(t[l])
                    }
                    for (n = l = 0, a = o = e; l < i.length; l++) {
                        var c = i[l].start,
                            h = i[l].end;
                        if (c <= e + r && e < h) a = c, n = (o = h) - e;
                        else if (e + r < c) {
                            s = c;
                            break
                        }
                    }
                    return {
                        len: n,
                        start: a,
                        end: o,
                        nextStart: s
                    }
                }, t
            }(),
            W = r(7),
            q = r.n(W),
            X = r(12),
            z = r.n(X),
            Q = r(10);

        function $() {
            if ("undefined" != typeof window) return window.MediaSource || window.WebKitMediaSource
        }
        var J = r(4);
        var Z = Object(J.a)(),
            tt = $(),
            et = function() {
                function d(r, t) {
                    ! function l(t, e) {
                        if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function")
                    }(this, d), this.hls = r, this.id = t;
                    var n = this.observer = new q.a,
                        e = r.config;
                    n.trigger = function(t) {
                        for (var e = arguments.length, r = Array(1 < e ? e - 1 : 0), i = 1; i < e; i++) r[i - 1] = arguments[i];
                        n.emit.apply(n, [t, t].concat(r))
                    }, n.off = function(t) {
                        for (var e = arguments.length, r = Array(1 < e ? e - 1 : 0), i = 1; i < e; i++) r[i - 1] = arguments[i];
                        n.removeListener.apply(n, [t].concat(r))
                    };
                    var i = function(t, e) {
                        (e = e || {}).frag = this.frag, e.id = this.id, r.trigger(t, e)
                    }.bind(this);
                    n.on(F.a.FRAG_DECRYPTED, i), n.on(F.a.FRAG_PARSING_INIT_SEGMENT, i), n.on(F.a.FRAG_PARSING_DATA, i), n.on(F.a.FRAG_PARSED, i), n.on(F.a.ERROR, i), n.on(F.a.FRAG_PARSING_METADATA, i), n.on(F.a.FRAG_PARSING_USERDATA, i), n.on(F.a.INIT_PTS_FOUND, i);
                    var a = {
                            mp4: tt.isTypeSupported("video/mp4"),
                            mpeg: tt.isTypeSupported("audio/mpeg"),
                            mp3: tt.isTypeSupported('audio/mp4; codecs="mp3"')
                        },
                        o = navigator.vendor;
                    if (e.enableWorker && "undefined" != typeof Worker) {
                        M.b.log("demuxing in webworker");
                        var s = void 0;
                        try {
                            s = this.w = z()(13), this.onwmsg = this.onWorkerMessage.bind(this), s.addEventListener("message", this.onwmsg), s.onerror = function(t) {
                                r.trigger(F.a.ERROR, {
                                    type: h.b.OTHER_ERROR,
                                    details: h.a.INTERNAL_EXCEPTION,
                                    fatal: !0,
                                    event: "demuxerWorker",
                                    err: {
                                        message: t.message + " (" + t.filename + ":" + t.lineno + ")"
                                    }
                                })
                            }, s.postMessage({
                                cmd: "init",
                                typeSupported: a,
                                vendor: o,
                                id: t,
                                config: JSON.stringify(e)
                            })
                        } catch (u) {
                            M.b.error("error while initializing DemuxerWorker, fallback on DemuxerInline"), s && Z.URL.revokeObjectURL(s.objectURL), this.demuxer = new Q.a(n, a, e, o), this.w = undefined
                        }
                    } else this.demuxer = new Q.a(n, a, e, o)
                }
                return d.prototype.destroy = function() {
                    var t = this.w;
                    if (t) t.removeEventListener("message", this.onwmsg), t.terminate(), this.w = null;
                    else {
                        var e = this.demuxer;
                        e && (e.destroy(), this.demuxer = null)
                    }
                    var r = this.observer;
                    r && (r.removeAllListeners(), this.observer = null)
                }, d.prototype.push = function(t, e, r, i, n, a, o, s) {
                    var l = this.w,
                        u = Object(x.a)(n.startDTS) ? n.startDTS : n.start,
                        d = n.decryptdata,
                        c = this.frag,
                        h = !(c && n.cc === c.cc),
                        f = !(c && n.level === c.level),
                        p = c && n.sn === c.sn + 1,
                        g = !f && p;
                    if (h && M.b.log(this.id + ":discontinuity detected"), f && M.b.log(this.id + ":switch detected"), this.frag = n, l) l.postMessage({
                        cmd: "demux",
                        data: t,
                        decryptdata: d,
                        initSegment: e,
                        audioCodec: r,
                        videoCodec: i,
                        timeOffset: u,
                        discontinuity: h,
                        trackSwitch: f,
                        contiguous: g,
                        duration: a,
                        accurateTimeOffset: o,
                        defaultInitPTS: s
                    }, t instanceof ArrayBuffer ? [t] : []);
                    else {
                        var v = this.demuxer;
                        v && v.push(t, d, e, r, i, u, h, f, g, a, o, s)
                    }
                }, d.prototype.onWorkerMessage = function(t) {
                    var e = t.data,
                        r = this.hls;
                    switch (e.event) {
                        case "init":
                            Z.URL.revokeObjectURL(this.w.objectURL);
                            break;
                        case F.a.FRAG_PARSING_DATA:
                            e.data.data1 = new Uint8Array(e.data1), e.data2 && (e.data.data2 = new Uint8Array(e.data2));
                        default:
                            e.data = e.data || {}, e.data.frag = this.frag, e.data.id = this.id, r.trigger(e.event, e.data)
                    }
                }, d
            }();

        function rt(t, e, r) {
            switch (e) {
                case "audio":
                    t.audioGroupIds || (t.audioGroupIds = []), t.audioGroupIds.push(r);
                    break;
                case "text":
                    t.textGroupIds || (t.textGroupIds = []), t.textGroupIds.push(r)
            }
        }

        function it(t, e, r) {
            var i = t[e],
                n = t[r],
                a = n.startPTS;
            Object(x.a)(a) ? e < r ? (i.duration = a - i.start, i.duration < 0 && M.b.warn("negative duration computed for frag " + i.sn + ",level " + i.level + ", there should be some duration drift between playlist and fragment!")) : (n.duration = i.start - a, n.duration < 0 && M.b.warn("negative duration computed for frag " + n.sn + ",level " + n.level + ", there should be some duration drift between playlist and fragment!")) : n.start = e < r ? i.start + i.duration : Math.max(i.start - n.duration, 0)
        }

        function nt(t, e, r, i, n, a) {
            var o = r;
            if (Object(x.a)(e.startPTS)) {
                var s = Math.abs(e.startPTS - r);
                Object(x.a)(e.deltaPTS) ? e.deltaPTS = Math.max(s, e.deltaPTS) : e.deltaPTS = s, o = Math.max(r, e.startPTS), r = Math.min(r, e.startPTS), i = Math.max(i, e.endPTS), n = Math.min(n, e.startDTS), a = Math.max(a, e.endDTS)
            }
            var l = r - e.start;
            e.start = e.startPTS = r, e.maxStartPTS = o, e.endPTS = i, e.startDTS = n, e.endDTS = a, e.duration = i - r;
            var u = e.sn;
            if (!t || u < t.startSN || u > t.endSN) return 0;
            var d, c = void 0,
                h = void 0;
            for (d = u - t.startSN, (c = t.fragments)[d] = e, h = d; 0 < h; h--) it(c, h, h - 1);
            for (h = d; h < c.length - 1; h++) it(c, h, h + 1);
            return t.PTSKnown = !0, l
        }

        function at(t, e) {
            var r = Math.max(t.startSN, e.startSN) - e.startSN,
                i = Math.min(t.endSN, e.endSN) - e.startSN,
                n = e.startSN - t.startSN,
                a = t.fragments,
                o = e.fragments,
                s = 0,
                l = void 0;
            if (e.initSegment && t.initSegment && (e.initSegment = t.initSegment), i < r) e.PTSKnown = !1;
            else {
                for (var u = r; u <= i; u++) {
                    var d = a[n + u],
                        c = o[u];
                    c && d && (s = d.cc - c.cc, Object(x.a)(d.startPTS) && (c.start = c.startPTS = d.startPTS, c.endPTS = d.endPTS, c.duration = d.duration, c.backtracked = d.backtracked, c.dropped = d.dropped, l = c))
                }
                if (s)
                    for (M.b.log("discontinuity sliding from playlist, take drift into account"), u = 0; u < o.length; u++) o[u].cc += s;
                if (l) nt(e, l, l.startPTS, l.endPTS, l.startDTS, l.endDTS);
                else if (0 <= n && n < a.length) {
                    var h = a[n].start;
                    for (u = 0; u < o.length; u++) o[u].start += h
                }
                e.PTSKnown = t.PTSKnown
            }
        }
        var ot = {
            toString: function(t) {
                for (var e = "", r = t.length, i = 0; i < r; i++) e += "[" + t.start(i).toFixed(3) + "," + t.end(i).toFixed(3) + "]";
                return e
            }
        };

        function st(r, t) {
            t.fragments.forEach(function(t) {
                if (t) {
                    var e = t.start + r;
                    t.start = t.startPTS = e, t.endPTS = e + t.duration
                }
            }), t.PTSKnown = !0
        }

        function lt(t, e, r) {
            ! function a(t, e, r) {
                if (function n(t, e, r) {
                        var i = !1;
                        return e && e.details && r && (r.endCC > r.startCC || t && t.cc < r.startCC) && (i = !0), i
                    }(t, r, e)) {
                    var i = function o(t, e) {
                        var r = t.fragments,
                            i = e.fragments;
                        if (i.length && r.length) {
                            var n = function a(t, e) {
                                for (var r = null, i = 0; i < t.length; i += 1) {
                                    var n = t[i];
                                    if (n && n.cc === e) {
                                        r = n;
                                        break
                                    }
                                }
                                return r
                            }(r, i[0].cc);
                            if (n && (!n || n.startPTS)) return n;
                            M.b.log("No frag in previous level to align on")
                        } else M.b.log("No fragments to align")
                    }(r.details, e);
                    i && (M.b.log("Adjusting PTS using last level due to CC increase within current level"), st(i.start, e))
                }
            }(t, r, e), !r.PTSKnown && e && function o(t, e) {
                if (e && e.fragments.length) {
                    if (!t.hasProgramDateTime || !e.hasProgramDateTime) return;
                    var r = e.fragments[0].programDateTime,
                        i = t.fragments[0].programDateTime,
                        n = (i - r) / 1e3 + e.fragments[0].start;
                    Object(x.a)(n) && (M.b.log("adjusting PTS using programDateTime delta, sliding:" + n.toFixed(3)), st(n, t))
                }
            }(r, e.details)
        }
        var ut = function(s) {
            function l(t) {
                ! function a(t, e) {
                    if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function")
                }(this, l);
                for (var e = arguments.length, r = Array(1 < e ? e - 1 : 0), i = 1; i < e; i++) r[i - 1] = arguments[i];
                var n = function o(t, e) {
                    if (!t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                    return !e || "object" != typeof e && "function" != typeof e ? t : e
                }(this, s.call.apply(s, [this, t].concat(r)));
                return n._tickInterval = null, n._tickTimer = null, n._tickCallCount = 0, n._boundTick = n.tick.bind(n), n
            }
            return function r(t, e) {
                if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function, not " + typeof e);
                t.prototype = Object.create(e && e.prototype, {
                    constructor: {
                        value: t,
                        enumerable: !1,
                        writable: !0,
                        configurable: !0
                    }
                }), e && (Object.setPrototypeOf ? Object.setPrototypeOf(t, e) : t.__proto__ = e)
            }(l, s), l.prototype.onHandlerDestroying = function() {
                this.clearNextTick(), this.clearInterval()
            }, l.prototype.hasInterval = function() {
                return !!this._tickInterval
            }, l.prototype.hasNextTick = function() {
                return !!this._tickTimer
            }, l.prototype.setInterval = function(e) {
                function t(t) {
                    return e.apply(this, arguments)
                }
                return t.toString = function() {
                    return e.toString()
                }, t
            }(function(t) {
                return !this._tickInterval && (this._tickInterval = setInterval(this._boundTick, t), !0)
            }), l.prototype.clearInterval = function(t) {
                function e() {
                    return t.apply(this, arguments)
                }
                return e.toString = function() {
                    return t.toString()
                }, e
            }(function() {
                return !!this._tickInterval && (clearInterval(this._tickInterval), !(this._tickInterval = null))
            }), l.prototype.clearNextTick = function() {
                return !!this._tickTimer && (clearTimeout(this._tickTimer), !(this._tickTimer = null))
            }, l.prototype.tick = function() {
                this._tickCallCount++, 1 === this._tickCallCount && (this.doTick(), 1 < this._tickCallCount && (this.clearNextTick(), this._tickTimer = setTimeout(this._boundTick, 0)), this._tickCallCount = 0)
            }, l.prototype.doTick = function() {}, l
        }(l);

        function dt() {
            var t = 0 < arguments.length && arguments[0] !== undefined ? arguments[0] : 0,
                e = 1 < arguments.length && arguments[1] !== undefined ? arguments[1] : 0,
                r = arguments[2],
                i = Math.min(e, r.duration + (r.deltaPTS ? r.deltaPTS : 0));
            return r.start + r.duration - i <= t ? 1 : r.start - i > t && r.start ? -1 : 0
        }
        var ct = function() {
                function a(t, e, r, i) {
                    ! function n(t, e) {
                        if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function")
                    }(this, a), this.config = t, this.media = e, this.fragmentTracker = r, this.hls = i, this.stallReported = !1
                }
                return a.prototype.poll = function(t, e) {
                    var r = this.config,
                        i = this.media,
                        n = i.currentTime,
                        a = window.performance.now();
                    if (n !== t) return this.stallReported && (M.b.warn("playback not stuck anymore @" + n + ", after " + Math.round(a - this.stalled) + "ms"), this.stallReported = !1), this.stalled = null, void(this.nudgeRetry = 0);
                    if (!(i.ended || !i.buffered.length || 2 < i.readyState || i.seeking && Y.isBuffered(i, n))) {
                        var o = a - this.stalled,
                            s = Y.bufferInfo(i, n, r.maxBufferHole);
                        this.stalled ? (1e3 <= o && this._reportStall(s.len), this._tryFixBufferStall(s, o)) : this.stalled = a
                    }
                }, a.prototype._tryFixBufferStall = function(t, e) {
                    var r = this.config,
                        i = this.fragmentTracker,
                        n = this.media.currentTime,
                        a = i.getPartialFragment(n);
                    a && this._trySkipBufferHole(a), .5 < t.len && e > 1e3 * r.highBufferWatchdogPeriod && (this.stalled = null, this._tryNudgeBuffer())
                }, a.prototype._reportStall = function(t) {
                    var e = this.hls,
                        r = this.media;
                    this.stallReported || (this.stallReported = !0, M.b.warn("Playback stalling at @" + r.currentTime + " due to low buffer"), e.trigger(F.a.ERROR, {
                        type: h.b.MEDIA_ERROR,
                        details: h.a.BUFFER_STALLED_ERROR,
                        fatal: !1,
                        buffer: t
                    }))
                }, a.prototype._trySkipBufferHole = function(t) {
                    for (var e = this.hls, r = this.media, i = r.currentTime, n = 0, a = 0; a < r.buffered.length; a++) {
                        var o = r.buffered.start(a);
                        if (n <= i && i < o) return r.currentTime = Math.max(o, r.currentTime + .1), M.b.warn("skipping hole, adjusting currentTime from " + i + " to " + r.currentTime), this.stalled = null, void e.trigger(F.a.ERROR, {
                            type: h.b.MEDIA_ERROR,
                            details: h.a.BUFFER_SEEK_OVER_HOLE,
                            fatal: !1,
                            reason: "fragment loaded with buffer holes, seeking from " + i + " to " + r.currentTime,
                            frag: t
                        });
                        n = r.buffered.end(a)
                    }
                }, a.prototype._tryNudgeBuffer = function() {
                    var t = this.config,
                        e = this.hls,
                        r = this.media,
                        i = r.currentTime,
                        n = (this.nudgeRetry || 0) + 1;
                    if ((this.nudgeRetry = n) < t.nudgeMaxRetry) {
                        var a = i + n * t.nudgeOffset;
                        M.b.log("adjust currentTime from " + i + " to " + a), r.currentTime = a, e.trigger(F.a.ERROR, {
                            type: h.b.MEDIA_ERROR,
                            details: h.a.BUFFER_NUDGE_ON_STALL,
                            fatal: !1
                        })
                    } else M.b.error("still stuck in high buffer @" + i + " after " + t.nudgeMaxRetry + ", raise fatal error"), e.trigger(F.a.ERROR, {
                        type: h.b.MEDIA_ERROR,
                        details: h.a.BUFFER_STALLED_ERROR,
                        fatal: !0
                    })
                }, a
            }(),
            ht = function() {
                function i(t, e) {
                    for (var r = 0; r < e.length; r++) {
                        var i = e[r];
                        i.enumerable = i.enumerable || !1, i.configurable = !0, "value" in i && (i.writable = !0), Object.defineProperty(t, i.key, i)
                    }
                }
                return function(t, e, r) {
                    return e && i(t.prototype, e), r && i(t, r), t
                }
            }();
        var ft = "STOPPED",
            pt = "IDLE",
            gt = "KEY_LOADING",
            vt = "FRAG_LOADING",
            yt = "FRAG_LOADING_WAITING_RETRY",
            mt = "WAITING_LEVEL",
            bt = "PARSING",
            Tt = "PARSED",
            Et = "BUFFER_FLUSHING",
            St = "ENDED",
            _t = "ERROR",
            Rt = function(a) {
                function o(t, e) {
                    ! function i(t, e) {
                        if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function")
                    }(this, o);
                    var r = function n(t, e) {
                        if (!t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                        return !e || "object" != typeof e && "function" != typeof e ? t : e
                    }(this, a.call(this, t, F.a.MEDIA_ATTACHED, F.a.MEDIA_DETACHING, F.a.MANIFEST_LOADING, F.a.MANIFEST_PARSED, F.a.LEVEL_LOADED, F.a.KEY_LOADED, F.a.FRAG_LOADED, F.a.FRAG_LOAD_EMERGENCY_ABORTED, F.a.FRAG_PARSING_INIT_SEGMENT, F.a.FRAG_PARSING_DATA, F.a.FRAG_PARSED, F.a.ERROR, F.a.AUDIO_TRACK_SWITCHING, F.a.AUDIO_TRACK_SWITCHED, F.a.BUFFER_CREATED, F.a.BUFFER_APPENDED, F.a.BUFFER_FLUSHED));
                    return r.fragmentTracker = e, r.config = t.config, r.audioCodecSwap = !1, r._state = ft, r.stallReported = !1, r.gapController = null, r
                }
                return function r(t, e) {
                    if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function, not " + typeof e);
                    t.prototype = Object.create(e && e.prototype, {
                        constructor: {
                            value: t,
                            enumerable: !1,
                            writable: !0,
                            configurable: !0
                        }
                    }), e && (Object.setPrototypeOf ? Object.setPrototypeOf(t, e) : t.__proto__ = e)
                }(o, a), o.prototype.onHandlerDestroying = function() {
                    this.stopLoad(), a.prototype.onHandlerDestroying.call(this)
                }, o.prototype.onHandlerDestroyed = function() {
                    this.state = ft, this.fragmentTracker = null, a.prototype.onHandlerDestroyed.call(this)
                }, o.prototype.startLoad = function(t) {
                    if (this.levels) {
                        var e = this.lastCurrentTime,
                            r = this.hls;
                        if (this.stopLoad(), this.setInterval(100), this.level = -1, this.fragLoadError = 0, !this.startFragRequested) {
                            var i = r.startLevel; - 1 === i && (i = 0, this.bitrateTest = !0), this.level = r.nextLoadLevel = i, this.loadedmetadata = !1
                        }
                        0 < e && -1 === t && (M.b.log("override startPosition with lastCurrentTime @" + e.toFixed(3)), t = e), this.state = pt, this.nextLoadPosition = this.startPosition = this.lastCurrentTime = t, this.tick()
                    } else this.forceStartLoad = !0, this.state = ft
                }, o.prototype.stopLoad = function() {
                    var t = this.fragCurrent;
                    t && (t.loader && t.loader.abort(), this.fragmentTracker.removeFragment(t), this.fragCurrent = null), this.fragPrevious = null, this.demuxer && (this.demuxer.destroy(), this.demuxer = null), this.clearInterval(), this.state = ft, this.forceStartLoad = !1
                }, o.prototype.doTick = function() {
                    switch (this.state) {
                        case Et:
                            this.fragLoadError = 0;
                            break;
                        case pt:
                            this._doTickIdle();
                            break;
                        case mt:
                            var t = this.levels[this.level];
                            t && t.details && (this.state = pt);
                            break;
                        case yt:
                            var e = window.performance.now(),
                                r = this.retryDate;
                            (!r || r <= e || this.media && this.media.seeking) && (M.b.log("mediaController: retryDate reached, switch back to IDLE state"), this.state = pt)
                    }
                    this._checkBuffer(), this._checkFragmentChanged()
                }, o.prototype._doTickIdle = function() {
                    var t = this.hls,
                        e = t.config,
                        r = this.media;
                    if (this.levelLastLoaded !== undefined && (r || !this.startFragRequested && e.startFragPrefetch)) {
                        var i = void 0;
                        i = this.loadedmetadata ? r.currentTime : this.nextLoadPosition;
                        var n = t.nextLoadLevel,
                            a = this.levels[n];
                        if (a) {
                            var o = a.bitrate,
                                s = void 0;
                            s = o ? Math.max(8 * e.maxBufferSize / o, e.maxBufferLength) : e.maxBufferLength, s = Math.min(s, e.maxMaxBufferLength);
                            var l = Y.bufferInfo(this.mediaBuffer ? this.mediaBuffer : r, i, e.maxBufferHole),
                                u = l.len;
                            if (!(s <= u)) {
                                M.b.trace("buffer length of " + u.toFixed(3) + " is below max of " + s.toFixed(3) + ". checking for more payload ..."), this.level = t.nextLoadLevel = n;
                                var d = a.details;
                                if (!d || d.live && this.levelLastLoaded !== n) this.state = mt;
                                else {
                                    var c = this.fragPrevious;
                                    if (!d.live && c && !c.backtracked && c.sn === d.endSN && !l.nextStart)
                                        if (Math.min(r.duration, c.start + c.duration) - Math.max(l.end, c.start) <= Math.max(.2, c.duration)) {
                                            var h = {};
                                            return this.altAudio && (h.type = "video"), this.hls.trigger(F.a.BUFFER_EOS, h), void(this.state = St)
                                        } this._fetchPayloadOrEos(i, l, d)
                                }
                            }
                        }
                    }
                }, o.prototype._fetchPayloadOrEos = function(t, e, r) {
                    var i = this.fragPrevious,
                        n = this.level,
                        a = r.fragments,
                        o = a.length;
                    if (0 !== o) {
                        var s = a[0].start,
                            l = a[o - 1].start + a[o - 1].duration,
                            u = e.end,
                            d = void 0;
                        if (r.initSegment && !r.initSegment.data) d = r.initSegment;
                        else if (r.live) {
                            var c = this.config.initialLiveManifestSize;
                            if (o < c) return void M.b.warn("No se puede iniciar la reproducciÃƒÂ³n de un nivel, motivo: no hay suficientes fragmentos " + o + " < " + c);
                            if (null === (d = this._ensureFragmentAtLivePoint(r, u, s, l, i, a, o))) return
                        } else u < s && (d = a[0]);
                        d || (d = this._findFragment(s, i, o, a, u, l, r)), d && (d.encrypted ? (M.b.log("Cargando clave para " + d.sn + " of [" + r.startSN + " ," + r.endSN + "],level " + n), this._loadKey(d)) : (M.b.log("Loading " + d.sn + " of [" + r.startSN + " ," + r.endSN + "],level " + n + ", currentTime:" + t.toFixed(3) + ",bufferEnd:" + u.toFixed(3)), this._loadFragment(d)))
                    }
                }, o.prototype._ensureFragmentAtLivePoint = function(t, e, r, i, n, a, o) {
                    var s = this.hls.config,
                        l = this.media,
                        u = void 0,
                        d = s.liveMaxLatencyDuration !== undefined ? s.liveMaxLatencyDuration : s.liveMaxLatencyDurationCount * t.targetduration;
                    if (e < Math.max(r - s.maxFragLookUpTolerance, i - d)) {
                        var c = this.liveSyncPosition = this.computeLivePosition(r, t);
                        M.b.log("buffer end: " + e.toFixed(3) + " se encuentra demasiado lejos del final de la lista de reproducciÃƒÂ³n deslizante en vivo, restablezca currentTime a: " + c.toFixed(3)), e = c, l && l.readyState && l.duration > c && (l.currentTime = c), this.nextLoadPosition = c
                    }
                    if (t.PTSKnown && i < e && l && l.readyState) return null;
                    if (this.startFragRequested && !t.PTSKnown) {
                        if (n)
                            if (t.hasProgramDateTime) M.b.log("lista de reproducciÃƒÂ³n en vivo, cambiar lista de reproducciÃƒÂ³n, cargar fragmento con el mismo PDT:v " + n.programDateTime), u = function p(t, e, r) {
                                if (!Array.isArray(t) || !t.length || !Object(x.a)(e)) return null;
                                if (e < t[0].programDateTime) return null;
                                if (e >= t[t.length - 1].endProgramDateTime) return null;
                                r = r || 0;
                                for (var i = 0; i < t.length; ++i) {
                                    var n = t[i];
                                    if (a = e, o = r, s = n, l = 1e3 * Math.min(o, s.duration + (s.deltaPTS ? s.deltaPTS : 0)), s.endProgramDateTime - l > a) return n
                                }
                                var a, o, s, l;
                                return null
                            }(a, n.endProgramDateTime, s.maxFragLookUpTolerance);
                            else {
                                var h = n.sn + 1;
                                if (h >= t.startSN && h <= t.endSN) {
                                    var f = a[h - t.startSN];
                                    n.cc === f.cc && (u = f, M.b.log("lista de reproducciÃƒÂ³n en vivo, cambiar de lista de reproducciÃƒÂ³n, cargar fragmento con el siguiente SN: " + u.sn))
                                }
                                u || (u = V.search(a, function(t) {
                                    return n.cc - t.cc
                                })) && M.b.log("lista de reproducciÃƒÂ³n en vivo, cambiar de lista de reproducciÃƒÂ³n, cargar fragmento con el mismo CC: " + u.sn)
                            } u || (u = a[Math.min(o - 1, Math.round(o / 2))], M.b.log("lista de reproducciÃƒÂ³n en vivo, cambiar lista de reproducciÃƒÂ³n, desconocido, cargar fragmento medio: " + u.sn))
                    }
                    return u
                }, o.prototype._findFragment = function(t, e, r, i, n, a, o) {
                    var s = this.hls.config,
                        l = void 0;
                    n < a ? l = function p(t, e) {
                        var r = 2 < arguments.length && arguments[2] !== undefined ? arguments[2] : 0,
                            i = 3 < arguments.length && arguments[3] !== undefined ? arguments[3] : 0,
                            n = t ? e[t.sn - e[0].sn + 1] : null;
                        return n && !dt(r, i, n) ? n : V.search(e, dt.bind(null, r, i))
                    }(e, i, n, n > a - s.maxFragLookUpTolerance ? 0 : s.maxFragLookUpTolerance) : l = i[r - 1];
                    if (l) {
                        var u = l.sn - o.startSN,
                            d = e && l.level === e.level,
                            c = i[u - 1],
                            h = i[u + 1];
                        if (e && l.sn === e.sn)
                            if (d && !l.backtracked)
                                if (l.sn < o.endSN) {
                                    var f = e.deltaPTS;
                                    f && f > s.maxBufferHole && e.dropped && u ? (l = c, M.b.warn("SN reciÃƒÂ©n cargado, con una gran brecha de PTS entre audio y video, Ã‚Â¿quizÃƒÂ¡s el fragmento no comienza con un fotograma clave? carga el anterior para intentar superar este")) : (l = h, M.b.log("SN acaba de cargar, carga el siguiente: " + l.sn, l))
                                } else l = null;
                        else l.backtracked && (h && h.backtracked ? (M.b.warn("Ya retrocedido desde el fragmento" + h.sn + ", no retrocederÃƒÂ¡ para fragmentar " + l.sn + ". Loading fragment " + h.sn), l = h) : (M.b.warn("Fragmento cargado con fotogramas caÃƒÂ­dos, retrocediendo 1 segmento para encontrar un fotograma clave"), l.dropped = 0, c ? (l = c).backtracked = !0 : u && (l = null)))
                    }
                    return l
                }, o.prototype._loadKey = function(t) {
                    this.state = gt, this.hls.trigger(F.a.KEY_LOADING, {
                        frag: t
                    })
                }, o.prototype._loadFragment = function(t) {
                    var e = this.fragmentTracker.getState(t);
                    this.fragCurrent = t, this.startFragRequested = !0, Object(x.a)(t.sn) && !t.bitrateTest && (this.nextLoadPosition = t.start + t.duration), t.backtracked || e === B || e === K ? (t.autoLevel = this.hls.autoLevelEnabled, t.bitrateTest = this.bitrateTest, this.hls.trigger(F.a.FRAG_LOADING, {
                        frag: t
                    }), this.demuxer || (this.demuxer = new et(this.hls, "main")), this.state = vt) : e === G && this._reduceMaxBufferLength(t.duration) && this.fragmentTracker.removeFragment(t)
                }, o.prototype.getBufferedFrag = function(t) {
                    return this.fragmentTracker.getBufferedFrag(t, A.LevelType.MAIN)
                }, o.prototype.followingBufferedFrag = function(t) {
                    return t ? this.getBufferedFrag(t.endPTS + .5) : null
                }, o.prototype._checkFragmentChanged = function() {
                    var t = void 0,
                        e = void 0,
                        r = this.media;
                    if (r && r.readyState && !1 === r.seeking && ((e = r.currentTime) > this.lastCurrentTime && (this.lastCurrentTime = e), Y.isBuffered(r, e) ? t = this.getBufferedFrag(e) : Y.isBuffered(r, e + .1) && (t = this.getBufferedFrag(e + .1)), t)) {
                        var i = t;
                        if (i !== this.fragPlaying) {
                            this.hls.trigger(F.a.FRAG_CHANGED, {
                                frag: i
                            });
                            var n = i.level;
                            this.fragPlaying && this.fragPlaying.level === n || this.hls.trigger(F.a.LEVEL_SWITCHED, {
                                level: n
                            }), this.fragPlaying = i
                        }
                    }
                }, o.prototype.immediateLevelSwitch = function() {
                    if (M.b.log("immediateLevelSwitch"), !this.immediateSwitch) {
                        this.immediateSwitch = !0;
                        var t = this.media,
                            e = void 0;
                        t ? (e = t.paused, t.pause()) : e = !0, this.previouslyPaused = e
                    }
                    var r = this.fragCurrent;
                    r && r.loader && r.loader.abort(), this.fragCurrent = null, this.flushMainBuffer(0, Number.POSITIVE_INFINITY)
                }, o.prototype.immediateLevelSwitchEnd = function() {
                    var t = this.media;
                    t && t.buffered.length && (this.immediateSwitch = !1, Y.isBuffered(t, t.currentTime) && (t.currentTime -= 1e-4), this.previouslyPaused || t.play())
                }, o.prototype.nextLevelSwitch = function() {
                    var t = this.media;
                    if (t && t.readyState) {
                        var e, r = void 0,
                            i = void 0;
                        if ((e = this.getBufferedFrag(t.currentTime)) && 1 < e.startPTS && this.flushMainBuffer(0, e.startPTS - 1), t.paused) r = 0;
                        else {
                            var n = this.hls.nextLoadLevel,
                                a = this.levels[n],
                                o = this.fragLastKbps;
                            r = o && this.fragCurrent ? this.fragCurrent.duration * a.bitrate / (1e3 * o) + 1 : 0
                        }
                        if ((i = this.getBufferedFrag(t.currentTime + r)) && (i = this.followingBufferedFrag(i))) {
                            var s = this.fragCurrent;
                            s && s.loader && s.loader.abort(), this.fragCurrent = null, this.flushMainBuffer(i.maxStartPTS, Number.POSITIVE_INFINITY)
                        }
                    }
                }, o.prototype.flushMainBuffer = function(t, e) {
                    this.state = Et;
                    var r = {
                        startOffset: t,
                        endOffset: e
                    };
                    this.altAudio && (r.type = "video"), this.hls.trigger(F.a.BUFFER_FLUSHING, r)
                }, o.prototype.onMediaAttached = function(t) {
                    var e = this.media = this.mediaBuffer = t.media;
                    this.onvseeking = this.onMediaSeeking.bind(this), this.onvseeked = this.onMediaSeeked.bind(this), this.onvended = this.onMediaEnded.bind(this), e.addEventListener("seeking", this.onvseeking), e.addEventListener("seeked", this.onvseeked), e.addEventListener("ended", this.onvended);
                    var r = this.config;
                    this.levels && r.autoStartLoad && this.hls.startLoad(r.startPosition), this.gapController = new ct(r, e, this.fragmentTracker, this.hls)
                }, o.prototype.onMediaDetaching = function() {
                    var t = this.media;
                    t && t.ended && (M.b.log("MSE detaching and video ended, reset startPosition"), this.startPosition = this.lastCurrentTime = 0);
                    var e = this.levels;
                    e && e.forEach(function(t) {
                        t.details && t.details.fragments.forEach(function(t) {
                            t.backtracked = undefined
                        })
                    }), t && (t.removeEventListener("seeking", this.onvseeking), t.removeEventListener("seeked", this.onvseeked), t.removeEventListener("ended", this.onvended), this.onvseeking = this.onvseeked = this.onvended = null), this.media = this.mediaBuffer = null, this.loadedmetadata = !1, this.stopLoad()
                }, o.prototype.onMediaSeeking = function() {
                    var t = this.media,
                        e = t ? t.currentTime : undefined,
                        r = this.config;
                    Object(x.a)(e) && M.b.log("media seeking to " + e.toFixed(3));
                    var i = this.mediaBuffer ? this.mediaBuffer : t,
                        n = Y.bufferInfo(i, e, this.config.maxBufferHole);
                    if (this.state === vt) {
                        var a = this.fragCurrent;
                        if (0 === n.len && a) {
                            var o = r.maxFragLookUpTolerance,
                                s = a.start - o,
                                l = a.start + a.duration + o;
                            e < s || l < e ? (a.loader && (M.b.log("seeking outside of buffer while fragment load in progress, cancel fragment load"), a.loader.abort()), this.fragCurrent = null, this.fragPrevious = null, this.state = pt) : M.b.log("seeking outside of buffer but within currently loaded fragment range")
                        }
                    } else this.state === St && (0 === n.len && (this.fragPrevious = 0), this.state = pt);
                    t && (this.lastCurrentTime = e), this.loadedmetadata || (this.nextLoadPosition = this.startPosition = e), this.tick()
                }, o.prototype.onMediaSeeked = function() {
                    var t = this.media,
                        e = t ? t.currentTime : undefined;
                    Object(x.a)(e) && M.b.log("media seeked to " + e.toFixed(3)), this.tick()
                }, o.prototype.onMediaEnded = function() {
                    M.b.log("media ended"), this.startPosition = this.lastCurrentTime = 0
                }, o.prototype.onManifestLoading = function() {
                    M.b.log("trigger BUFFER_RESET"), this.hls.trigger(F.a.BUFFER_RESET), this.fragmentTracker.removeAllFragments(), this.stalled = !1, this.startPosition = this.lastCurrentTime = 0
                }, o.prototype.onManifestParsed = function(t) {
                    var e = !1,
                        r = !1,
                        i = void 0;
                    t.levels.forEach(function(t) {
                        (i = t.audioCodec) && (-1 !== i.indexOf("mp4a.40.2") && (e = !0), -1 !== i.indexOf("mp4a.40.5") && (r = !0))
                    }), this.audioCodecSwitch = e && r, this.audioCodecSwitch && M.b.log("both AAC/HE-AAC audio found in levels; declaring level codec as HE-AAC"), this.levels = t.levels, this.startFragRequested = !1;
                    var n = this.config;
                    (n.autoStartLoad || this.forceStartLoad) && this.hls.startLoad(n.startPosition)
                }, o.prototype.onLevelLoaded = function(t) {
                    var e = t.details,
                        r = t.level,
                        i = this.levels[this.levelLastLoaded],
                        n = this.levels[r],
                        a = e.totalduration,
                        o = 0;
                    if (M.b.log("level " + r + " loaded [" + e.startSN + "," + e.endSN + "],duration:" + a), e.live) {
                        var s = n.details;
                        s && 0 < e.fragments.length ? (at(s, e), o = e.fragments[0].start, this.liveSyncPosition = this.computeLivePosition(o, s), e.PTSKnown && Object(x.a)(o) ? M.b.log("live playlist sliding:" + o.toFixed(3)) : (M.b.log("live playlist - outdated PTS, unknown sliding"), lt(this.fragPrevious, i, e))) : (M.b.log("live playlist - first load, unknown sliding"), e.PTSKnown = !1, lt(this.fragPrevious, i, e))
                    } else e.PTSKnown = !1;
                    if (n.details = e, this.levelLastLoaded = r, this.hls.trigger(F.a.LEVEL_UPDATED, {
                            details: e,
                            level: r
                        }), !1 === this.startFragRequested) {
                        if (-1 === this.startPosition || -1 === this.lastCurrentTime) {
                            var l = e.startTimeOffset;
                            Object(x.a)(l) ? (l < 0 && (M.b.log("negative start time offset " + l + ", count from end of last fragment"), l = o + a + l), M.b.log("start time offset found in playlist, adjust startPosition to " + l), this.startPosition = l) : e.live ? (this.startPosition = this.computeLivePosition(o, e), M.b.log("configure startPosition to " + this.startPosition)) : this.startPosition = 0, this.lastCurrentTime = this.startPosition
                        }
                        this.nextLoadPosition = this.startPosition
                    }
                    this.state === mt && (this.state = pt), this.tick()
                }, o.prototype.onKeyLoaded = function() {
                    this.state === gt && (this.state = pt, this.tick())
                }, o.prototype.onFragLoaded = function(t) {
                    var e = this.fragCurrent,
                        r = this.hls,
                        i = this.levels,
                        n = this.media,
                        a = t.frag;
                    if (this.state === vt && e && "main" === a.type && a.level === e.level && a.sn === e.sn) {
                        var o = t.stats,
                            s = i[e.level],
                            l = s.details;
                        if (this.bitrateTest = !1, this.stats = o, M.b.log("Loaded " + e.sn + " of [" + l.startSN + " ," + l.endSN + "],level " + e.level), a.bitrateTest && r.nextLoadLevel) this.state = pt, this.startFragRequested = !1, o.tparsed = o.tbuffered = window.performance.now(), r.trigger(F.a.FRAG_BUFFERED, {
                            stats: o,
                            frag: e,
                            id: "main"
                        }), this.tick();
                        else if ("initSegment" === a.sn) this.state = pt, o.tparsed = o.tbuffered = window.performance.now(), l.initSegment.data = t.payload, r.trigger(F.a.FRAG_BUFFERED, {
                            stats: o,
                            frag: e,
                            id: "main"
                        }), this.tick();
                        else {
                            M.b.log("Parsing " + e.sn + " of [" + l.startSN + " ," + l.endSN + "],level " + e.level + ", cc " + e.cc), this.state = bt, this.pendingBuffering = !0, this.appended = !1, a.bitrateTest && (a.bitrateTest = !1, this.fragmentTracker.onFragLoaded({
                                frag: a
                            }));
                            var u = !(n && n.seeking) && (l.PTSKnown || !l.live),
                                d = l.initSegment ? l.initSegment.data : [],
                                c = this._getAudioCodec(s);
                            (this.demuxer = this.demuxer || new et(this.hls, "main")).push(t.payload, d, c, s.videoCodec, e, l.totalduration, u)
                        }
                    }
                    this.fragLoadError = 0
                }, o.prototype.onFragParsingInitSegment = function(t) {
                    var e = this.fragCurrent,
                        r = t.frag;
                    if (e && "main" === t.id && r.sn === e.sn && r.level === e.level && this.state === bt) {
                        var i = t.tracks,
                            n = void 0,
                            a = void 0;
                        if (i.audio && this.altAudio && delete i.audio, a = i.audio) {
                            var o = this.levels[this.level].audioCodec,
                                s = navigator.userAgent.toLowerCase();
                            o && this.audioCodecSwap && (M.b.log("swapping playlist audio codec"), o = -1 !== o.indexOf("mp4a.40.5") ? "mp4a.40.2" : "mp4a.40.5"), this.audioCodecSwitch && 1 !== a.metadata.channelCount && -1 === s.indexOf("firefox") && (o = "mp4a.40.5"), -1 !== s.indexOf("android") && "audio/mpeg" !== a.container && (o = "mp4a.40.2", M.b.log("Android: force audio codec to " + o)), a.levelCodec = o, a.id = t.id
                        }
                        for (n in (a = i.video) && (a.levelCodec = this.levels[this.level].videoCodec, a.id = t.id), this.hls.trigger(F.a.BUFFER_CODECS, i), i) {
                            a = i[n], M.b.log("main track:" + n + ",container:" + a.container + ",codecs[level/parsed]=[" + a.levelCodec + "/" + a.codec + "]");
                            var l = a.initSegment;
                            l && (this.appended = !0, this.pendingBuffering = !0, this.hls.trigger(F.a.BUFFER_APPENDING, {
                                type: n,
                                data: l,
                                parent: "main",
                                content: "initSegment"
                            }))
                        }
                        this.tick()
                    }
                }, o.prototype.onFragParsingData = function(e) {
                    var r = this,
                        t = this.fragCurrent,
                        i = e.frag;
                    if (t && "main" === e.id && i.sn === t.sn && i.level === t.level && ("audio" !== e.type || !this.altAudio) && this.state === bt) {
                        var n = this.levels[this.level],
                            a = t;
                        if (Object(x.a)(e.endPTS) || (e.endPTS = e.startPTS + t.duration, e.endDTS = e.startDTS + t.duration), !0 === e.hasAudio && a.addElementaryStream(D.ElementaryStreamTypes.AUDIO), !0 === e.hasVideo && a.addElementaryStream(D.ElementaryStreamTypes.VIDEO), M.b.log("Parsed " + e.type + ",PTS:[" + e.startPTS.toFixed(3) + "," + e.endPTS.toFixed(3) + "],DTS:[" + e.startDTS.toFixed(3) + "/" + e.endDTS.toFixed(3) + "],nb:" + e.nb + ",dropped:" + (e.dropped || 0)), "video" === e.type)
                            if (a.dropped = e.dropped, a.dropped)
                                if (a.backtracked) M.b.warn("Already backtracked on this fragment, appending with the gap", a.sn);
                                else {
                                    var o = n.details;
                                    if (!o || a.sn !== o.startSN) return M.b.warn("missing video frame(s), backtracking fragment", a.sn), this.fragmentTracker.removeFragment(a), a.backtracked = !0, this.nextLoadPosition = e.startPTS, this.state = pt, this.fragPrevious = a, void this.tick();
                                    M.b.warn("missing video frame(s) on first frag, appending with gap", a.sn)
                                }
                        else a.backtracked = !1;
                        var s = nt(n.details, a, e.startPTS, e.endPTS, e.startDTS, e.endDTS),
                            l = this.hls;
                        l.trigger(F.a.LEVEL_PTS_UPDATED, {
                            details: n.details,
                            level: this.level,
                            drift: s,
                            type: e.type,
                            start: e.startPTS,
                            end: e.endPTS
                        }), [e.data1, e.data2].forEach(function(t) {
                            t && t.length && r.state === bt && (r.appended = !0, r.pendingBuffering = !0, l.trigger(F.a.BUFFER_APPENDING, {
                                type: e.type,
                                data: t,
                                parent: "main",
                                content: "data"
                            }))
                        }), this.tick()
                    }
                }, o.prototype.onFragParsed = function(t) {
                    var e = this.fragCurrent,
                        r = t.frag;
                    e && "main" === t.id && r.sn === e.sn && r.level === e.level && this.state === bt && (this.stats.tparsed = window.performance.now(), this.state = Tt, this._checkAppendedParsed())
                }, o.prototype.onAudioTrackSwitching = function(t) {
                    var e = !!t.url,
                        r = t.id;
                    if (!e) {
                        if (this.mediaBuffer !== this.media) {
                            M.b.log("switching on main audio, use media.buffered to schedule main fragment loading"), this.mediaBuffer = this.media;
                            var i = this.fragCurrent;
                            i.loader && (M.b.log("switching to main audio track, cancel main fragment load"), i.loader.abort()), this.fragCurrent = null, this.fragPrevious = null, this.demuxer && (this.demuxer.destroy(), this.demuxer = null), this.state = pt
                        }
                        var n = this.hls;
                        n.trigger(F.a.BUFFER_FLUSHING, {
                            startOffset: 0,
                            endOffset: Number.POSITIVE_INFINITY,
                            type: "audio"
                        }), n.trigger(F.a.AUDIO_TRACK_SWITCHED, {
                            id: r
                        }), this.altAudio = !1
                    }
                }, o.prototype.onAudioTrackSwitched = function(t) {
                    var e = t.id,
                        r = !!this.hls.audioTracks[e].url;
                    if (r) {
                        var i = this.videoBuffer;
                        i && this.mediaBuffer !== i && (M.b.log("switching on alternate audio, use video.buffered to schedule main fragment loading"), this.mediaBuffer = i)
                    }
                    this.altAudio = r, this.tick()
                }, o.prototype.onBufferCreated = function(t) {
                    var e = t.tracks,
                        r = void 0,
                        i = void 0,
                        n = !1;
                    for (var a in e) {
                        var o = e[a];
                        "main" === o.id ? (r = o, "video" === (i = a) && (this.videoBuffer = e[a].buffer)) : n = !0
                    }
                    this.mediaBuffer = n && r ? (M.b.log("alternate track found, use " + i + ".buffered to schedule main fragment loading"), r.buffer) : this.media
                }, o.prototype.onBufferAppended = function(t) {
                    if ("main" === t.parent) {
                        var e = this.state;
                        e !== bt && e !== Tt || (this.pendingBuffering = 0 < t.pending, this._checkAppendedParsed())
                    }
                }, o.prototype._checkAppendedParsed = function() {
                    if (!(this.state !== Tt || this.appended && this.pendingBuffering)) {
                        var t = this.fragCurrent;
                        if (t) {
                            var e = this.mediaBuffer ? this.mediaBuffer : this.media;
                            M.b.log("main buffered : " + ot.toString(e.buffered)), this.fragPrevious = t;
                            var r = this.stats;
                            r.tbuffered = window.performance.now(), this.fragLastKbps = Math.round(8 * r.total / (r.tbuffered - r.tfirst)), this.hls.trigger(F.a.FRAG_BUFFERED, {
                                stats: r,
                                frag: t,
                                id: "main"
                            }), this.state = pt
                        }
                        this.tick()
                    }
                }, o.prototype.onError = function(t) {
                    var e = t.frag || this.fragCurrent;
                    if (!e || "main" === e.type) {
                        var r = !!this.media && Y.isBuffered(this.media, this.media.currentTime) && Y.isBuffered(this.media, this.media.currentTime + .5);
                        switch (t.details) {
                            case h.a.FRAG_LOAD_ERROR:
                            case h.a.FRAG_LOAD_TIMEOUT:
                            case h.a.KEY_LOAD_ERROR:
                            case h.a.KEY_LOAD_TIMEOUT:
                                if (!t.fatal)
                                    if (this.fragLoadError + 1 <= this.config.fragLoadingMaxRetry) {
                                        var i = Math.min(Math.pow(2, this.fragLoadError) * this.config.fragLoadingRetryDelay, this.config.fragLoadingMaxRetryTimeout);
                                        M.b.warn("mediaController: frag loading failed, retry in " + i + " ms"), this.retryDate = window.performance.now() + i, this.loadedmetadata || (this.startFragRequested = !1, this.nextLoadPosition = this.startPosition), this.fragLoadError++, this.state = yt
                                    } else M.b.error("mediaController: " + t.details + " reaches max retry, redispatch as fatal ..."), t.fatal = !0, this.state = _t;
                                break;
                            case h.a.LEVEL_LOAD_ERROR:
                            case h.a.LEVEL_LOAD_TIMEOUT:
                                this.state !== _t && (t.fatal ? (this.state = _t, M.b.warn("streamController: " + t.details + ",switch to " + this.state + " state ...")) : t.levelRetry || this.state !== mt || (this.state = pt));
                                break;
                            case h.a.BUFFER_FULL_ERROR:
                                "main" !== t.parent || this.state !== bt && this.state !== Tt || (r ? (this._reduceMaxBufferLength(this.config.maxBufferLength), this.state = pt) : (M.b.warn("buffer full error also media.currentTime is not buffered, flush everything"), this.fragCurrent = null, this.flushMainBuffer(0, Number.POSITIVE_INFINITY)))
                        }
                    }
                }, o.prototype._reduceMaxBufferLength = function(t) {
                    var e = this.config;
                    return e.maxMaxBufferLength >= t && (e.maxMaxBufferLength /= 2, M.b.warn("main:reduce max buffer length to " + e.maxMaxBufferLength + "s"), !0)
                }, o.prototype._checkBuffer = function() {
                    var t = this.media;
                    if (t && 0 !== t.readyState) {
                        var e = (this.mediaBuffer ? this.mediaBuffer : t).buffered;
                        !this.loadedmetadata && e.length ? (this.loadedmetadata = !0, this._seekToStartPos()) : this.immediateSwitch ? this.immediateLevelSwitchEnd() : this.gapController.poll(this.lastCurrentTime, e)
                    }
                }, o.prototype.onFragLoadEmergencyAborted = function() {
                    this.state = pt, this.loadedmetadata || (this.startFragRequested = !1, this.nextLoadPosition = this.startPosition), this.tick()
                }, o.prototype.onBufferFlushed = function() {
                    var t = this.mediaBuffer ? this.mediaBuffer : this.media;
                    t && this.fragmentTracker.detectEvictedFragments(D.ElementaryStreamTypes.VIDEO, t.buffered), this.state = pt, this.fragPrevious = null
                }, o.prototype.swapAudioCodec = function() {
                    this.audioCodecSwap = !this.audioCodecSwap
                }, o.prototype.computeLivePosition = function(t, e) {
                    var r = this.config.liveSyncDuration !== undefined ? this.config.liveSyncDuration : this.config.liveSyncDurationCount * e.targetduration;
                    return t + Math.max(0, e.totalduration - r)
                }, o.prototype._seekToStartPos = function() {
                    var t = this.media,
                        e = t.currentTime,
                        r = t.seeking ? e : this.startPosition;
                    e !== r && (M.b.log("target start position not buffered, seek to buffered.start(0) " + r + " from current time " + e + " "), t.currentTime = r)
                }, o.prototype._getAudioCodec = function(t) {
                    var e = this.config.defaultAudioCodec || t.audioCodec;
                    return this.audioCodecSwap && (M.b.log("swapping playlist audio codec"), e && (e = -1 !== e.indexOf("mp4a.40.5") ? "mp4a.40.2" : "mp4a.40.5")), e
                }, ht(o, [{
                    key: "state",
                    set: function(t) {
                        if (this.state !== t) {
                            var e = this.state;
                            this._state = t, M.b.log("main stream:" + e + "->" + t), this.hls.trigger(F.a.STREAM_STATE_TRANSITION, {
                                previousState: e,
                                nextState: t
                            })
                        }
                    },
                    get: function() {
                        return this._state
                    }
                }, {
                    key: "currentLevel",
                    get: function() {
                        var t = this.media;
                        if (t) {
                            var e = this.getBufferedFrag(t.currentTime);
                            if (e) return e.level
                        }
                        return -1
                    }
                }, {
                    key: "nextBufferedFrag",
                    get: function() {
                        var t = this.media;
                        return t ? this.followingBufferedFrag(this.getBufferedFrag(t.currentTime)) : null
                    }
                }, {
                    key: "nextLevel",
                    get: function() {
                        var t = this.nextBufferedFrag;
                        return t ? t.level : -1
                    }
                }, {
                    key: "liveSyncPosition",
                    get: function() {
                        return this._liveSyncPosition
                    },
                    set: function(t) {
                        this._liveSyncPosition = t
                    }
                }]), o
            }(ut),
            At = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                return typeof t
            } : function(t) {
                return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t
            },
            wt = function() {
                function i(t, e) {
                    for (var r = 0; r < e.length; r++) {
                        var i = e[r];
                        i.enumerable = i.enumerable || !1, i.configurable = !0, "value" in i && (i.writable = !0), Object.defineProperty(t, i.key, i)
                    }
                }
                return function(t, e, r) {
                    return e && i(t.prototype, e), r && i(t, r), t
                }
            }();
        var Lt = window.performance,
            kt = function(n) {
                function a(t) {
                    ! function r(t, e) {
                        if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function")
                    }(this, a);
                    var e = function i(t, e) {
                        if (!t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                        return !e || "object" != typeof e && "function" != typeof e ? t : e
                    }(this, n.call(this, t, F.a.MANIFEST_LOADED, F.a.LEVEL_LOADED, F.a.AUDIO_TRACK_SWITCHED, F.a.FRAG_LOADED, F.a.ERROR));
                    return e.canload = !1, e.currentLevelIndex = null, e.manualLevelIndex = -1, e.timer = null, e
                }
                return function r(t, e) {
                    if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function, not " + typeof e);
                    t.prototype = Object.create(e && e.prototype, {
                        constructor: {
                            value: t,
                            enumerable: !1,
                            writable: !0,
                            configurable: !0
                        }
                    }), e && (Object.setPrototypeOf ? Object.setPrototypeOf(t, e) : t.__proto__ = e)
                }(a, n), a.prototype.onHandlerDestroying = function() {
                    this.clearTimer(), this.manualLevelIndex = -1
                }, a.prototype.clearTimer = function() {
                    null !== this.timer && (clearTimeout(this.timer), this.timer = null)
                }, a.prototype.startLoad = function() {
                    var t = this._levels;
                    this.canload = !0, this.levelRetryCount = 0, t && t.forEach(function(t) {
                        t.loadError = 0;
                        var e = t.details;
                        e && e.live && (t.details = undefined)
                    }), null !== this.timer && this.loadLevel()
                }, a.prototype.stopLoad = function() {
                    this.canload = !1
                }, a.prototype.onManifestLoaded = function(t) {
                    var e = [],
                        r = void 0,
                        i = {},
                        n = null,
                        a = !1,
                        o = !1,
                        s = /chrome|firefox/.test(navigator.userAgent.toLowerCase()),
                        l = [];
                    if (t.levels.forEach(function(t) {
                            t.loadError = 0, t.fragmentError = !1, a = a || !!t.videoCodec, o = o || !!t.audioCodec || !(!t.attrs || !t.attrs.AUDIO), s && t.audioCodec && -1 !== t.audioCodec.indexOf("mp4a.40.34") && (t.audioCodec = undefined), (n = i[t.bitrate]) ? n.url.push(t.url) : (t.url = [t.url], t.urlId = 0, i[t.bitrate] = t, e.push(t)), t.attrs && t.attrs.AUDIO && rt(n || t, "audio", t.attrs.AUDIO), t.attrs && t.attrs.SUBTITLES && rt(n || t, "text", t.attrs.SUBTITLES)
                        }), a && o && (e = e.filter(function(t) {
                            return !!t.videoCodec
                        })), e = e.filter(function(t) {
                            var e = t.audioCodec,
                                r = t.videoCodec;
                            return (!e || y(e)) && (!r || y(r))
                        }), t.audioTracks && (l = t.audioTracks.filter(function(t) {
                            return !t.audioCodec || y(t.audioCodec, "audio")
                        })).forEach(function(t, e) {
                            t.id = e
                        }), 0 < e.length) {
                        r = e[0].bitrate, e.sort(function(t, e) {
                            return t.bitrate - e.bitrate
                        }), this._levels = e;
                        for (var u = 0; u < e.length; u++)
                            if (e[u].bitrate === r) {
                                this._firstLevel = u, M.b.log("manifest loaded," + e.length + " level(s) found, first bitrate:" + r);
                                break
                            } this.hls.trigger(F.a.MANIFEST_PARSED, {
                            levels: e,
                            audioTracks: l,
                            firstLevel: this._firstLevel,
                            stats: t.stats,
                            audio: o,
                            video: a,
                            altAudio: 0 < l.length && a
                        })
                    } else this.hls.trigger(F.a.ERROR, {
                        type: h.b.MEDIA_ERROR,
                        details: h.a.MANIFEST_INCOMPATIBLE_CODECS_ERROR,
                        fatal: !0,
                        url: this.hls.url,
                        reason: "no level with compatible codecs found in manifest"
                    })
                }, a.prototype.setLevelInternal = function(t) {
                    var e = this._levels,
                        r = this.hls;
                    if (0 <= t && t < e.length) {
                        if (this.clearTimer(), this.currentLevelIndex !== t) {
                            M.b.log("switching to level " + t);
                            var i = e[this.currentLevelIndex = t];
                            i.level = t, r.trigger(F.a.LEVEL_SWITCHING, i)
                        }
                        var n = e[t],
                            a = n.details;
                        if (!a || a.live) {
                            var o = n.urlId;
                            r.trigger(F.a.LEVEL_LOADING, {
                                url: n.url[o],
                                level: t,
                                id: o
                            })
                        }
                    } else r.trigger(F.a.ERROR, {
                        type: h.b.OTHER_ERROR,
                        details: h.a.LEVEL_SWITCH_ERROR,
                        level: t,
                        fatal: !1,
                        reason: "invalid level idx"
                    })
                }, a.prototype.onError = function(t) {
                    if (t.fatal) t.type === h.b.NETWORK_ERROR && this.clearTimer();
                    else {
                        var e = !1,
                            r = !1,
                            i = void 0;
                        switch (t.details) {
                            case h.a.FRAG_LOAD_ERROR:
                            case h.a.FRAG_LOAD_TIMEOUT:
                            case h.a.KEY_LOAD_ERROR:
                            case h.a.KEY_LOAD_TIMEOUT:
                                i = t.frag.level, r = !0;
                                break;
                            case h.a.LEVEL_LOAD_ERROR:
                            case h.a.LEVEL_LOAD_TIMEOUT:
                                i = t.context.level, e = !0;
                                break;
                            case h.a.REMUX_ALLOC_ERROR:
                                i = t.level, e = !0
                        }
                        i !== undefined && this.recoverLevel(t, i, e, r)
                    }
                }, a.prototype.recoverLevel = function(t, e, r, i) {
                    var n = this,
                        a = this.hls.config,
                        o = t.details,
                        s = this._levels[e],
                        l = void 0,
                        u = void 0,
                        d = void 0;
                    if (s.loadError++, s.fragmentError = i, r) {
                        if (!(this.levelRetryCount + 1 <= a.levelLoadingMaxRetry)) return M.b.error("level controller, cannot recover from " + o + " error"), this.currentLevelIndex = null, this.clearTimer(), void(t.fatal = !0);
                        u = Math.min(Math.pow(2, this.levelRetryCount) * a.levelLoadingRetryDelay, a.levelLoadingMaxRetryTimeout), this.timer = setTimeout(function() {
                            return n.loadLevel()
                        }, u), t.levelRetry = !0, this.levelRetryCount++, M.b.warn("level controller, " + o + ", retry in " + u + " ms, current retry count is " + this.levelRetryCount)
                    }(r || i) && (1 < (l = s.url.length) && s.loadError < l ? (s.urlId = (s.urlId + 1) % l, s.details = undefined, M.b.warn("level controller, " + o + " for level " + e + ": switching to redundant URL-id " + s.urlId)) : -1 === this.manualLevelIndex ? (d = 0 === e ? this._levels.length - 1 : e - 1, M.b.warn("level controller, " + o + ": switch to " + d), this.hls.nextAutoLevel = this.currentLevelIndex = d) : i && (M.b.warn("level controller, " + o + ": reload a fragment"), this.currentLevelIndex = null))
                }, a.prototype.onFragLoaded = function(t) {
                    var e = t.frag;
                    if (e !== undefined && "main" === e.type) {
                        var r = this._levels[e.level];
                        r !== undefined && (r.fragmentError = !1, r.loadError = 0, this.levelRetryCount = 0)
                    }
                }, a.prototype.onLevelLoaded = function(t) {
                    var e = this,
                        r = t.level;
                    if (r === this.currentLevelIndex) {
                        var i = this._levels[r];
                        i.fragmentError || (i.loadError = 0, this.levelRetryCount = 0);
                        var n = t.details;
                        if (n.live) {
                            var a = 1e3 * (n.averagetargetduration ? n.averagetargetduration : n.targetduration),
                                o = a,
                                s = i.details;
                            s && n.endSN === s.endSN && (o /= 2, M.b.log("same live playlist, reload twice faster")), o -= Lt.now() - t.stats.trequest, o = Math.max(a / 2, Math.round(o)), M.b.log("live playlist, reload in " + Math.round(o) + " ms"), this.timer = setTimeout(function() {
                                return e.loadLevel()
                            }, o)
                        } else this.clearTimer()
                    }
                }, a.prototype.onAudioTrackSwitched = function(t) {
                    var e = this.hls.audioTracks[t.id].groupId,
                        r = this.hls.levels[this.currentLevelIndex];
                    if (r && r.audioGroupIds) {
                        var i = r.audioGroupIds.findIndex(function(t) {
                            return t === e
                        });
                        i !== r.urlId && (r.urlId = i, this.startLoad())
                    }
                }, a.prototype.loadLevel = function() {
                    if (M.b.debug("call to loadLevel"), null !== this.currentLevelIndex && this.canload) {
                        var t = this._levels[this.currentLevelIndex];
                        if ("object" === (void 0 === t ? "undefined" : At(t)) && 0 < t.url.length) {
                            var e = this.currentLevelIndex,
                                r = t.urlId,
                                i = t.url[r];
                            M.b.log("Attempt loading level index " + e + " with URL-id " + r), this.hls.trigger(F.a.LEVEL_LOADING, {
                                url: i,
                                level: e,
                                id: r
                            })
                        }
                    }
                }, wt(a, [{
                    key: "levels",
                    get: function() {
                        return this._levels
                    }
                }, {
                    key: "level",
                    get: function() {
                        return this.currentLevelIndex
                    },
                    set: function(t) {
                        var e = this._levels;
                        e && (t = Math.min(t, e.length - 1), this.currentLevelIndex === t && e[t].details || this.setLevelInternal(t))
                    }
                }, {
                    key: "manualLevel",
                    get: function() {
                        return this.manualLevelIndex
                    },
                    set: function(t) {
                        this.manualLevelIndex = t, this._startLevel === undefined && (this._startLevel = t), -1 !== t && (this.level = t)
                    }
                }, {
                    key: "firstLevel",
                    get: function() {
                        return this._firstLevel
                    },
                    set: function(t) {
                        this._firstLevel = t
                    }
                }, {
                    key: "startLevel",
                    get: function() {
                        if (this._startLevel !== undefined) return this._startLevel;
                        var t = this.hls.config.startLevel;
                        return t !== undefined ? t : this._firstLevel
                    },
                    set: function(t) {
                        this._startLevel = t
                    }
                }, {
                    key: "nextLoadLevel",
                    get: function() {
                        return -1 !== this.manualLevelIndex ? this.manualLevelIndex : this.hls.nextAutoLevel
                    },
                    set: function(t) {
                        this.level = t, -1 === this.manualLevelIndex && (this.hls.nextAutoLevel = t)
                    }
                }]), a
            }(l),
            Dt = r(6);

        function Ot(t, e) {
            var r = null;
            try {
                r = new window.Event("addtrack")
            } catch (i) {
                (r = document.createEvent("Event")).initEvent("addtrack", !1, !1)
            }
            r.track = t, e.dispatchEvent(r)
        }

        function Ct(t) {
            if (t && t.cues)
                for (; 0 < t.cues.length;) t.removeCue(t.cues[0])
        }
        var It = function(n) {
            function a(t) {
                ! function r(t, e) {
                    if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function")
                }(this, a);
                var e = function i(t, e) {
                    if (!t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                    return !e || "object" != typeof e && "function" != typeof e ? t : e
                }(this, n.call(this, t, F.a.MEDIA_ATTACHED, F.a.MEDIA_DETACHING, F.a.FRAG_PARSING_METADATA));
                return e.id3Track = undefined, e.media = undefined, e
            }
            return function r(t, e) {
                if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function, not " + typeof e);
                t.prototype = Object.create(e && e.prototype, {
                    constructor: {
                        value: t,
                        enumerable: !1,
                        writable: !0,
                        configurable: !0
                    }
                }), e && (Object.setPrototypeOf ? Object.setPrototypeOf(t, e) : t.__proto__ = e)
            }(a, n), a.prototype.destroy = function() {
                l.prototype.destroy.call(this)
            }, a.prototype.onMediaAttached = function(t) {
                this.media = t.media, this.media
            }, a.prototype.onMediaDetaching = function() {
                Ct(this.id3Track), this.id3Track = undefined, this.media = undefined
            }, a.prototype.getID3Track = function(t) {
                for (var e = 0; e < t.length; e++) {
                    var r = t[e];
                    if ("metadata" === r.kind && "id3" === r.label) return Ot(r, this.media), r
                }
                return this.media.addTextTrack("metadata", "id3")
            }, a.prototype.onFragParsingMetadata = function(t) {
                var e = t.frag,
                    r = t.samples;
                this.id3Track || (this.id3Track = this.getID3Track(this.media.textTracks), this.id3Track.mode = "hidden");
                for (var i = window.WebKitDataCue || window.VTTCue || window.TextTrackCue, n = 0; n < r.length; n++) {
                    var a = Dt.a.getID3Frames(r[n].data);
                    if (a) {
                        var o = r[n].pts,
                            s = n < r.length - 1 ? r[n + 1].pts : e.endPTS;
                        o === s && (s += 1e-4);
                        for (var l = 0; l < a.length; l++) {
                            var u = a[l];
                            if (!Dt.a.isTimeStampFrame(u)) {
                                var d = new i(o, s, "");
                                d.value = u, this.id3Track.addCue(d)
                            }
                        }
                    }
                }
            }, a
        }(l);
        var Pt = function() {
            function e(t) {
                ! function r(t, e) {
                    if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function")
                }(this, e), this.alpha_ = t ? Math.exp(Math.log(.5) / t) : 0, this.estimate_ = 0, this.totalWeight_ = 0
            }
            return e.prototype.sample = function(t, e) {
                var r = Math.pow(this.alpha_, t);
                this.estimate_ = e * (1 - r) + r * this.estimate_, this.totalWeight_ += t
            }, e.prototype.getTotalWeight = function() {
                return this.totalWeight_
            }, e.prototype.getEstimate = function() {
                if (this.alpha_) {
                    var t = 1 - Math.pow(this.alpha_, this.totalWeight_);
                    return this.estimate_ / t
                }
                return this.estimate_
            }, e
        }();
        var xt = function() {
                function a(t, e, r, i) {
                    ! function n(t, e) {
                        if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function")
                    }(this, a), this.hls = t, this.defaultEstimate_ = i, this.minWeight_ = .001, this.minDelayMs_ = 50, this.slow_ = new Pt(e), this.fast_ = new Pt(r)
                }
                return a.prototype.sample = function(t, e) {
                    var r = 8e3 * e / (t = Math.max(t, this.minDelayMs_)),
                        i = t / 1e3;
                    this.fast_.sample(i, r), this.slow_.sample(i, r)
                }, a.prototype.canEstimate = function() {
                    var t = this.fast_;
                    return t && t.getTotalWeight() >= this.minWeight_
                }, a.prototype.getEstimate = function() {
                    return this.canEstimate() ? Math.min(this.fast_.getEstimate(), this.slow_.getEstimate()) : this.defaultEstimate_
                }, a.prototype.destroy = function() {}, a
            }(),
            Ft = function() {
                function i(t, e) {
                    for (var r = 0; r < e.length; r++) {
                        var i = e[r];
                        i.enumerable = i.enumerable || !1, i.configurable = !0, "value" in i && (i.writable = !0), Object.defineProperty(t, i.key, i)
                    }
                }
                return function(t, e, r) {
                    return e && i(t.prototype, e), r && i(t, r), t
                }
            }();
        var Mt = window.performance,
            Ut = function(n) {
                function a(t) {
                    ! function r(t, e) {
                        if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function")
                    }(this, a);
                    var e = function i(t, e) {
                        if (!t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                        return !e || "object" != typeof e && "function" != typeof e ? t : e
                    }(this, n.call(this, t, F.a.FRAG_LOADING, F.a.FRAG_LOADED, F.a.FRAG_BUFFERED, F.a.ERROR));
                    return e.lastLoadedFragLevel = 0, e._nextAutoLevel = -1, e.hls = t, e.timer = null, e._bwEstimator = null, e.onCheck = e._abandonRulesCheck.bind(e), e
                }
                return function r(t, e) {
                    if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function, not " + typeof e);
                    t.prototype = Object.create(e && e.prototype, {
                        constructor: {
                            value: t,
                            enumerable: !1,
                            writable: !0,
                            configurable: !0
                        }
                    }), e && (Object.setPrototypeOf ? Object.setPrototypeOf(t, e) : t.__proto__ = e)
                }(a, n), a.prototype.destroy = function() {
                    this.clearTimer(), l.prototype.destroy.call(this)
                }, a.prototype.onFragLoading = function(t) {
                    var e = t.frag;
                    if ("main" === e.type && (this.timer || (this.fragCurrent = e, this.timer = setInterval(this.onCheck, 100)), !this._bwEstimator)) {
                        var r = this.hls,
                            i = r.config,
                            n = e.level,
                            a = void 0,
                            o = void 0;
                        o = r.levels[n].details.live ? (a = i.abrEwmaFastLive, i.abrEwmaSlowLive) : (a = i.abrEwmaFastVoD, i.abrEwmaSlowVoD), this._bwEstimator = new xt(r, o, a, i.abrEwmaDefaultEstimate)
                    }
                }, a.prototype._abandonRulesCheck = function() {
                    var t = this.hls,
                        e = t.media,
                        r = this.fragCurrent;
                    if (r) {
                        var i = r.loader,
                            n = t.minAutoLevel;
                        if (!i || i.stats && i.stats.aborted) return M.b.warn("frag loader destroy or aborted, disarm abandonRules"), this.clearTimer(), void(this._nextAutoLevel = -1);
                        var a = i.stats;
                        if (e && a && (!e.paused && 0 !== e.playbackRate || !e.readyState) && r.autoLevel && r.level) {
                            var o = Mt.now() - a.trequest,
                                s = Math.abs(e.playbackRate);
                            if (o > 500 * r.duration / s) {
                                var l = t.levels,
                                    u = Math.max(1, a.bw ? a.bw / 8 : 1e3 * a.loaded / o),
                                    d = l[r.level],
                                    c = d.realBitrate ? Math.max(d.realBitrate, d.bitrate) : d.bitrate,
                                    h = a.total ? a.total : Math.max(a.loaded, Math.round(r.duration * c / 8)),
                                    f = e.currentTime,
                                    p = (h - a.loaded) / u,
                                    g = (Y.bufferInfo(e, f, t.config.maxBufferHole).end - f) / s;
                                if (g < 2 * r.duration / s && g < p) {
                                    var v = void 0,
                                        y = void 0;
                                    for (y = r.level - 1; n < y; y--) {
                                        var m = l[y].realBitrate ? Math.max(l[y].realBitrate, l[y].bitrate) : l[y].bitrate;
                                        if ((v = r.duration * m / (6.4 * u)) < g) break
                                    }
                                    v < p && (M.b.warn("loading too slow, abort fragment loading and switch to level " + y + ":fragLoadedDelay[" + y + "]<fragLoadedDelay[" + (r.level - 1) + "];bufferStarvationDelay:" + v.toFixed(1) + "<" + p.toFixed(1) + ":" + g.toFixed(1)), t.nextLoadLevel = y, this._bwEstimator.sample(o, a.loaded), i.abort(), this.clearTimer(), t.trigger(F.a.FRAG_LOAD_EMERGENCY_ABORTED, {
                                        frag: r,
                                        stats: a
                                    }))
                                }
                            }
                        }
                    }
                }, a.prototype.onFragLoaded = function(t) {
                    var e = t.frag;
                    if ("main" === e.type && Object(x.a)(e.sn)) {
                        if (this.clearTimer(), this.lastLoadedFragLevel = e.level, this._nextAutoLevel = -1, this.hls.config.abrMaxWithRealBitrate) {
                            var r = this.hls.levels[e.level],
                                i = (r.loaded ? r.loaded.bytes : 0) + t.stats.loaded,
                                n = (r.loaded ? r.loaded.duration : 0) + t.frag.duration;
                            r.loaded = {
                                bytes: i,
                                duration: n
                            }, r.realBitrate = Math.round(8 * i / n)
                        }
                        if (t.frag.bitrateTest) {
                            var a = t.stats;
                            a.tparsed = a.tbuffered = a.tload, this.onFragBuffered(t)
                        }
                    }
                }, a.prototype.onFragBuffered = function(t) {
                    var e = t.stats,
                        r = t.frag;
                    if (!0 !== e.aborted && "main" === r.type && Object(x.a)(r.sn) && (!r.bitrateTest || e.tload === e.tbuffered)) {
                        var i = e.tparsed - e.trequest;
                        M.b.log("latency/loading/parsing/append/kbps:" + Math.round(e.tfirst - e.trequest) + "/" + Math.round(e.tload - e.tfirst) + "/" + Math.round(e.tparsed - e.tload) + "/" + Math.round(e.tbuffered - e.tparsed) + "/" + Math.round(8 * e.loaded / (e.tbuffered - e.trequest))), this._bwEstimator.sample(i, e.loaded), e.bwEstimate = this._bwEstimator.getEstimate(), r.bitrateTest ? this.bitrateTestDelay = i / 1e3 : this.bitrateTestDelay = 0
                    }
                }, a.prototype.onError = function(t) {
                    switch (t.details) {
                        case h.a.FRAG_LOAD_ERROR:
                        case h.a.FRAG_LOAD_TIMEOUT:
                            this.clearTimer()
                    }
                }, a.prototype.clearTimer = function() {
                    clearInterval(this.timer), this.timer = null
                }, a.prototype._findBestLevel = function(t, e, r, i, n, a, o, s, l) {
                    for (var u = n; i <= u; u--) {
                        var d = l[u];
                        if (d) {
                            var c = d.details,
                                h = c ? c.totalduration / c.fragments.length : e,
                                f = !!c && c.live,
                                p = void 0;
                            p = u <= t ? o * r : s * r;
                            var g = l[u].realBitrate ? Math.max(l[u].realBitrate, l[u].bitrate) : l[u].bitrate,
                                v = g * h / p;
                            if (M.b.trace("level/adjustedbw/bitrate/avgDuration/maxFetchDuration/fetchDuration: " + u + "/" + Math.round(p) + "/" + g + "/" + h + "/" + a + "/" + v), g < p && (!v || f && !this.bitrateTestDelay || v < a)) return u
                        }
                    }
                    return -1
                }, Ft(a, [{
                    key: "nextAutoLevel",
                    get: function() {
                        var t = this._nextAutoLevel,
                            e = this._bwEstimator;
                        if (!(-1 === t || e && e.canEstimate())) return t;
                        var r = this._nextABRAutoLevel;
                        return -1 !== t && (r = Math.min(t, r)), r
                    },
                    set: function(t) {
                        this._nextAutoLevel = t
                    }
                }, {
                    key: "_nextABRAutoLevel",
                    get: function() {
                        var t = this.hls,
                            e = t.maxAutoLevel,
                            r = t.levels,
                            i = t.config,
                            n = t.minAutoLevel,
                            a = t.media,
                            o = this.lastLoadedFragLevel,
                            s = this.fragCurrent ? this.fragCurrent.duration : 0,
                            l = a ? a.currentTime : 0,
                            u = a && 0 !== a.playbackRate ? Math.abs(a.playbackRate) : 1,
                            d = this._bwEstimator ? this._bwEstimator.getEstimate() : i.abrEwmaDefaultEstimate,
                            c = (Y.bufferInfo(a, l, i.maxBufferHole).end - l) / u,
                            h = this._findBestLevel(o, s, d, n, e, c, i.abrBandWidthFactor, i.abrBandWidthUpFactor, r);
                        if (0 <= h) return h;
                        M.b.trace("rebuffering expected to happen, lets try to find a quality level minimizing the rebuffering");
                        var f = s ? Math.min(s, i.maxStarvationDelay) : i.maxStarvationDelay,
                            p = i.abrBandWidthFactor,
                            g = i.abrBandWidthUpFactor;
                        if (0 === c) {
                            var v = this.bitrateTestDelay;
                            if (v) f = (s ? Math.min(s, i.maxLoadingDelay) : i.maxLoadingDelay) - v, M.b.trace("bitrate test took " + Math.round(1e3 * v) + "ms, set first fragment max fetchDuration to " + Math.round(1e3 * f) + " ms"), p = g = 1
                        }
                        return h = this._findBestLevel(o, s, d, n, e, c + f, p, g, r), Math.max(h, 0)
                    }
                }]), a
            }(l);
        var Nt = $(),
            Bt = function(n) {
                function a(t) {
                    ! function r(t, e) {
                        if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function")
                    }(this, a);
                    var e = function i(t, e) {
                        if (!t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                        return !e || "object" != typeof e && "function" != typeof e ? t : e
                    }(this, n.call(this, t, F.a.MEDIA_ATTACHING, F.a.MEDIA_DETACHING, F.a.MANIFEST_PARSED, F.a.BUFFER_RESET, F.a.BUFFER_APPENDING, F.a.BUFFER_CODECS, F.a.BUFFER_EOS, F.a.BUFFER_FLUSHING, F.a.LEVEL_PTS_UPDATED, F.a.LEVEL_UPDATED));
                    return e._msDuration = null, e._levelDuration = null, e._live = null, e._objectUrl = null, e.onsbue = e.onSBUpdateEnd.bind(e), e.onsbe = e.onSBUpdateError.bind(e), e.pendingTracks = {}, e.tracks = {}, e
                }
                return function r(t, e) {
                    if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function, not " + typeof e);
                    t.prototype = Object.create(e && e.prototype, {
                        constructor: {
                            value: t,
                            enumerable: !1,
                            writable: !0,
                            configurable: !0
                        }
                    }), e && (Object.setPrototypeOf ? Object.setPrototypeOf(t, e) : t.__proto__ = e)
                }(a, n), a.prototype.destroy = function() {
                    l.prototype.destroy.call(this)
                }, a.prototype.onLevelPtsUpdated = function(t) {
                    var e = t.type,
                        r = this.tracks.audio;
                    if ("audio" === e && r && "audio/mpeg" === r.container) {
                        var i = this.sourceBuffer.audio;
                        if (.1 < Math.abs(i.timestampOffset - t.start)) {
                            var n = i.updating;
                            try {
                                i.abort()
                            } catch (a) {
                                n = !0, M.b.warn("can not abort audio buffer: " + a)
                            }
                            n ? this.audioTimestampOffset = t.start : (M.b.warn("change mpeg audio timestamp offset from " + i.timestampOffset + " to " + t.start), i.timestampOffset = t.start)
                        }
                    }
                }, a.prototype.onManifestParsed = function(t) {
                    var e = t.audio,
                        r = t.video || t.levels.length && t.altAudio,
                        i = 0;
                    t.altAudio && (e || r) && (i = (e ? 1 : 0) + (r ? 1 : 0), M.b.log(i + " sourceBuffer(s) expected")), this.sourceBufferNb = i
                }, a.prototype.onMediaAttaching = function(t) {
                    var e = this.media = t.media;
                    if (e) {
                        var r = this.mediaSource = new Nt;
                        this.onmso = this.onMediaSourceOpen.bind(this), this.onmse = this.onMediaSourceEnded.bind(this), this.onmsc = this.onMediaSourceClose.bind(this), r.addEventListener("sourceopen", this.onmso), r.addEventListener("sourceended", this.onmse), r.addEventListener("sourceclose", this.onmsc), e.src = window.URL.createObjectURL(r), this._objectUrl = e.src
                    }
                }, a.prototype.onMediaDetaching = function() {
                    M.b.log("media source detaching");
                    var t = this.mediaSource;
                    if (t) {
                        if ("open" === t.readyState) try {
                            t.endOfStream()
                        } catch (e) {
                            M.b.warn("onMediaDetaching:" + e.message + " while calling endOfStream")
                        }
                        t.removeEventListener("sourceopen", this.onmso), t.removeEventListener("sourceended", this.onmse), t.removeEventListener("sourceclose", this.onmsc), this.media && (window.URL.revokeObjectURL(this._objectUrl), this.media.src === this._objectUrl ? (this.media.removeAttribute("src"), this.media.load()) : M.b.warn("media.src was changed by a third party - skip cleanup")), this.mediaSource = null, this.media = null, this._objectUrl = null, this.pendingTracks = {}, this.tracks = {}, this.sourceBuffer = {}, this.flushRange = [], this.segments = [], this.appended = 0
                    }
                    this.onmso = this.onmse = this.onmsc = null, this.hls.trigger(F.a.MEDIA_DETACHED)
                }, a.prototype.onMediaSourceOpen = function() {
                    M.b.log("media source opened"), this.hls.trigger(F.a.MEDIA_ATTACHED, {
                        media: this.media
                    });
                    var t = this.mediaSource;
                    t && t.removeEventListener("sourceopen", this.onmso), this.checkPendingTracks()
                }, a.prototype.checkPendingTracks = function() {
                    var t = this.pendingTracks,
                        e = Object.keys(t).length;
                    e && (this.sourceBufferNb <= e || 0 === this.sourceBufferNb) && (this.createSourceBuffers(t), this.pendingTracks = {}, this.doAppending())
                }, a.prototype.onMediaSourceClose = function() {
                    M.b.log("media source closed")
                }, a.prototype.onMediaSourceEnded = function() {
                    M.b.log("media source ended")
                }, a.prototype.onSBUpdateEnd = function() {
                    if (this.audioTimestampOffset) {
                        var t = this.sourceBuffer.audio;
                        M.b.warn("change mpeg audio timestamp offset from " + t.timestampOffset + " to " + this.audioTimestampOffset), t.timestampOffset = this.audioTimestampOffset, delete this.audioTimestampOffset
                    }
                    this._needsFlush && this.doFlush(), this._needsEos && this.checkEos(), this.appending = !1;
                    var r = this.parent,
                        e = this.segments.reduce(function(t, e) {
                            return e.parent === r ? t + 1 : t
                        }, 0),
                        i = {},
                        n = this.sourceBuffer;
                    for (var a in n) i[a] = n[a].buffered;
                    this.hls.trigger(F.a.BUFFER_APPENDED, {
                        parent: r,
                        pending: e,
                        timeRanges: i
                    }), this._needsFlush || this.doAppending(), this.updateMediaElementDuration()
                }, a.prototype.onSBUpdateError = function(t) {
                    M.b.error("sourceBuffer error:", t), this.hls.trigger(F.a.ERROR, {
                        type: h.b.MEDIA_ERROR,
                        details: h.a.BUFFER_APPENDING_ERROR,
                        fatal: !1
                    })
                }, a.prototype.onBufferReset = function() {
                    var t = this.sourceBuffer;
                    for (var e in t) {
                        var r = t[e];
                        try {
                            this.mediaSource.removeSourceBuffer(r), r.removeEventListener("updateend", this.onsbue), r.removeEventListener("error", this.onsbe)
                        } catch (i) {}
                    }
                    this.sourceBuffer = {}, this.flushRange = [], this.segments = [], this.appended = 0
                }, a.prototype.onBufferCodecs = function(t) {
                    if (0 === Object.keys(this.sourceBuffer).length) {
                        for (var e in t) this.pendingTracks[e] = t[e];
                        var r = this.mediaSource;
                        r && "open" === r.readyState && this.checkPendingTracks()
                    }
                }, a.prototype.createSourceBuffers = function(t) {
                    var e = this.sourceBuffer,
                        r = this.mediaSource;
                    for (var i in t)
                        if (!e[i]) {
                            var n = t[i],
                                a = n.levelCodec || n.codec,
                                o = n.container + ";codecs=" + a;
                            M.b.log("creating sourceBuffer(" + o + ")");
                            try {
                                var s = e[i] = r.addSourceBuffer(o);
                                s.addEventListener("updateend", this.onsbue), s.addEventListener("error", this.onsbe), this.tracks[i] = {
                                    codec: a,
                                    container: n.container
                                }, n.buffer = s
                            } catch (l) {
                                M.b.error("error while trying to add sourceBuffer:" + l.message), this.hls.trigger(F.a.ERROR, {
                                    type: h.b.MEDIA_ERROR,
                                    details: h.a.BUFFER_ADD_CODEC_ERROR,
                                    fatal: !1,
                                    err: l,
                                    mimeType: o
                                })
                            }
                        } this.hls.trigger(F.a.BUFFER_CREATED, {
                        tracks: t
                    })
                }, a.prototype.onBufferAppending = function(t) {
                    this._needsFlush || (this.segments ? this.segments.push(t) : this.segments = [t], this.doAppending())
                }, a.prototype.onBufferAppendFail = function(t) {
                    M.b.error("sourceBuffer error:", t.event), this.hls.trigger(F.a.ERROR, {
                        type: h.b.MEDIA_ERROR,
                        details: h.a.BUFFER_APPENDING_ERROR,
                        fatal: !1
                    })
                }, a.prototype.onBufferEos = function(t) {
                    var e = this.sourceBuffer,
                        r = t.type;
                    for (var i in e) r && i !== r || e[i].ended || (e[i].ended = !0, M.b.log(i + " sourceBuffer now EOS"));
                    this.checkEos()
                }, a.prototype.checkEos = function() {
                    var t = this.sourceBuffer,
                        e = this.mediaSource;
                    if (e && "open" === e.readyState) {
                        for (var r in t) {
                            var i = t[r];
                            if (!i.ended) return;
                            if (i.updating) return void(this._needsEos = !0)
                        }
                        M.b.log("all media data available, signal endOfStream() to MediaSource and stop loading fragment");
                        try {
                            e.endOfStream()
                        } catch (n) {
                            M.b.warn("exception while calling mediaSource.endOfStream()")
                        }
                        this._needsEos = !1
                    } else this._needsEos = !1
                }, a.prototype.onBufferFlushing = function(t) {
                    this.flushRange.push({
                        start: t.startOffset,
                        end: t.endOffset,
                        type: t.type
                    }), this.flushBufferCounter = 0, this.doFlush()
                }, a.prototype.onLevelUpdated = function(t) {
                    var e = t.details;
                    0 < e.fragments.length && (this._levelDuration = e.totalduration + e.fragments[0].start, this._live = e.live, this.updateMediaElementDuration())
                }, a.prototype.updateMediaElementDuration = function() {
                    var t, e = this.hls.config;
                    if (null !== this._levelDuration && this.media && this.mediaSource && this.sourceBuffer && 0 !== this.media.readyState && "open" === this.mediaSource.readyState) {
                        for (var r in this.sourceBuffer)
                            if (!0 === this.sourceBuffer[r].updating) return;
                        t = this.media.duration, null === this._msDuration && (this._msDuration = this.mediaSource.duration), !0 === this._live && !0 === e.liveDurationInfinity ? (M.b.log("Media Source duration is set to Infinity"), this._msDuration = this.mediaSource.duration = Infinity) : (this._levelDuration > this._msDuration && this._levelDuration > t || !Object(x.a)(t)) && (M.b.log("Updating Media Source duration to " + this._levelDuration.toFixed(3)), this._msDuration = this.mediaSource.duration = this._levelDuration)
                    }
                }, a.prototype.doFlush = function() {
                    for (; this.flushRange.length;) {
                        var t = this.flushRange[0];
                        if (!this.flushBuffer(t.start, t.end, t.type)) return void(this._needsFlush = !0);
                        this.flushRange.shift(), this.flushBufferCounter = 0
                    }
                    if (0 === this.flushRange.length) {
                        this._needsFlush = !1;
                        var e = 0,
                            r = this.sourceBuffer;
                        try {
                            for (var i in r) e += r[i].buffered.length
                        } catch (n) {
                            M.b.error("error while accessing sourceBuffer.buffered")
                        }
                        this.appended = e, this.hls.trigger(F.a.BUFFER_FLUSHED)
                    }
                }, a.prototype.doAppending = function() {
                    var t = this.hls,
                        e = this.sourceBuffer,
                        r = this.segments;
                    if (Object.keys(e).length) {
                        if (this.media.error) return this.segments = [], void M.b.error("trying to append although a media error occured, flush segment and abort");
                        if (this.appending) return;
                        if (r && r.length) {
                            var i = r.shift();
                            try {
                                var n = e[i.type];
                                n ? n.updating ? r.unshift(i) : (n.ended = !1, this.parent = i.parent, n.appendBuffer(i.data), this.appendError = 0, this.appended++, this.appending = !0) : this.onSBUpdateEnd()
                            } catch (o) {
                                M.b.error("error while trying to append buffer:" + o.message), r.unshift(i);
                                var a = {
                                    type: h.b.MEDIA_ERROR,
                                    parent: i.parent
                                };
                                22 !== o.code ? (this.appendError ? this.appendError++ : this.appendError = 1, a.details = h.a.BUFFER_APPEND_ERROR, this.appendError > t.config.appendErrorMaxRetry ? (M.b.log("fail " + t.config.appendErrorMaxRetry + " times to append segment in sourceBuffer"), r = [], a.fatal = !0) : a.fatal = !1) : (this.segments = [], a.details = h.a.BUFFER_FULL_ERROR, a.fatal = !1), t.trigger(F.a.ERROR, a)
                            }
                        }
                    }
                }, a.prototype.flushBuffer = function(t, e, r) {
                    var i = void 0,
                        n = void 0,
                        a = void 0,
                        o = void 0,
                        s = void 0,
                        l = void 0,
                        u = this.sourceBuffer;
                    if (Object.keys(u).length) {
                        if (M.b.log("flushBuffer,pos/start/end: " + this.media.currentTime.toFixed(3) + "/" + t + "/" + e), this.flushBufferCounter < this.appended) {
                            for (var d in u)
                                if (!r || d === r) {
                                    if ((i = u[d]).ended = !1, i.updating) return M.b.warn("cannot flush, sb updating in progress"), !1;
                                    try {
                                        for (n = 0; n < i.buffered.length; n++)
                                            if (a = i.buffered.start(n), o = i.buffered.end(n), l = -1 !== navigator.userAgent.toLowerCase().indexOf("firefox") && e === Number.POSITIVE_INFINITY ? (s = t, e) : (s = Math.max(a, t), Math.min(o, e)), .5 < Math.min(l, o) - s) return this.flushBufferCounter++, M.b.log("flush " + d + " [" + s + "," + l + "], of [" + a + "," + o + "], pos:" + this.media.currentTime), i.remove(s, l), !1
                                    } catch (c) {
                                        M.b.warn("exception while accessing sourcebuffer, it might have been removed from MediaSource")
                                    }
                                }
                        } else M.b.warn("abort flushing too many retries");
                        M.b.log("buffer flushed")
                    }
                    return !0
                }, a
            }(l),
            Gt = function() {
                function i(t, e) {
                    for (var r = 0; r < e.length; r++) {
                        var i = e[r];
                        i.enumerable = i.enumerable || !1, i.configurable = !0, "value" in i && (i.writable = !0), Object.defineProperty(t, i.key, i)
                    }
                }
                return function(t, e, r) {
                    return e && i(t.prototype, e), r && i(t, r), t
                }
            }();
        var Kt = function(n) {
            function a(t) {
                ! function r(t, e) {
                    if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function")
                }(this, a);
                var e = function i(t, e) {
                    if (!t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                    return !e || "object" != typeof e && "function" != typeof e ? t : e
                }(this, n.call(this, t, F.a.FPS_DROP_LEVEL_CAPPING, F.a.MEDIA_ATTACHING, F.a.MANIFEST_PARSED, F.a.BUFFER_CODECS, F.a.MEDIA_DETACHING));
                return e.autoLevelCapping = Number.POSITIVE_INFINITY, e.firstLevel = null, e.levels = [], e.media = null, e.restrictedLevels = [], e.timer = null, e
            }
            return function r(t, e) {
                if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function, not " + typeof e);
                t.prototype = Object.create(e && e.prototype, {
                    constructor: {
                        value: t,
                        enumerable: !1,
                        writable: !0,
                        configurable: !0
                    }
                }), e && (Object.setPrototypeOf ? Object.setPrototypeOf(t, e) : t.__proto__ = e)
            }(a, n), a.prototype.destroy = function() {
                this.hls.config.capLevelToPlayerSize && (this.media = null, this._stopCapping())
            }, a.prototype.onFpsDropLevelCapping = function(t) {
                a.isLevelAllowed(t.droppedLevel, this.restrictedLevels) && this.restrictedLevels.push(t.droppedLevel)
            }, a.prototype.onMediaAttaching = function(t) {
                this.media = t.media instanceof window.HTMLVideoElement ? t.media : null
            }, a.prototype.onManifestParsed = function(t) {
                var e = this.hls;
                this.restrictedLevels = [], this.levels = t.levels, this.firstLevel = t.firstLevel, e.config.capLevelToPlayerSize && (t.video || t.levels.length && t.altAudio) && this._startCapping()
            }, a.prototype.onBufferCodecs = function(t) {
                this.hls.config.capLevelToPlayerSize && t.video && this._startCapping()
            }, a.prototype.onLevelsUpdated = function(t) {
                this.levels = t.levels
            }, a.prototype.onMediaDetaching = function() {
                this._stopCapping()
            }, a.prototype.detectPlayerSize = function() {
                if (this.media) {
                    var t = this.levels ? this.levels.length : 0;
                    if (t) {
                        var e = this.hls;
                        e.autoLevelCapping = this.getMaxLevel(t - 1), e.autoLevelCapping > this.autoLevelCapping && e.streamController.nextLevelSwitch(), this.autoLevelCapping = e.autoLevelCapping
                    }
                }
            }, a.prototype.getMaxLevel = function(r) {
                var i = this;
                if (!this.levels) return -1;
                var t = this.levels.filter(function(t, e) {
                    return a.isLevelAllowed(e, i.restrictedLevels) && e <= r
                });
                return a.getMaxLevelByMediaSize(t, this.mediaWidth, this.mediaHeight)
            }, a.prototype._startCapping = function() {
                this.timer || (this.autoLevelCapping = Number.POSITIVE_INFINITY, this.hls.firstLevel = this.getMaxLevel(this.firstLevel), clearInterval(this.timer), this.timer = setInterval(this.detectPlayerSize.bind(this), 1e3), this.detectPlayerSize())
            }, a.prototype._stopCapping = function() {
                this.restrictedLevels = [], this.firstLevel = null, this.autoLevelCapping = Number.POSITIVE_INFINITY, this.timer && (this.timer = clearInterval(this.timer), this.timer = null)
            }, a.isLevelAllowed = function(t) {
                return -1 === (1 < arguments.length && arguments[1] !== undefined ? arguments[1] : []).indexOf(t)
            }, a.getMaxLevelByMediaSize = function(t, e, r) {
                if (!t || t && !t.length) return -1;
                for (var i = function i(t, e) {
                        return !e || (t.width !== e.width || t.height !== e.height)
                    }, n = t.length - 1, a = 0; a < t.length; a += 1) {
                    var o = t[a];
                    if ((o.width >= e || o.height >= r) && i(o, t[a + 1])) {
                        n = a;
                        break
                    }
                }
                return n
            }, Gt(a, [{
                key: "mediaWidth",
                get: function() {
                    var t = void 0,
                        e = this.media;
                    return e && (t = e.width || e.clientWidth || e.offsetWidth, t *= a.contentScaleFactor), t
                }
            }, {
                key: "mediaHeight",
                get: function() {
                    var t = void 0,
                        e = this.media;
                    return e && (t = e.height || e.clientHeight || e.offsetHeight, t *= a.contentScaleFactor), t
                }
            }], [{
                key: "contentScaleFactor",
                get: function() {
                    var t = 1;
                    try {
                        t = window.devicePixelRatio
                    } catch (e) {}
                    return t
                }
            }]), a
        }(l);
        var jt = window.performance,
            Ht = function(e) {
                function n(t) {
                    return function r(t, e) {
                            if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function")
                        }(this, n),
                        function i(t, e) {
                            if (!t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                            return !e || "object" != typeof e && "function" != typeof e ? t : e
                        }(this, e.call(this, t, F.a.MEDIA_ATTACHING))
                }
                return function r(t, e) {
                    if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function, not " + typeof e);
                    t.prototype = Object.create(e && e.prototype, {
                        constructor: {
                            value: t,
                            enumerable: !1,
                            writable: !0,
                            configurable: !0
                        }
                    }), e && (Object.setPrototypeOf ? Object.setPrototypeOf(t, e) : t.__proto__ = e)
                }(n, e), n.prototype.destroy = function() {
                    this.timer && clearInterval(this.timer), this.isVideoPlaybackQualityAvailable = !1
                }, n.prototype.onMediaAttaching = function(t) {
                    var e = this.hls.config;
                    e.capLevelOnFPSDrop && ("function" == typeof(this.video = t.media instanceof window.HTMLVideoElement ? t.media : null).getVideoPlaybackQuality && (this.isVideoPlaybackQualityAvailable = !0), clearInterval(this.timer), this.timer = setInterval(this.checkFPSInterval.bind(this), e.fpsDroppedMonitoringPeriod))
                }, n.prototype.checkFPS = function(t, e, r) {
                    var i = jt.now();
                    if (e) {
                        if (this.lastTime) {
                            var n = i - this.lastTime,
                                a = r - this.lastDroppedFrames,
                                o = e - this.lastDecodedFrames,
                                s = 1e3 * a / n,
                                l = this.hls;
                            if (l.trigger(F.a.FPS_DROP, {
                                    currentDropped: a,
                                    currentDecoded: o,
                                    totalDroppedFrames: r
                                }), 0 < s && a > l.config.fpsDroppedMonitoringThreshold * o) {
                                var u = l.currentLevel;
                                M.b.warn("drop FPS ratio greater than max allowed value for currentLevel: " + u), 0 < u && (-1 === l.autoLevelCapping || l.autoLevelCapping >= u) && (u -= 1, l.trigger(F.a.FPS_DROP_LEVEL_CAPPING, {
                                    level: u,
                                    droppedLevel: l.currentLevel
                                }), l.autoLevelCapping = u, l.streamController.nextLevelSwitch())
                            }
                        }
                        this.lastTime = i, this.lastDroppedFrames = r, this.lastDecodedFrames = e
                    }
                }, n.prototype.checkFPSInterval = function() {
                    var t = this.video;
                    if (t)
                        if (this.isVideoPlaybackQualityAvailable) {
                            var e = t.getVideoPlaybackQuality();
                            this.checkFPS(t, e.totalVideoFrames, e.droppedVideoFrames)
                        } else this.checkFPS(t, t.webkitDecodedFrameCount, t.webkitDroppedFrameCount)
                }, n
            }(l);
        var Vt = window,
            Yt = Vt.performance,
            Wt = Vt.XMLHttpRequest,
            qt = function() {
                function e(t) {
                    ! function r(t, e) {
                        if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function")
                    }(this, e), t && t.xhrSetup && (this.xhrSetup = t.xhrSetup)
                }
                return e.prototype.destroy = function() {
                    this.abort(), this.loader = null
                }, e.prototype.abort = function() {
                    var t = this.loader;
                    t && 4 !== t.readyState && (this.stats.aborted = !0, t.abort()), window.clearTimeout(this.requestTimeout), this.requestTimeout = null, window.clearTimeout(this.retryTimeout), this.retryTimeout = null
                }, e.prototype.load = function(t, e, r) {
                    this.context = t, this.config = e, this.callbacks = r, this.stats = {
                        trequest: Yt.now(),
                        retry: 0
                    }, this.retryDelay = e.retryDelay, this.loadInternal()
                }, e.prototype.loadInternal = function() {
                    var t = void 0,
                        e = this.context;
                    t = this.loader = new Wt;
                    var r = this.stats;
                    r.tfirst = 0, r.loaded = 0;
                    var i = this.xhrSetup;
                    try {
                        if (i) try {
                            i(t, e.url)
                        } catch (n) {
                            t.open("GET", e.url, !0), i(t, e.url)
                        }
                        t.readyState || t.open("GET", e.url, !0)
                    } catch (n) {
                        return void this.callbacks.onError({
                            code: t.status,
                            text: n.message
                        }, e, t)
                    }
                    e.rangeEnd && t.setRequestHeader("Range", "bytes=" + e.rangeStart + "-" + (e.rangeEnd - 1)), t.onreadystatechange = this.readystatechange.bind(this), t.onprogress = this.loadprogress.bind(this), t.responseType = e.responseType, this.requestTimeout = window.setTimeout(this.loadtimeout.bind(this), this.config.timeout), t.send()
                }, e.prototype.readystatechange = function(t) {
                    var e = t.currentTarget,
                        r = e.readyState,
                        i = this.stats,
                        n = this.context,
                        a = this.config;
                    if (!i.aborted && 2 <= r)
                        if (window.clearTimeout(this.requestTimeout), 0 === i.tfirst && (i.tfirst = Math.max(Yt.now(), i.trequest)), 4 === r) {
                            var o = e.status;
                            if (200 <= o && o < 300) {
                                i.tload = Math.max(i.tfirst, Yt.now());
                                var s = void 0,
                                    l = void 0;
                                l = "arraybuffer" === n.responseType ? (s = e.response).byteLength : (s = e.responseText).length, i.loaded = i.total = l;
                                var u = {
                                    url: e.responseURL,
                                    data: s
                                };
                                this.callbacks.onSuccess(u, i, n, e)
                            } else i.retry >= a.maxRetry || 400 <= o && o < 499 ? (M.b.error(o + " while loading " + n.url), this.callbacks.onError({
                                code: o,
                                text: e.statusText
                            }, n, e)) : (M.b.warn(o + " while loading " + n.url + ", retrying in " + this.retryDelay + "..."), this.destroy(), this.retryTimeout = window.setTimeout(this.loadInternal.bind(this), this.retryDelay), this.retryDelay = Math.min(2 * this.retryDelay, a.maxRetryDelay), i.retry++)
                        } else this.requestTimeout = window.setTimeout(this.loadtimeout.bind(this), a.timeout)
                }, e.prototype.loadtimeout = function() {
                    M.b.warn("timeout while loading " + this.context.url), this.callbacks.onTimeout(this.stats, this.context, null)
                }, e.prototype.loadprogress = function(t) {
                    var e = t.currentTarget,
                        r = this.stats;
                    r.loaded = t.loaded, t.lengthComputable && (r.total = t.total);
                    var i = this.callbacks.onProgress;
                    i && i(r, this.context, null, e)
                }, e
            }(),
            Xt = function() {
                function i(t, e) {
                    for (var r = 0; r < e.length; r++) {
                        var i = e[r];
                        i.enumerable = i.enumerable || !1, i.configurable = !0, "value" in i && (i.writable = !0), Object.defineProperty(t, i.key, i)
                    }
                }
                return function(t, e, r) {
                    return e && i(t.prototype, e), r && i(t, r), t
                }
            }();
        var zt = function(n) {
                function a(t) {
                    ! function r(t, e) {
                        if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function")
                    }(this, a);
                    var e = function i(t, e) {
                        if (!t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                        return !e || "object" != typeof e && "function" != typeof e ? t : e
                    }(this, n.call(this, t, F.a.MANIFEST_LOADING, F.a.MANIFEST_PARSED, F.a.AUDIO_TRACK_LOADED, F.a.AUDIO_TRACK_SWITCHED, F.a.LEVEL_LOADED, F.a.ERROR));
                    return e._trackId = -1, e._selectDefaultTrack = !0, e.tracks = [], e.trackIdBlacklist = Object.create(null), e.audioGroupId = null, e
                }
                return function r(t, e) {
                    if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function, not " + typeof e);
                    t.prototype = Object.create(e && e.prototype, {
                        constructor: {
                            value: t,
                            enumerable: !1,
                            writable: !0,
                            configurable: !0
                        }
                    }), e && (Object.setPrototypeOf ? Object.setPrototypeOf(t, e) : t.__proto__ = e)
                }(a, n), a.prototype.onManifestLoading = function() {
                    this.tracks = [], this._trackId = -1, this._selectDefaultTrack = !0
                }, a.prototype.onManifestParsed = function(t) {
                    var e = this.tracks = t.audioTracks || [];
                    this.hls.trigger(F.a.AUDIO_TRACKS_UPDATED, {
                        audioTracks: e
                    })
                }, a.prototype.onAudioTrackLoaded = function(t) {
                    if (t.id >= this.tracks.length) M.b.warn("Invalid audio track id:", t.id);
                    else {
                        if (M.b.log("audioTrack " + t.id + " loaded"), this.tracks[t.id].details = t.details, t.details.live && !this.hasInterval()) {
                            var e = 1e3 * t.details.targetduration;
                            this.setInterval(e)
                        }!t.details.live && this.hasInterval() && this.clearInterval()
                    }
                }, a.prototype.onAudioTrackSwitched = function(t) {
                    var e = this.tracks[t.id].groupId;
                    e && this.audioGroupId !== e && (this.audioGroupId = e)
                }, a.prototype.onLevelLoaded = function(t) {
                    var e = this.hls.levels[t.level];
                    if (e.audioGroupIds) {
                        var r = e.audioGroupIds[e.urlId];
                        this.audioGroupId !== r && (this.audioGroupId = r, this._selectInitialAudioTrack())
                    }
                }, a.prototype.onError = function(t) {
                    t.type === h.b.NETWORK_ERROR && (t.fatal && this.clearInterval(), t.details === h.a.AUDIO_TRACK_LOAD_ERROR && (M.b.warn("Network failure on audio-track id:", t.context.id), this._handleLoadError()))
                }, a.prototype._setAudioTrack = function(t) {
                    if (this._trackId === t && this.tracks[this._trackId].details) M.b.debug("Same id as current audio-track passed, and track details available -> no-op");
                    else if (t < 0 || t >= this.tracks.length) M.b.warn("Invalid id passed to audio-track controller");
                    else {
                        var e = this.tracks[t];
                        M.b.log("Now switching to audio-track index " + t), this.clearInterval(), this._trackId = t;
                        var r = e.url,
                            i = e.type,
                            n = e.id;
                        this.hls.trigger(F.a.AUDIO_TRACK_SWITCHING, {
                            id: n,
                            type: i,
                            url: r
                        }), this._loadTrackDetailsIfNeeded(e)
                    }
                }, a.prototype.doTick = function() {
                    this._updateTrack(this._trackId)
                }, a.prototype._selectInitialAudioTrack = function() {
                    var e = this,
                        t = this.tracks;
                    if (t.length) {
                        var r = this.tracks[this._trackId],
                            i = null;
                        if (r && (i = r.name), this._selectDefaultTrack) {
                            var n = t.filter(function(t) {
                                return t["default"]
                            });
                            n.length ? t = n : M.b.warn("No default audio tracks defined")
                        }
                        var a = !1,
                            o = function o() {
                                t.forEach(function(t) {
                                    a || e.audioGroupId && t.groupId !== e.audioGroupId || i && i !== t.name || (e._setAudioTrack(t.id), a = !0)
                                })
                            };
                        o(), a || (i = null, o()), a || (M.b.error("No track found for running audio group-ID: " + this.audioGroupId), this.hls.trigger(F.a.ERROR, {
                            type: h.b.MEDIA_ERROR,
                            details: h.a.AUDIO_TRACK_LOAD_ERROR,
                            fatal: !0
                        }))
                    }
                }, a.prototype._needsTrackLoading = function(t) {
                    var e = t.details;
                    return !e || (!!e.live || void 0)
                }, a.prototype._loadTrackDetailsIfNeeded = function(t) {
                    if (this._needsTrackLoading(t)) {
                        var e = t.url,
                            r = t.id;
                        M.b.log("loading audio-track playlist for id: " + r), this.hls.trigger(F.a.AUDIO_TRACK_LOADING, {
                            url: e,
                            id: r
                        })
                    }
                }, a.prototype._updateTrack = function(t) {
                    if (!(t < 0 || t >= this.tracks.length)) {
                        this.clearInterval(), this._trackId = t, M.b.log("trying to update audio-track " + t);
                        var e = this.tracks[t];
                        this._loadTrackDetailsIfNeeded(e)
                    }
                }, a.prototype._handleLoadError = function() {
                    this.trackIdBlacklist[this._trackId] = !0;
                    var t = this._trackId,
                        e = this.tracks[t],
                        r = e.name,
                        i = e.language,
                        n = e.groupId;
                    M.b.warn("Loading failed on audio track id: " + t + ", group-id: " + n + ', name/language: "' + r + '" / "' + i + '"');
                    for (var a = t, o = 0; o < this.tracks.length; o++) {
                        if (!this.trackIdBlacklist[o])
                            if (this.tracks[o].name === r) {
                                a = o;
                                break
                            }
                    }
                    a !== t ? (M.b.log("Attempting audio-track fallback id:", a, "group-id:", this.tracks[a].groupId), this._setAudioTrack(a)) : M.b.warn('No fallback audio-track found for name/language: "' + r + '" / "' + i + '"')
                }, Xt(a, [{
                    key: "audioTracks",
                    get: function() {
                        return this.tracks
                    }
                }, {
                    key: "audioTrack",
                    get: function() {
                        return this._trackId
                    },
                    set: function(t) {
                        this._setAudioTrack(t), this._selectDefaultTrack = !1
                    }
                }]), a
            }(ut),
            Qt = function() {
                function i(t, e) {
                    for (var r = 0; r < e.length; r++) {
                        var i = e[r];
                        i.enumerable = i.enumerable || !1, i.configurable = !0, "value" in i && (i.writable = !0), Object.defineProperty(t, i.key, i)
                    }
                }
                return function(t, e, r) {
                    return e && i(t.prototype, e), r && i(t, r), t
                }
            }();
        var $t = window.performance,
            Jt = "STOPPED",
            Zt = "STARTING",
            te = "IDLE",
            ee = "PAUSED",
            re = "KEY_LOADING",
            ie = "FRAG_LOADING",
            ne = "FRAG_LOADING_WAITING_RETRY",
            ae = "WAITING_TRACK",
            oe = "PARSING",
            se = "PARSED",
            le = "BUFFER_FLUSHING",
            ue = "ENDED",
            de = "ERROR",
            ce = "WAITING_INIT_PTS",
            he = function(a) {
                function o(t, e) {
                    ! function i(t, e) {
                        if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function")
                    }(this, o);
                    var r = function n(t, e) {
                        if (!t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                        return !e || "object" != typeof e && "function" != typeof e ? t : e
                    }(this, a.call(this, t, F.a.MEDIA_ATTACHED, F.a.MEDIA_DETACHING, F.a.AUDIO_TRACKS_UPDATED, F.a.AUDIO_TRACK_SWITCHING, F.a.AUDIO_TRACK_LOADED, F.a.KEY_LOADED, F.a.FRAG_LOADED, F.a.FRAG_PARSING_INIT_SEGMENT, F.a.FRAG_PARSING_DATA, F.a.FRAG_PARSED, F.a.ERROR, F.a.BUFFER_RESET, F.a.BUFFER_CREATED, F.a.BUFFER_APPENDED, F.a.BUFFER_FLUSHED, F.a.INIT_PTS_FOUND));
                    return r.fragmentTracker = e, r.config = t.config, r.audioCodecSwap = !1, r._state = Jt, r.initPTS = [], r.waitingFragment = null, r.videoTrackCC = null, r
                }
                return function r(t, e) {
                    if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function, not " + typeof e);
                    t.prototype = Object.create(e && e.prototype, {
                        constructor: {
                            value: t,
                            enumerable: !1,
                            writable: !0,
                            configurable: !0
                        }
                    }), e && (Object.setPrototypeOf ? Object.setPrototypeOf(t, e) : t.__proto__ = e)
                }(o, a), o.prototype.onHandlerDestroying = function() {
                    this.stopLoad(), a.prototype.onHandlerDestroying.call(this)
                }, o.prototype.onHandlerDestroyed = function() {
                    this.state = Jt, this.fragmentTracker = null, a.prototype.onHandlerDestroyed.call(this)
                }, o.prototype.onInitPtsFound = function(t) {
                    var e = t.id,
                        r = t.frag.cc,
                        i = t.initPTS;
                    "main" === e && (this.initPTS[r] = i, this.videoTrackCC = r, M.b.log("InitPTS for cc: " + r + " found from video track: " + i), this.state === ce && this.tick())
                }, o.prototype.startLoad = function(t) {
                    if (this.tracks) {
                        var e = this.lastCurrentTime;
                        this.stopLoad(), this.setInterval(100), this.fragLoadError = 0, this.state = 0 < e && -1 === t ? (M.b.log("audio:override startPosition with lastCurrentTime @" + e.toFixed(3)), te) : (this.lastCurrentTime = this.startPosition ? this.startPosition : t, Zt), this.nextLoadPosition = this.startPosition = this.lastCurrentTime, this.tick()
                    } else this.startPosition = t, this.state = Jt
                }, o.prototype.stopLoad = function() {
                    var t = this.fragCurrent;
                    t && (t.loader && t.loader.abort(), this.fragmentTracker.removeFragment(t), this.fragCurrent = null), this.fragPrevious = null, this.demuxer && (this.demuxer.destroy(), this.demuxer = null), this.state = Jt
                }, o.prototype.doTick = function() {
                    var t = void 0,
                        e = void 0,
                        r = void 0,
                        i = this.hls,
                        n = i.config;
                    switch (this.state) {
                        case de:
                        case ee:
                        case le:
                            break;
                        case Zt:
                            this.state = ae, this.loadedmetadata = !1;
                            break;
                        case te:
                            var a = this.tracks;
                            if (!a) break;
                            if (!this.media && (this.startFragRequested || !n.startFragPrefetch)) break;
                            if (this.loadedmetadata) t = this.media.currentTime;
                            else if ((t = this.nextLoadPosition) === undefined) break;
                            var o = this.mediaBuffer ? this.mediaBuffer : this.media,
                                s = this.videoBuffer ? this.videoBuffer : this.media,
                                l = Y.bufferInfo(o, t, n.maxBufferHole),
                                u = Y.bufferInfo(s, t, n.maxBufferHole),
                                d = l.len,
                                c = l.end,
                                h = this.fragPrevious,
                                f = Math.min(n.maxBufferLength, n.maxMaxBufferLength),
                                p = Math.max(f, u.len),
                                g = this.audioSwitch,
                                v = this.trackId;
                            if ((d < p || g) && v < a.length) {
                                if (void 0 === (r = a[v].details)) {
                                    this.state = ae;
                                    break
                                }
                                if (!g && !r.live && h && h.sn === r.endSN && !l.nextStart && (!this.media.seeking || this.media.duration - c < h.duration / 2)) {
                                    this.hls.trigger(F.a.BUFFER_EOS, {
                                        type: "audio"
                                    }), this.state = ue;
                                    break
                                }
                                var y = r.fragments,
                                    m = y.length,
                                    b = y[0].start,
                                    T = y[m - 1].start + y[m - 1].duration,
                                    E = void 0;
                                if (g)
                                    if (r.live && !r.PTSKnown) M.b.log("switching audiotrack, live stream, unknown PTS,load first fragment"), c = 0;
                                    else if (c = t, r.PTSKnown && t < b) {
                                    if (!(l.end > b || l.nextStart)) return;
                                    M.b.log("alt audio track ahead of main track, seek to start of alt audio track"), this.media.currentTime = b + .05
                                }
                                if (r.initSegment && !r.initSegment.data) E = r.initSegment;
                                else if (c <= b) {
                                    if (E = y[0], null !== this.videoTrackCC && E.cc !== this.videoTrackCC && (E = function P(t, e) {
                                            return V.search(t, function(t) {
                                                return t.cc < e ? 1 : t.cc > e ? -1 : 0
                                            })
                                        }(y, this.videoTrackCC)), r.live && E.loadIdx && E.loadIdx === this.fragLoadIdx) {
                                        var S = l.nextStart ? l.nextStart : b;
                                        return M.b.log("no alt audio available @currentTime:" + this.media.currentTime + ", seeking @" + (S + .05)), void(this.media.currentTime = S + .05)
                                    }
                                } else {
                                    var _ = void 0,
                                        R = n.maxFragLookUpTolerance,
                                        A = h ? y[h.sn - y[0].sn + 1] : undefined,
                                        w = function w(t) {
                                            var e = Math.min(R, t.duration);
                                            return t.start + t.duration - e <= c ? 1 : t.start - e > c && t.start ? -1 : 0
                                        };
                                    (_ = c < T ? (T - R < c && (R = 0), A && !w(A) ? A : V.search(y, w)) : y[m - 1]) && (b = (E = _).start, h && E.level === h.level && E.sn === h.sn && (E.sn < r.endSN ? (E = y[E.sn + 1 - r.startSN], M.b.log("SN just loaded, load next one: " + E.sn)) : E = null))
                                }
                                E && (E.encrypted ? (M.b.log("Loading key for " + E.sn + " of [" + r.startSN + " ," + r.endSN + "],track " + v), this.state = re, i.trigger(F.a.KEY_LOADING, {
                                    frag: E
                                })) : (M.b.log("Loading " + E.sn + ", cc: " + E.cc + " of [" + r.startSN + " ," + r.endSN + "],track " + v + ", currentTime:" + t + ",bufferEnd:" + c.toFixed(3)), (g || this.fragmentTracker.getState(E) === B) && (this.fragCurrent = E, this.startFragRequested = !0, Object(x.a)(E.sn) && (this.nextLoadPosition = E.start + E.duration), i.trigger(F.a.FRAG_LOADING, {
                                    frag: E
                                }), this.state = ie)))
                            }
                            break;
                        case ae:
                            (e = this.tracks[this.trackId]) && e.details && (this.state = te);
                            break;
                        case ne:
                            var L = $t.now(),
                                k = this.retryDate,
                                D = (o = this.media) && o.seeking;
                            (!k || k <= L || D) && (M.b.log("audioStreamController: retryDate reached, switch back to IDLE state"), this.state = te);
                            break;
                        case ce:
                            var O = this.videoTrackCC;
                            if (this.initPTS[O] === undefined) break;
                            var C = this.waitingFragment;
                            if (C) {
                                var I = C.frag.cc;
                                O !== I ? (e = this.tracks[this.trackId]).details && e.details.live && (M.b.warn("Waiting fragment CC (" + I + ") does not match video track CC (" + O + ")"), this.waitingFragment = null, this.state = te) : (this.state = ie, this.onFragLoaded(this.waitingFragment), this.waitingFragment = null)
                            } else this.state = te
                    }
                }, o.prototype.onMediaAttached = function(t) {
                    var e = this.media = this.mediaBuffer = t.media;
                    this.onvseeking = this.onMediaSeeking.bind(this), this.onvended = this.onMediaEnded.bind(this), e.addEventListener("seeking", this.onvseeking), e.addEventListener("ended", this.onvended);
                    var r = this.config;
                    this.tracks && r.autoStartLoad && this.startLoad(r.startPosition)
                }, o.prototype.onMediaDetaching = function() {
                    var t = this.media;
                    t && t.ended && (M.b.log("MSE detaching and video ended, reset startPosition"), this.startPosition = this.lastCurrentTime = 0), t && (t.removeEventListener("seeking", this.onvseeking), t.removeEventListener("ended", this.onvended), this.onvseeking = this.onvseeked = this.onvended = null), this.media = this.mediaBuffer = this.videoBuffer = null, this.loadedmetadata = !1, this.stopLoad()
                }, o.prototype.onMediaSeeking = function() {
                    this.state === ue && (this.state = te), this.media && (this.lastCurrentTime = this.media.currentTime), this.tick()
                }, o.prototype.onMediaEnded = function() {
                    this.startPosition = this.lastCurrentTime = 0
                }, o.prototype.onAudioTracksUpdated = function(t) {
                    M.b.log("audio tracks updated"), this.tracks = t.audioTracks
                }, o.prototype.onAudioTrackSwitching = function(t) {
                    var e = !!t.url;
                    this.trackId = t.id, this.fragCurrent = null, this.state = ee, this.waitingFragment = null, e ? this.setInterval(100) : this.demuxer && (this.demuxer.destroy(), this.demuxer = null), e && (this.audioSwitch = !0, this.state = te), this.tick()
                }, o.prototype.onAudioTrackLoaded = function(t) {
                    var e = t.details,
                        r = t.id,
                        i = this.tracks[r],
                        n = e.totalduration,
                        a = 0;
                    if (M.b.log("track " + r + " loaded [" + e.startSN + "," + e.endSN + "],duration:" + n), e.live) {
                        var o = i.details;
                        o && 0 < e.fragments.length ? (at(o, e), a = e.fragments[0].start, e.PTSKnown ? M.b.log("live audio playlist sliding:" + a.toFixed(3)) : M.b.log("live audio playlist - outdated PTS, unknown sliding")) : (e.PTSKnown = !1, M.b.log("live audio playlist - first load, unknown sliding"))
                    } else e.PTSKnown = !1;
                    if (i.details = e, !this.startFragRequested) {
                        if (-1 === this.startPosition) {
                            var s = e.startTimeOffset;
                            Object(x.a)(s) ? (M.b.log("start time offset found in playlist, adjust startPosition to " + s), this.startPosition = s) : this.startPosition = 0
                        }
                        this.nextLoadPosition = this.startPosition
                    }
                    this.state === ae && (this.state = te), this.tick()
                }, o.prototype.onKeyLoaded = function() {
                    this.state === re && (this.state = te, this.tick())
                }, o.prototype.onFragLoaded = function(t) {
                    var e = this.fragCurrent,
                        r = t.frag;
                    if (this.state === ie && e && "audio" === r.type && r.level === e.level && r.sn === e.sn) {
                        var i = this.tracks[this.trackId],
                            n = i.details,
                            a = n.totalduration,
                            o = e.level,
                            s = e.sn,
                            l = e.cc,
                            u = this.config.defaultAudioCodec || i.audioCodec || "mp4a.40.2",
                            d = this.stats = t.stats;
                        if ("initSegment" === s) this.state = te, d.tparsed = d.tbuffered = $t.now(), n.initSegment.data = t.payload, this.hls.trigger(F.a.FRAG_BUFFERED, {
                            stats: d,
                            frag: e,
                            id: "audio"
                        }), this.tick();
                        else {
                            this.state = oe, this.appended = !1, this.demuxer || (this.demuxer = new et(this.hls, "audio"));
                            var c = this.initPTS[l],
                                h = n.initSegment ? n.initSegment.data : [];
                            if (n.initSegment || c !== undefined) {
                                this.pendingBuffering = !0, M.b.log("Demuxing " + s + " of [" + n.startSN + " ," + n.endSN + "],track " + o);
                                this.demuxer.push(t.payload, h, u, null, e, a, !1, c)
                            } else M.b.log("unknown video PTS for continuity counter " + l + ", waiting for video PTS before demuxing audio frag " + s + " of [" + n.startSN + " ," + n.endSN + "],track " + o), this.waitingFragment = t, this.state = ce
                        }
                    }
                    this.fragLoadError = 0
                }, o.prototype.onFragParsingInitSegment = function(t) {
                    var e = this.fragCurrent,
                        r = t.frag;
                    if (e && "audio" === t.id && r.sn === e.sn && r.level === e.level && this.state === oe) {
                        var i = t.tracks,
                            n = void 0;
                        if (i.video && delete i.video, n = i.audio) {
                            n.levelCodec = n.codec, n.id = t.id, this.hls.trigger(F.a.BUFFER_CODECS, i), M.b.log("audio track:audio,container:" + n.container + ",codecs[level/parsed]=[" + n.levelCodec + "/" + n.codec + "]");
                            var a = n.initSegment;
                            if (a) {
                                var o = {
                                    type: "audio",
                                    data: a,
                                    parent: "audio",
                                    content: "initSegment"
                                };
                                this.audioSwitch ? this.pendingData = [o] : (this.appended = !0, this.pendingBuffering = !0, this.hls.trigger(F.a.BUFFER_APPENDING, o))
                            }
                            this.tick()
                        }
                    }
                }, o.prototype.onFragParsingData = function(e) {
                    var r = this,
                        t = this.fragCurrent,
                        i = e.frag;
                    if (t && "audio" === e.id && "audio" === e.type && i.sn === t.sn && i.level === t.level && this.state === oe) {
                        var n = this.trackId,
                            a = this.tracks[n],
                            o = this.hls;
                        Object(x.a)(e.endPTS) || (e.endPTS = e.startPTS + t.duration, e.endDTS = e.startDTS + t.duration), t.addElementaryStream(D.ElementaryStreamTypes.AUDIO), M.b.log("parsed " + e.type + ",PTS:[" + e.startPTS.toFixed(3) + "," + e.endPTS.toFixed(3) + "],DTS:[" + e.startDTS.toFixed(3) + "/" + e.endDTS.toFixed(3) + "],nb:" + e.nb), nt(a.details, t, e.startPTS, e.endPTS);
                        var s = this.audioSwitch,
                            l = this.media,
                            u = !1;
                        if (s && l)
                            if (l.readyState) {
                                var d = l.currentTime;
                                M.b.log("switching audio track : currentTime:" + d), d >= e.startPTS && (M.b.log("switching audio track : flushing all audio"), this.state = le, o.trigger(F.a.BUFFER_FLUSHING, {
                                    startOffset: 0,
                                    endOffset: Number.POSITIVE_INFINITY,
                                    type: "audio"
                                }), u = !0, this.audioSwitch = !1, o.trigger(F.a.AUDIO_TRACK_SWITCHED, {
                                    id: n
                                }))
                            } else this.audioSwitch = !1, o.trigger(F.a.AUDIO_TRACK_SWITCHED, {
                                id: n
                            });
                        var c = this.pendingData;
                        if (!c) return M.b.warn("Apparently attempt to enqueue media payload without codec initialization data upfront"), void o.trigger(F.a.ERROR, {
                            type: h.b.MEDIA_ERROR,
                            details: null,
                            fatal: !0
                        });
                        this.audioSwitch || ([e.data1, e.data2].forEach(function(t) {
                            t && t.length && c.push({
                                type: e.type,
                                data: t,
                                parent: "audio",
                                content: "data"
                            })
                        }), !u && c.length && (c.forEach(function(t) {
                            r.state === oe && (r.pendingBuffering = !0, r.hls.trigger(F.a.BUFFER_APPENDING, t))
                        }), this.pendingData = [], this.appended = !0)), this.tick()
                    }
                }, o.prototype.onFragParsed = function(t) {
                    var e = this.fragCurrent,
                        r = t.frag;
                    e && "audio" === t.id && r.sn === e.sn && r.level === e.level && this.state === oe && (this.stats.tparsed = $t.now(), this.state = se, this._checkAppendedParsed())
                }, o.prototype.onBufferReset = function() {
                    this.mediaBuffer = this.videoBuffer = null, this.loadedmetadata = !1
                }, o.prototype.onBufferCreated = function(t) {
                    var e = t.tracks.audio;
                    e && (this.mediaBuffer = e.buffer, this.loadedmetadata = !0), t.tracks.video && (this.videoBuffer = t.tracks.video.buffer)
                }, o.prototype.onBufferAppended = function(t) {
                    if ("audio" === t.parent) {
                        var e = this.state;
                        e !== oe && e !== se || (this.pendingBuffering = 0 < t.pending, this._checkAppendedParsed())
                    }
                }, o.prototype._checkAppendedParsed = function() {
                    if (!(this.state !== se || this.appended && this.pendingBuffering)) {
                        var t = this.fragCurrent,
                            e = this.stats,
                            r = this.hls;
                        if (t) {
                            this.fragPrevious = t, e.tbuffered = $t.now(), r.trigger(F.a.FRAG_BUFFERED, {
                                stats: e,
                                frag: t,
                                id: "audio"
                            });
                            var i = this.mediaBuffer ? this.mediaBuffer : this.media;
                            M.b.log("audio buffered : " + ot.toString(i.buffered)), this.audioSwitch && this.appended && (this.audioSwitch = !1, r.trigger(F.a.AUDIO_TRACK_SWITCHED, {
                                id: this.trackId
                            })), this.state = te
                        }
                        this.tick()
                    }
                }, o.prototype.onError = function(t) {
                    var e = t.frag;
                    if (!e || "audio" === e.type) switch (t.details) {
                        case h.a.FRAG_LOAD_ERROR:
                        case h.a.FRAG_LOAD_TIMEOUT:
                            var r = t.frag;
                            if (r && "audio" !== r.type) break;
                            if (!t.fatal) {
                                var i = this.fragLoadError;
                                i ? i++ : i = 1;
                                var n = this.config;
                                if (i <= n.fragLoadingMaxRetry) {
                                    this.fragLoadError = i;
                                    var a = Math.min(Math.pow(2, i - 1) * n.fragLoadingRetryDelay, n.fragLoadingMaxRetryTimeout);
                                    M.b.warn("AudioStreamController: frag loading failed, retry in " + a + " ms"), this.retryDate = $t.now() + a, this.state = ne
                                } else M.b.error("AudioStreamController: " + t.details + " reaches max retry, redispatch as fatal ..."), t.fatal = !0, this.state = de
                            }
                            break;
                        case h.a.AUDIO_TRACK_LOAD_ERROR:
                        case h.a.AUDIO_TRACK_LOAD_TIMEOUT:
                        case h.a.KEY_LOAD_ERROR:
                        case h.a.KEY_LOAD_TIMEOUT:
                            this.state !== de && (this.state = t.fatal ? de : te, M.b.warn("AudioStreamController: " + t.details + " while loading frag, now switching to " + this.state + " state ..."));
                            break;
                        case h.a.BUFFER_FULL_ERROR:
                            if ("audio" === t.parent && (this.state === oe || this.state === se)) {
                                var o = this.mediaBuffer,
                                    s = this.media.currentTime;
                                if (o && Y.isBuffered(o, s) && Y.isBuffered(o, s + .5)) {
                                    var l = this.config;
                                    l.maxMaxBufferLength >= l.maxBufferLength && (l.maxMaxBufferLength /= 2, M.b.warn("AudioStreamController: reduce max buffer length to " + l.maxMaxBufferLength + "s")), this.state = te
                                } else M.b.warn("AudioStreamController: buffer full error also media.currentTime is not buffered, flush audio buffer"), this.fragCurrent = null, this.state = le, this.hls.trigger(F.a.BUFFER_FLUSHING, {
                                    startOffset: 0,
                                    endOffset: Number.POSITIVE_INFINITY,
                                    type: "audio"
                                })
                            }
                    }
                }, o.prototype.onBufferFlushed = function() {
                    var e = this,
                        t = this.pendingData;
                    t && t.length ? (M.b.log("AudioStreamController: appending pending audio data after buffer flushed"), t.forEach(function(t) {
                        e.hls.trigger(F.a.BUFFER_APPENDING, t)
                    }), this.appended = !0, this.pendingData = [], this.state = se) : (this.state = te, this.fragPrevious = null, this.tick())
                }, Qt(o, [{
                    key: "state",
                    set: function(t) {
                        if (this.state !== t) {
                            var e = this.state;
                            this._state = t, M.b.log("audio stream:" + e + "->" + t)
                        }
                    },
                    get: function() {
                        return this._state
                    }
                }]), o
            }(ut),
            fe = function() {
                if ("undefined" != typeof window && window.VTTCue) return window.VTTCue;
                var T = {
                        "": !0,
                        lr: !0,
                        rl: !0
                    },
                    e = {
                        start: !0,
                        middle: !0,
                        end: !0,
                        left: !0,
                        right: !0
                    };

                function E(t) {
                    return "string" == typeof t && (!!e[t.toLowerCase()] && t.toLowerCase())
                }

                function S(t) {
                    for (var e = 1; e < arguments.length; e++) {
                        var r = arguments[e];
                        for (var i in r) t[i] = r[i]
                    }
                    return t
                }

                function t(t, e, r) {
                    var i = this,
                        n = function() {
                            if ("undefined" != typeof navigator) return /MSIE\s8\.0/.test(navigator.userAgent)
                        }(),
                        a = {};
                    n ? i = document.createElement("custom") : a.enumerable = !0, i.hasBeenReset = !1;
                    var o = "",
                        s = !1,
                        l = t,
                        u = e,
                        d = r,
                        c = null,
                        h = "",
                        f = !0,
                        p = "auto",
                        g = "start",
                        v = 50,
                        y = "middle",
                        m = 50,
                        b = "middle";
                    if (Object.defineProperty(i, "id", S({}, a, {
                            get: function() {
                                return o
                            },
                            set: function(t) {
                                o = "" + t
                            }
                        })), Object.defineProperty(i, "pauseOnExit", S({}, a, {
                            get: function() {
                                return s
                            },
                            set: function(t) {
                                s = !!t
                            }
                        })), Object.defineProperty(i, "startTime", S({}, a, {
                            get: function() {
                                return l
                            },
                            set: function(t) {
                                if ("number" != typeof t) throw new TypeError("Start time must be set to a number.");
                                l = t, this.hasBeenReset = !0
                            }
                        })), Object.defineProperty(i, "endTime", S({}, a, {
                            get: function() {
                                return u
                            },
                            set: function(t) {
                                if ("number" != typeof t) throw new TypeError("End time must be set to a number.");
                                u = t, this.hasBeenReset = !0
                            }
                        })), Object.defineProperty(i, "text", S({}, a, {
                            get: function() {
                                return d
                            },
                            set: function(t) {
                                d = "" + t, this.hasBeenReset = !0
                            }
                        })), Object.defineProperty(i, "region", S({}, a, {
                            get: function() {
                                return c
                            },
                            set: function(t) {
                                c = t, this.hasBeenReset = !0
                            }
                        })), Object.defineProperty(i, "vertical", S({}, a, {
                            get: function() {
                                return h
                            },
                            set: function(t) {
                                var e = function r(t) {
                                    return "string" == typeof t && !!T[t.toLowerCase()] && t.toLowerCase()
                                }(t);
                                if (!1 === e) throw new SyntaxError("An invalid or illegal string was specified.");
                                h = e, this.hasBeenReset = !0
                            }
                        })), Object.defineProperty(i, "snapToLines", S({}, a, {
                            get: function() {
                                return f
                            },
                            set: function(t) {
                                f = !!t, this.hasBeenReset = !0
                            }
                        })), Object.defineProperty(i, "line", S({}, a, {
                            get: function() {
                                return p
                            },
                            set: function(t) {
                                if ("number" != typeof t && "auto" !== t) throw new SyntaxError("An invalid number or illegal string was specified.");
                                p = t, this.hasBeenReset = !0
                            }
                        })), Object.defineProperty(i, "lineAlign", S({}, a, {
                            get: function() {
                                return g
                            },
                            set: function(t) {
                                var e = E(t);
                                if (!e) throw new SyntaxError("An invalid or illegal string was specified.");
                                g = e, this.hasBeenReset = !0
                            }
                        })), Object.defineProperty(i, "position", S({}, a, {
                            get: function() {
                                return v
                            },
                            set: function(t) {
                                if (t < 0 || 100 < t) throw new Error("Position must be between 0 and 100.");
                                v = t, this.hasBeenReset = !0
                            }
                        })), Object.defineProperty(i, "positionAlign", S({}, a, {
                            get: function() {
                                return y
                            },
                            set: function(t) {
                                var e = E(t);
                                if (!e) throw new SyntaxError("An invalid or illegal string was specified.");
                                y = e, this.hasBeenReset = !0
                            }
                        })), Object.defineProperty(i, "size", S({}, a, {
                            get: function() {
                                return m
                            },
                            set: function(t) {
                                if (t < 0 || 100 < t) throw new Error("Size must be between 0 and 100.");
                                m = t, this.hasBeenReset = !0
                            }
                        })), Object.defineProperty(i, "align", S({}, a, {
                            get: function() {
                                return b
                            },
                            set: function(t) {
                                var e = E(t);
                                if (!e) throw new SyntaxError("An invalid or illegal string was specified.");
                                b = e, this.hasBeenReset = !0
                            }
                        })), i.displayState = undefined, n) return i
                }
                return t.prototype.getCueAsHTML = function() {
                    return window.WebVTT.convertCueToDOMTree(window, this.text)
                }, t
            }(),
            pe = function pe() {
                return {
                    decode: function(t) {
                        if (!t) return "";
                        if ("string" != typeof t) throw new Error("Error - expected string data.");
                        return decodeURIComponent(encodeURIComponent(t))
                    }
                }
            };

        function ge() {
            this.window = window, this.state = "INITIAL", this.buffer = "", this.decoder = new pe, this.regionList = []
        }

        function ve() {
            this.values = Object.create(null)
        }

        function ye(t, e, r, i) {
            var n = i ? t.split(i) : [t];
            for (var a in n)
                if ("string" == typeof n[a]) {
                    var o = n[a].split(r);
                    if (2 === o.length) e(o[0], o[1])
                }
        }
        ve.prototype = {
            set: function(t, e) {
                this.get(t) || "" === e || (this.values[t] = e)
            },
            get: function(t, e, r) {
                return r ? this.has(t) ? this.values[t] : e[r] : this.has(t) ? this.values[t] : e
            },
            has: function(t) {
                return t in this.values
            },
            alt: function(t, e, r) {
                for (var i = 0; i < r.length; ++i)
                    if (e === r[i]) {
                        this.set(t, e);
                        break
                    }
            },
            integer: function(t, e) {
                /^-?\d+$/.test(e) && this.set(t, parseInt(e, 10))
            },
            percent: function(t, e) {
                return !!(e.match(/^([\d]{1,3})(\.[\d]*)?%$/) && 0 <= (e = parseFloat(e)) && e <= 100) && (this.set(t, e), !0)
            }
        };
        var me = new fe(0, 0, 0),
            be = "middle" === me.align ? "middle" : "center";

        function Te(e, t, o) {
            var r = e;

            function i() {
                var t = function i(t) {
                    function e(t, e, r, i) {
                        return 3600 * (0 | t) + 60 * (0 | e) + (0 | r) + (0 | i) / 1e3
                    }
                    var r = t.match(/^(\d+):(\d{2})(:\d{2})?\.(\d{3})/);
                    return r ? r[3] ? e(r[1], r[2], r[3].replace(":", ""), r[4]) : 59 < r[1] ? e(r[1], r[2], 0, r[4]) : e(0, r[1], r[2], r[4]) : null
                }(e);
                if (null === t) throw new Error("Malformed timestamp: " + r);
                return e = e.replace(/^[^\sa-zA-Z-]+/, ""), t
            }

            function n() {
                e = e.replace(/^\s+/, "")
            }
            if (n(), t.startTime = i(), n(), "--\x3e" !== e.substr(0, 3)) throw new Error("Malformed time stamp (time stamps must be separated by '--\x3e'): " + r);
            e = e.substr(3), n(), t.endTime = i(), n(),
                function s(t, e) {
                    var a = new ve;
                    ye(t, function(t, e) {
                        switch (t) {
                            case "region":
                                for (var r = o.length - 1; 0 <= r; r--)
                                    if (o[r].id === e) {
                                        a.set(t, o[r].region);
                                        break
                                    } break;
                            case "vertical":
                                a.alt(t, e, ["rl", "lr"]);
                                break;
                            case "line":
                                var i = e.split(","),
                                    n = i[0];
                                a.integer(t, n), a.percent(t, n) && a.set("snapToLines", !1), a.alt(t, n, ["auto"]), 2 === i.length && a.alt("lineAlign", i[1], ["start", be, "end"]);
                                break;
                            case "position":
                                i = e.split(","), a.percent(t, i[0]), 2 === i.length && a.alt("positionAlign", i[1], ["start", be, "end", "line-left", "line-right", "auto"]);
                                break;
                            case "size":
                                a.percent(t, e);
                                break;
                            case "align":
                                a.alt(t, e, ["start", be, "end", "left", "right"])
                        }
                    }, /:/, /\s/), e.region = a.get("region", null), e.vertical = a.get("vertical", "");
                    var r = a.get("line", "auto");
                    "auto" === r && -1 === me.line && (r = -1), e.line = r, e.lineAlign = a.get("lineAlign", "start"), e.snapToLines = a.get("snapToLines", !0), e.size = a.get("size", 100), e.align = a.get("align", be);
                    var i = a.get("position", "auto");
                    "auto" === i && 50 === me.position && (i = "start" === e.align || "left" === e.align ? 0 : "end" === e.align || "right" === e.align ? 100 : 50), e.position = i
                }(e, t)
        }

        function Ee(t) {
            return t.replace(/<br(?: \/)?>/gi, "\n")
        }
        ge.prototype = {
            parse: function(t) {
                var i = this;

                function e() {
                    var t = i.buffer,
                        e = 0;
                    for (t = Ee(t); e < t.length && "\r" !== t[e] && "\n" !== t[e];) ++e;
                    var r = t.substr(0, e);
                    return "\r" === t[e] && ++e, "\n" === t[e] && ++e, i.buffer = t.substr(e), r
                }
                t && (i.buffer += i.decoder.decode(t, {
                    stream: !0
                }));
                try {
                    var r = void 0;
                    if ("INITIAL" === i.state) {
                        if (!/\r\n|\n/.test(i.buffer)) return this;
                        var n = (r = e()).match(/^(ÃƒÂ¯Ã‚Â»Ã‚Â¿)?WEBVTT([ \t].*)?$/);
                        if (!n || !n[0]) throw new Error("Malformed WebVTT signature.");
                        i.state = "HEADER"
                    }
                    for (var a = !1; i.buffer;) {
                        if (!/\r\n|\n/.test(i.buffer)) return this;
                        switch (a ? a = !1 : r = e(), i.state) {
                            case "HEADER":
                                /:/.test(r) ? ye(r, function(t, e) {}, /:/) : r || (i.state = "ID");
                                continue;
                            case "NOTE":
                                r || (i.state = "ID");
                                continue;
                            case "ID":
                                if (/^NOTE($|[ \t])/.test(r)) {
                                    i.state = "NOTE";
                                    break
                                }
                                if (!r) continue;
                                if (i.cue = new fe(0, 0, ""), i.state = "CUE", -1 === r.indexOf("--\x3e")) {
                                    i.cue.id = r;
                                    continue
                                }
                                case "CUE":
                                    try {
                                        Te(r, i.cue, i.regionList)
                                    } catch (s) {
                                        i.cue = null, i.state = "BADCUE";
                                        continue
                                    }
                                    i.state = "CUETEXT";
                                    continue;
                                case "CUETEXT":
                                    var o = -1 !== r.indexOf("--\x3e");
                                    if (!r || o && (a = !0)) {
                                        i.oncue && i.oncue(i.cue), i.cue = null, i.state = "ID";
                                        continue
                                    }
                                    i.cue.text && (i.cue.text += "\n"), i.cue.text += r;
                                    continue;
                                case "BADCUE":
                                    r || (i.state = "ID");
                                    continue
                        }
                    }
                } catch (s) {
                    "CUETEXT" === i.state && i.cue && i.oncue && i.oncue(i.cue), i.cue = null, i.state = "INITIAL" === i.state ? "BADWEBVTT" : "BADCUE"
                }
                return this
            },
            flush: function() {
                try {
                    if (this.buffer += this.decoder.decode(), (this.cue || "HEADER" === this.state) && (this.buffer += "\n\n", this.parse()), "INITIAL" === this.state) throw new Error("Malformed WebVTT signature.")
                } catch (t) {
                    throw t
                }
                return this.onflush && this.onflush(), this
            }
        };
        var Se = ge;

        function _e(t, e, r, i) {
            for (var n = void 0, a = void 0, o = void 0, s = void 0, l = void 0, u = window.VTTCue || window.TextTrackCue, d = 0; d < i.rows.length; d++)
                if (o = !0, s = 0, l = "", !(n = i.rows[d]).isEmpty()) {
                    for (var c = 0; c < n.chars.length; c++) n.chars[c].uchar.match(/\s/) && o ? s++ : (l += n.chars[c].uchar, o = !1);
                    (n.cueStartTime = e) === r && (r += 1e-4), a = new u(e, r, Ee(l.trim())), 16 <= s ? s-- : s++, navigator.userAgent.match(/Firefox\//) ? a.line = d + 1 : a.line = 7 < d ? d - 2 : d + 1, a.align = "left", a.position = Math.max(0, Math.min(100, s / 32 * 100 + (navigator.userAgent.match(/Firefox\//) ? 50 : 0))), t.addCue(a)
                }
        }

        function Re(t, e) {
            if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function")
        }
        var Ae = {
                42: 225,
                92: 233,
                94: 237,
                95: 243,
                96: 250,
                123: 231,
                124: 247,
                125: 209,
                126: 241,
                127: 9608,
                128: 174,
                129: 176,
                130: 189,
                131: 191,
                132: 8482,
                133: 162,
                134: 163,
                135: 9834,
                136: 224,
                137: 32,
                138: 232,
                139: 226,
                140: 234,
                141: 238,
                142: 244,
                143: 251,
                144: 193,
                145: 201,
                146: 211,
                147: 218,
                148: 220,
                149: 252,
                150: 8216,
                151: 161,
                152: 42,
                153: 8217,
                154: 9473,
                155: 169,
                156: 8480,
                157: 8226,
                158: 8220,
                159: 8221,
                160: 192,
                161: 194,
                162: 199,
                163: 200,
                164: 202,
                165: 203,
                166: 235,
                167: 206,
                168: 207,
                169: 239,
                170: 212,
                171: 217,
                172: 249,
                173: 219,
                174: 171,
                175: 187,
                176: 195,
                177: 227,
                178: 205,
                179: 204,
                180: 236,
                181: 210,
                182: 242,
                183: 213,
                184: 245,
                185: 123,
                186: 125,
                187: 92,
                188: 94,
                189: 95,
                190: 124,
                191: 8764,
                192: 196,
                193: 228,
                194: 214,
                195: 246,
                196: 223,
                197: 165,
                198: 164,
                199: 9475,
                200: 197,
                201: 229,
                202: 216,
                203: 248,
                204: 9487,
                205: 9491,
                206: 9495,
                207: 9499
            },
            we = function we(t) {
                var e = t;
                return Ae.hasOwnProperty(t) && (e = Ae[t]), String.fromCharCode(e)
            },
            Le = 100,
            ke = {
                17: 1,
                18: 3,
                21: 5,
                22: 7,
                23: 9,
                16: 11,
                19: 12,
                20: 14
            },
            De = {
                17: 2,
                18: 4,
                21: 6,
                22: 8,
                23: 10,
                19: 13,
                20: 15
            },
            Oe = {
                25: 1,
                26: 3,
                29: 5,
                30: 7,
                31: 9,
                24: 11,
                27: 12,
                28: 14
            },
            Ce = {
                25: 2,
                26: 4,
                29: 6,
                30: 8,
                31: 10,
                27: 13,
                28: 15
            },
            Ie = ["white", "green", "blue", "cyan", "red", "yellow", "magenta", "black", "transparent"],
            Pe = {
                verboseFilter: {
                    DATA: 3,
                    DEBUG: 3,
                    INFO: 2,
                    WARNING: 2,
                    TEXT: 1,
                    ERROR: 0
                },
                time: null,
                verboseLevel: 0,
                setTime: function(t) {
                    this.time = t
                },
                log: function(t, e) {
                    this.verboseFilter[t];
                    this.verboseLevel
                }
            },
            xe = function xe(t) {
                for (var e = [], r = 0; r < t.length; r++) e.push(t[r].toString(16));
                return e
            },
            Fe = function() {
                function a(t, e, r, i, n) {
                    Re(this, a), this.foreground = t || "white", this.underline = e || !1, this.italics = r || !1, this.background = i || "black", this.flash = n || !1
                }
                return a.prototype.reset = function() {
                    this.foreground = "white", this.underline = !1, this.italics = !1, this.background = "black", this.flash = !1
                }, a.prototype.setStyles = function(t) {
                    for (var e = ["foreground", "underline", "italics", "background", "flash"], r = 0; r < e.length; r++) {
                        var i = e[r];
                        t.hasOwnProperty(i) && (this[i] = t[i])
                    }
                }, a.prototype.isDefault = function() {
                    return "white" === this.foreground && !this.underline && !this.italics && "black" === this.background && !this.flash
                }, a.prototype.equals = function(t) {
                    return this.foreground === t.foreground && this.underline === t.underline && this.italics === t.italics && this.background === t.background && this.flash === t.flash
                }, a.prototype.copy = function(t) {
                    this.foreground = t.foreground, this.underline = t.underline, this.italics = t.italics, this.background = t.background, this.flash = t.flash
                }, a.prototype.toString = function() {
                    return "color=" + this.foreground + ", underline=" + this.underline + ", italics=" + this.italics + ", background=" + this.background + ", flash=" + this.flash
                }, a
            }(),
            Me = function() {
                function o(t, e, r, i, n, a) {
                    Re(this, o), this.uchar = t || " ", this.penState = new Fe(e, r, i, n, a)
                }
                return o.prototype.reset = function() {
                    this.uchar = " ", this.penState.reset()
                }, o.prototype.setChar = function(t, e) {
                    this.uchar = t, this.penState.copy(e)
                }, o.prototype.setPenState = function(t) {
                    this.penState.copy(t)
                }, o.prototype.equals = function(t) {
                    return this.uchar === t.uchar && this.penState.equals(t.penState)
                }, o.prototype.copy = function(t) {
                    this.uchar = t.uchar, this.penState.copy(t.penState)
                }, o.prototype.isEmpty = function() {
                    return " " === this.uchar && this.penState.isDefault()
                }, o
            }(),
            Ue = function() {
                function e() {
                    Re(this, e), this.chars = [];
                    for (var t = 0; t < Le; t++) this.chars.push(new Me);
                    this.pos = 0, this.currPenState = new Fe
                }
                return e.prototype.equals = function(t) {
                    for (var e = !0, r = 0; r < Le; r++)
                        if (!this.chars[r].equals(t.chars[r])) {
                            e = !1;
                            break
                        } return e
                }, e.prototype.copy = function(t) {
                    for (var e = 0; e < Le; e++) this.chars[e].copy(t.chars[e])
                }, e.prototype.isEmpty = function() {
                    for (var t = !0, e = 0; e < Le; e++)
                        if (!this.chars[e].isEmpty()) {
                            t = !1;
                            break
                        } return t
                }, e.prototype.setCursor = function(t) {
                    this.pos !== t && (this.pos = t), this.pos < 0 ? (Pe.log("ERROR", "Negative cursor position " + this.pos), this.pos = 0) : this.pos > Le && (Pe.log("ERROR", "Too large cursor position " + this.pos), this.pos = Le)
                }, e.prototype.moveCursor = function(t) {
                    var e = this.pos + t;
                    if (1 < t)
                        for (var r = this.pos + 1; r < e + 1; r++) this.chars[r].setPenState(this.currPenState);
                    this.setCursor(e)
                }, e.prototype.backSpace = function() {
                    this.moveCursor(-1), this.chars[this.pos].setChar(" ", this.currPenState)
                }, e.prototype.insertChar = function(t) {
                    144 <= t && this.backSpace();
                    var e = we(t);
                    this.pos >= Le ? Pe.log("ERROR", "Cannot insert " + t.toString(16) + " (" + e + ") at position " + this.pos + ". Skipping it!") : (this.chars[this.pos].setChar(e, this.currPenState), this.moveCursor(1))
                }, e.prototype.clearFromPos = function(t) {
                    var e = void 0;
                    for (e = t; e < Le; e++) this.chars[e].reset()
                }, e.prototype.clear = function() {
                    this.clearFromPos(0), this.pos = 0, this.currPenState.reset()
                }, e.prototype.clearToEndOfRow = function() {
                    this.clearFromPos(this.pos)
                }, e.prototype.getTextString = function() {
                    for (var t = [], e = !0, r = 0; r < Le; r++) {
                        var i = this.chars[r].uchar;
                        " " !== i && (e = !1), t.push(i)
                    }
                    return e ? "" : t.join("")
                }, e.prototype.setPenStyles = function(t) {
                    this.currPenState.setStyles(t), this.chars[this.pos].setPenState(this.currPenState)
                }, e
            }(),
            Ne = function() {
                function e() {
                    Re(this, e), this.rows = [];
                    for (var t = 0; t < 15; t++) this.rows.push(new Ue);
                    this.currRow = 14, this.nrRollUpRows = null, this.reset()
                }
                return e.prototype.reset = function() {
                    for (var t = 0; t < 15; t++) this.rows[t].clear();
                    this.currRow = 14
                }, e.prototype.equals = function(t) {
                    for (var e = !0, r = 0; r < 15; r++)
                        if (!this.rows[r].equals(t.rows[r])) {
                            e = !1;
                            break
                        } return e
                }, e.prototype.copy = function(t) {
                    for (var e = 0; e < 15; e++) this.rows[e].copy(t.rows[e])
                }, e.prototype.isEmpty = function() {
                    for (var t = !0, e = 0; e < 15; e++)
                        if (!this.rows[e].isEmpty()) {
                            t = !1;
                            break
                        } return t
                }, e.prototype.backSpace = function() {
                    this.rows[this.currRow].backSpace()
                }, e.prototype.clearToEndOfRow = function() {
                    this.rows[this.currRow].clearToEndOfRow()
                }, e.prototype.insertChar = function(t) {
                    this.rows[this.currRow].insertChar(t)
                }, e.prototype.setPen = function(t) {
                    this.rows[this.currRow].setPenStyles(t)
                }, e.prototype.moveCursor = function(t) {
                    this.rows[this.currRow].moveCursor(t)
                }, e.prototype.setCursor = function(t) {
                    Pe.log("INFO", "setCursor: " + t), this.rows[this.currRow].setCursor(t)
                }, e.prototype.setPAC = function(t) {
                    Pe.log("INFO", "pacData = " + JSON.stringify(t));
                    var e = t.row - 1;
                    if (this.nrRollUpRows && e < this.nrRollUpRows - 1 && (e = this.nrRollUpRows - 1), this.nrRollUpRows && this.currRow !== e) {
                        for (var r = 0; r < 15; r++) this.rows[r].clear();
                        var i = this.currRow + 1 - this.nrRollUpRows,
                            n = this.lastOutputScreen;
                        if (n) {
                            var a = n.rows[i].cueStartTime;
                            if (a && a < Pe.time)
                                for (var o = 0; o < this.nrRollUpRows; o++) this.rows[e - this.nrRollUpRows + o + 1].copy(n.rows[i + o])
                        }
                    }
                    this.currRow = e;
                    var s = this.rows[this.currRow];
                    if (null !== t.indent) {
                        var l = t.indent,
                            u = Math.max(l - 1, 0);
                        s.setCursor(t.indent), t.color = s.chars[u].penState.foreground
                    }
                    var d = {
                        foreground: t.color,
                        underline: t.underline,
                        italics: t.italics,
                        background: "black",
                        flash: !1
                    };
                    this.setPen(d)
                }, e.prototype.setBkgData = function(t) {
                    Pe.log("INFO", "bkgData = " + JSON.stringify(t)), this.backSpace(), this.setPen(t), this.insertChar(32)
                }, e.prototype.setRollUpRows = function(t) {
                    this.nrRollUpRows = t
                }, e.prototype.rollUp = function() {
                    if (null !== this.nrRollUpRows) {
                        Pe.log("TEXT", this.getDisplayText());
                        var t = this.currRow + 1 - this.nrRollUpRows,
                            e = this.rows.splice(t, 1)[0];
                        e.clear(), this.rows.splice(this.currRow, 0, e), Pe.log("INFO", "Rolling up")
                    } else Pe.log("DEBUG", "roll_up but nrRollUpRows not set yet")
                }, e.prototype.getDisplayText = function(t) {
                    t = t || !1;
                    for (var e = [], r = "", i = -1, n = 0; n < 15; n++) {
                        var a = this.rows[n].getTextString();
                        a && (i = n + 1, t ? e.push("Row " + i + ": '" + a + "'") : e.push(a.trim()))
                    }
                    return 0 < e.length && (r = t ? "[" + e.join(" | ") + "]" : e.join("\n")), r
                }, e.prototype.getTextAndFormat = function() {
                    return this.rows
                }, e
            }(),
            Be = function() {
                function r(t, e) {
                    Re(this, r), this.chNr = t, this.outputFilter = e, this.mode = null, this.verbose = 0, this.displayedMemory = new Ne, this.nonDisplayedMemory = new Ne, this.lastOutputScreen = new Ne, this.currRollUpRow = this.displayedMemory.rows[14], this.writeScreen = this.displayedMemory, this.mode = null, this.cueStartTime = null
                }
                return r.prototype.reset = function() {
                    this.mode = null, this.displayedMemory.reset(), this.nonDisplayedMemory.reset(), this.lastOutputScreen.reset(), this.currRollUpRow = this.displayedMemory.rows[14], this.writeScreen = this.displayedMemory, this.mode = null, this.cueStartTime = null, this.lastCueEndTime = null
                }, r.prototype.getHandler = function() {
                    return this.outputFilter
                }, r.prototype.setHandler = function(t) {
                    this.outputFilter = t
                }, r.prototype.setPAC = function(t) {
                    this.writeScreen.setPAC(t)
                }, r.prototype.setBkgData = function(t) {
                    this.writeScreen.setBkgData(t)
                }, r.prototype.setMode = function(t) {
                    t !== this.mode && (this.mode = t, Pe.log("INFO", "MODE=" + t), "MODE_POP-ON" === this.mode ? this.writeScreen = this.nonDisplayedMemory : (this.writeScreen = this.displayedMemory, this.writeScreen.reset()), "MODE_ROLL-UP" !== this.mode && (this.displayedMemory.nrRollUpRows = null, this.nonDisplayedMemory.nrRollUpRows = null), this.mode = t)
                }, r.prototype.insertChars = function(t) {
                    for (var e = 0; e < t.length; e++) this.writeScreen.insertChar(t[e]);
                    var r = this.writeScreen === this.displayedMemory ? "DISP" : "NON_DISP";
                    Pe.log("INFO", r + ": " + this.writeScreen.getDisplayText(!0)), "MODE_PAINT-ON" !== this.mode && "MODE_ROLL-UP" !== this.mode || (Pe.log("TEXT", "DISPLAYED: " + this.displayedMemory.getDisplayText(!0)), this.outputDataUpdate())
                }, r.prototype.ccRCL = function() {
                    Pe.log("INFO", "RCL - Resume Caption Loading"), this.setMode("MODE_POP-ON")
                }, r.prototype.ccBS = function() {
                    Pe.log("INFO", "BS - BackSpace"), "MODE_TEXT" !== this.mode && (this.writeScreen.backSpace(), this.writeScreen === this.displayedMemory && this.outputDataUpdate())
                }, r.prototype.ccAOF = function() {}, r.prototype.ccAON = function() {}, r.prototype.ccDER = function() {
                    Pe.log("INFO", "DER- Delete to End of Row"), this.writeScreen.clearToEndOfRow(), this.outputDataUpdate()
                }, r.prototype.ccRU = function(t) {
                    Pe.log("INFO", "RU(" + t + ") - Roll Up"), this.writeScreen = this.displayedMemory, this.setMode("MODE_ROLL-UP"), this.writeScreen.setRollUpRows(t)
                }, r.prototype.ccFON = function() {
                    Pe.log("INFO", "FON - Flash On"), this.writeScreen.setPen({
                        flash: !0
                    })
                }, r.prototype.ccRDC = function() {
                    Pe.log("INFO", "RDC - Resume Direct Captioning"), this.setMode("MODE_PAINT-ON")
                }, r.prototype.ccTR = function() {
                    Pe.log("INFO", "TR"), this.setMode("MODE_TEXT")
                }, r.prototype.ccRTD = function() {
                    Pe.log("INFO", "RTD"), this.setMode("MODE_TEXT")
                }, r.prototype.ccEDM = function() {
                    Pe.log("INFO", "EDM - Erase Displayed Memory"), this.displayedMemory.reset(), this.outputDataUpdate(!0)
                }, r.prototype.ccCR = function() {
                    Pe.log("CR - Carriage Return"), this.writeScreen.rollUp(), this.outputDataUpdate(!0)
                }, r.prototype.ccENM = function() {
                    Pe.log("INFO", "ENM - Erase Non-displayed Memory"), this.nonDisplayedMemory.reset()
                }, r.prototype.ccEOC = function() {
                    if (Pe.log("INFO", "EOC - End Of Caption"), "MODE_POP-ON" === this.mode) {
                        var t = this.displayedMemory;
                        this.displayedMemory = this.nonDisplayedMemory, this.nonDisplayedMemory = t, this.writeScreen = this.nonDisplayedMemory, Pe.log("TEXT", "DISP: " + this.displayedMemory.getDisplayText())
                    }
                    this.outputDataUpdate(!0)
                }, r.prototype.ccTO = function(t) {
                    Pe.log("INFO", "TO(" + t + ") - Tab Offset"), this.writeScreen.moveCursor(t)
                }, r.prototype.ccMIDROW = function(t) {
                    var e = {
                        flash: !1
                    };
                    if (e.underline = t % 2 == 1, e.italics = 46 <= t, e.italics) e.foreground = "white";
                    else {
                        var r = Math.floor(t / 2) - 16;
                        e.foreground = ["white", "green", "blue", "cyan", "red", "yellow", "magenta"][r]
                    }
                    Pe.log("INFO", "MIDROW: " + JSON.stringify(e)), this.writeScreen.setPen(e)
                }, r.prototype.outputDataUpdate = function() {
                    var t = 0 < arguments.length && arguments[0] !== undefined && arguments[0],
                        e = Pe.time;
                    null !== e && this.outputFilter && (null !== this.cueStartTime || this.displayedMemory.isEmpty() ? this.displayedMemory.equals(this.lastOutputScreen) || (this.outputFilter.newCue && (this.outputFilter.newCue(this.cueStartTime, e, this.lastOutputScreen), !0 === t && this.outputFilter.dispatchCue && this.outputFilter.dispatchCue()), this.cueStartTime = this.displayedMemory.isEmpty() ? null : e) : this.cueStartTime = e, this.lastOutputScreen.copy(this.displayedMemory))
                }, r.prototype.cueSplitAtTime = function(t) {
                    this.outputFilter && (this.displayedMemory.isEmpty() || (this.outputFilter.newCue && this.outputFilter.newCue(this.cueStartTime, t, this.displayedMemory), this.cueStartTime = t))
                }, r
            }(),
            Ge = function() {
                function i(t, e, r) {
                    Re(this, i), this.field = t || 1, this.outputs = [e, r], this.channels = [new Be(1, e), new Be(2, r)], this.currChNr = -1, this.lastCmdA = null, this.lastCmdB = null, this.bufferedData = [], this.startTime = null, this.lastTime = null, this.dataCounters = {
                        padding: 0,
                        "char": 0,
                        cmd: 0,
                        other: 0
                    }
                }
                return i.prototype.getHandler = function(t) {
                    return this.channels[t].getHandler()
                }, i.prototype.setHandler = function(t, e) {
                    this.channels[t].setHandler(e)
                }, i.prototype.addData = function(t, e) {
                    var r = void 0,
                        i = void 0,
                        n = void 0,
                        a = !1;
                    this.lastTime = t, Pe.setTime(t);
                    for (var o = 0; o < e.length; o += 2)
                        if (i = 127 & e[o], n = 127 & e[o + 1], 0 !== i || 0 !== n) {
                            if (Pe.log("DATA", "[" + xe([e[o], e[o + 1]]) + "] -> (" + xe([i, n]) + ")"), (r = this.parseCmd(i, n)) || (r = this.parseMidrow(i, n)), r || (r = this.parsePAC(i, n)), r || (r = this.parseBackgroundAttributes(i, n)), !r)
                                if (a = this.parseChars(i, n))
                                    if (this.currChNr && 0 <= this.currChNr) this.channels[this.currChNr - 1].insertChars(a);
                                    else Pe.log("WARNING", "No channel found yet. TEXT-MODE?");
                            r ? this.dataCounters.cmd += 2 : a ? this.dataCounters["char"] += 2 : (this.dataCounters.other += 2, Pe.log("WARNING", "Couldn't parse cleaned data " + xe([i, n]) + " orig: " + xe([e[o], e[o + 1]])))
                        } else this.dataCounters.padding += 2
                }, i.prototype.parseCmd = function(t, e) {
                    var r = null;
                    if (!((20 === t || 28 === t) && 32 <= e && e <= 47) && !((23 === t || 31 === t) && 33 <= e && e <= 35)) return !1;
                    if (t === this.lastCmdA && e === this.lastCmdB) return this.lastCmdA = null, this.lastCmdB = null, Pe.log("DEBUG", "Repeated command (" + xe([t, e]) + ") is dropped"), !0;
                    r = 20 === t || 23 === t ? 1 : 2;
                    var i = this.channels[r - 1];
                    return 20 === t || 28 === t ? 32 === e ? i.ccRCL() : 33 === e ? i.ccBS() : 34 === e ? i.ccAOF() : 35 === e ? i.ccAON() : 36 === e ? i.ccDER() : 37 === e ? i.ccRU(2) : 38 === e ? i.ccRU(3) : 39 === e ? i.ccRU(4) : 40 === e ? i.ccFON() : 41 === e ? i.ccRDC() : 42 === e ? i.ccTR() : 43 === e ? i.ccRTD() : 44 === e ? i.ccEDM() : 45 === e ? i.ccCR() : 46 === e ? i.ccENM() : 47 === e && i.ccEOC() : i.ccTO(e - 32), this.lastCmdA = t, this.lastCmdB = e, this.currChNr = r, !0
                }, i.prototype.parseMidrow = function(t, e) {
                    var r = null;
                    return (17 === t || 25 === t) && 32 <= e && e <= 47 && ((r = 17 === t ? 1 : 2) !== this.currChNr ? (Pe.log("ERROR", "Mismatch channel in midrow parsing"), !1) : (this.channels[r - 1].ccMIDROW(e), Pe.log("DEBUG", "MIDROW (" + xe([t, e]) + ")"), !0))
                }, i.prototype.parsePAC = function(t, e) {
                    var r, i = null;
                    if (!((17 <= t && t <= 23 || 25 <= t && t <= 31) && 64 <= e && e <= 127) && !((16 === t || 24 === t) && 64 <= e && e <= 95)) return !1;
                    if (t === this.lastCmdA && e === this.lastCmdB) return this.lastCmdA = null, !(this.lastCmdB = null);
                    r = t <= 23 ? 1 : 2, i = 64 <= e && e <= 95 ? 1 === r ? ke[t] : Oe[t] : 1 === r ? De[t] : Ce[t];
                    var n = this.interpretPAC(i, e);
                    return this.channels[r - 1].setPAC(n), this.lastCmdA = t, this.lastCmdB = e, this.currChNr = r, !0
                }, i.prototype.interpretPAC = function(t, e) {
                    var r = e,
                        i = {
                            color: null,
                            italics: !1,
                            indent: null,
                            underline: !1,
                            row: t
                        };
                    return r = 95 < e ? e - 96 : e - 64, i.underline = 1 == (1 & r), r <= 13 ? i.color = ["white", "green", "blue", "cyan", "red", "yellow", "magenta", "white"][Math.floor(r / 2)] : r <= 15 ? (i.italics = !0, i.color = "white") : i.indent = 4 * Math.floor((r - 16) / 2), i
                }, i.prototype.parseChars = function(t, e) {
                    var r = null,
                        i = null,
                        n = null;
                    if (17 <= (n = 25 <= t ? (r = 2, t - 8) : (r = 1, t)) && n <= 19) {
                        var a = e;
                        a = 17 === n ? e + 80 : 18 === n ? e + 112 : e + 144, Pe.log("INFO", "Special char '" + we(a) + "' in channel " + r), i = [a]
                    } else 32 <= t && t <= 127 && (i = 0 === e ? [t] : [t, e]);
                    if (i) {
                        var o = xe(i);
                        Pe.log("DEBUG", "Char codes =  " + o.join(",")), this.lastCmdA = null, this.lastCmdB = null
                    }
                    return i
                }, i.prototype.parseBackgroundAttributes = function(t, e) {
                    var r, i = void 0,
                        n = void 0;
                    return ((16 === t || 24 === t) && 32 <= e && e <= 47 || (23 === t || 31 === t) && 45 <= e && e <= 47) && (i = {}, 16 === t || 24 === t ? (n = Math.floor((e - 32) / 2), i.background = Ie[n], e % 2 == 1 && (i.background = i.background + "_semi")) : 45 === e ? i.background = "transparent" : (i.foreground = "black", 47 === e && (i.underline = !0)), r = t < 24 ? 1 : 2, this.channels[r - 1].setBkgData(i), this.lastCmdA = null, !(this.lastCmdB = null))
                }, i.prototype.reset = function() {
                    for (var t = 0; t < this.channels.length; t++) this.channels[t] && this.channels[t].reset();
                    this.lastCmdA = null, this.lastCmdB = null
                }, i.prototype.cueSplitAtTime = function(t) {
                    for (var e = 0; e < this.channels.length; e++) this.channels[e] && this.channels[e].cueSplitAtTime(t)
                }, i
            }();
        var Ke = function() {
                function i(t, e) {
                    ! function r(t, e) {
                        if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function")
                    }(this, i), this.timelineController = t, this.trackName = e, this.startTime = null, this.endTime = null, this.screen = null
                }
                return i.prototype.dispatchCue = function() {
                    null !== this.startTime && (this.timelineController.addCues(this.trackName, this.startTime, this.endTime, this.screen), this.startTime = null)
                }, i.prototype.newCue = function(t, e, r) {
                    (null === this.startTime || this.startTime > t) && (this.startTime = t), this.endTime = e, this.screen = r, this.timelineController.createCaptionsTrack(this.trackName)
                }, i
            }(),
            je = function je(t, e, r) {
                return t.substr(r || 0, e.length) === e
            },
            He = function SD(t) {
                for (var SD = 5381, e = t.length; e;) SD = 33 * SD ^ t.charCodeAt(--e);
                return (SD >>> 0).toString()
            },
            Ve = function Ve(t, e, r) {
                var i = t[e],
                    n = t[i.prevCC];
                if (!n || !n["new"] && i["new"]) return t.ccOffset = t.presentationOffset = i.start, void(i["new"] = !1);
                for (; n && n["new"];) t.ccOffset += i.start - n.start, i["new"] = !1, n = t[(i = n).prevCC];
                t.presentationOffset = r
            },
            Ye = {
                parse: function(t, s, i, n, e, r) {
                    var a = Object(Dt.b)(new Uint8Array(t)).trim().replace(/\r\n|\n\r|\n|\r/g, "\n").split("\n"),
                        l = "00:00.000",
                        u = 0,
                        d = 0,
                        c = 0,
                        o = [],
                        h = void 0,
                        f = !0,
                        p = new Se;
                    p.oncue = function(t) {
                        var e = i[n],
                            r = i.ccOffset;
                        e && e["new"] && (d !== undefined ? r = i.ccOffset = e.start : Ve(i, n, c)), c && (r = c + i.ccOffset - i.presentationOffset), t.startTime += r - d, t.endTime += r - d, t.id = He(t.startTime.toString()) + He(t.endTime.toString()) + He(t.text), t.text = decodeURIComponent(encodeURIComponent(t.text)), 0 < t.endTime && o.push(t)
                    }, p.onparsingerror = function(t) {
                        h = t
                    }, p.onflush = function() {
                        h && r ? r(h) : e(o)
                    }, a.forEach(function(t) {
                        if (f) {
                            if (je(t, "X-TIMESTAMP-MAP=")) {
                                f = !1, t.substr(16).split(",").forEach(function(t) {
                                    je(t, "LOCAL:") ? l = t.substr(6) : je(t, "MPEGTS:") && (u = parseInt(t.substr(7)))
                                });
                                try {
                                    u -= s = s < 0 ? s + 8589934592 : s, e = l, r = parseInt(e.substr(-3)), i = parseInt(e.substr(-6, 2)), n = parseInt(e.substr(-9, 2)), a = 9 < e.length ? parseInt(e.substr(0, e.indexOf(":"))) : 0, d = (Object(x.a)(r) && Object(x.a)(i) && Object(x.a)(n) && Object(x.a)(a) ? (r += 1e3 * i, r += 6e4 * n, r += 36e5 * a) : -1) / 1e3, c = u / 9e4, -1 === d && (h = new Error("Malformed X-TIMESTAMP-MAP: " + t))
                                } catch (o) {
                                    h = new Error("Malformed X-TIMESTAMP-MAP: " + t)
                                }
                                return
                            }
                            "" === t && (f = !1)
                        }
                        var e, r, i, n, a;
                        p.parse(t + "\n")
                    }), p.flush()
                }
            };
        var We = function(o) {
                function s(t) {
                    ! function n(t, e) {
                        if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function")
                    }(this, s);
                    var e = function a(t, e) {
                        if (!t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                        return !e || "object" != typeof e && "function" != typeof e ? t : e
                    }(this, o.call(this, t, F.a.MEDIA_ATTACHING, F.a.MEDIA_DETACHING, F.a.FRAG_PARSING_USERDATA, F.a.FRAG_DECRYPTED, F.a.MANIFEST_LOADING, F.a.MANIFEST_LOADED, F.a.FRAG_LOADED, F.a.LEVEL_SWITCHING, F.a.INIT_PTS_FOUND));
                    if (e.hls = t, e.config = t.config, e.enabled = !0, e.Cues = t.config.cueHandler, e.textTracks = [], e.tracks = [], e.unparsedVttFrags = [], e.initPTS = undefined, e.cueRanges = [], e.captionsTracks = {}, e.captionsProperties = {
                            textTrack1: {
                                label: e.config.captionsTextTrack1Label,
                                languageCode: e.config.captionsTextTrack1LanguageCode
                            },
                            textTrack2: {
                                label: e.config.captionsTextTrack2Label,
                                languageCode: e.config.captionsTextTrack2LanguageCode
                            }
                        }, e.config.enableCEA708Captions) {
                        var r = new Ke(e, "textTrack1"),
                            i = new Ke(e, "textTrack2");
                        e.cea608Parser = new Ge(0, r, i)
                    }
                    return e
                }
                return function r(t, e) {
                    if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function, not " + typeof e);
                    t.prototype = Object.create(e && e.prototype, {
                        constructor: {
                            value: t,
                            enumerable: !1,
                            writable: !0,
                            configurable: !0
                        }
                    }), e && (Object.setPrototypeOf ? Object.setPrototypeOf(t, e) : t.__proto__ = e)
                }(s, o), s.prototype.addCues = function(t, e, r, i) {
                    for (var n, a, o, s, l = this.cueRanges, u = !1, d = l.length; d--;) {
                        var c = l[d],
                            h = (n = c[0], a = c[1], o = e, s = r, Math.min(a, s) - Math.max(n, o));
                        if (0 <= h && (c[0] = Math.min(c[0], e), c[1] = Math.max(c[1], r), u = !0, .5 < h / (r - e))) return
                    }
                    u || l.push([e, r]), this.Cues.newCue(this.captionsTracks[t], e, r, i)
                }, s.prototype.onInitPtsFound = function(t) {
                    var e = this;
                    "undefined" == typeof this.initPTS && (this.initPTS = t.initPTS), this.unparsedVttFrags.length && (this.unparsedVttFrags.forEach(function(t) {
                        e.onFragLoaded(t)
                    }), this.unparsedVttFrags = [])
                }, s.prototype.getExistingTrack = function(t) {
                    var e = this.media;
                    if (e)
                        for (var r = 0; r < e.textTracks.length; r++) {
                            var i = e.textTracks[r];
                            if (i[t]) return i
                        }
                    return null
                }, s.prototype.createCaptionsTrack = function(t) {
                    var e = this.captionsProperties[t],
                        r = e.label,
                        i = e.languageCode,
                        n = this.captionsTracks;
                    if (!n[t]) {
                        var a = this.getExistingTrack(t);
                        if (a) n[t] = a, Ct(n[t]), Ot(n[t], this.media);
                        else {
                            var o = this.createTextTrack("captions", r, i);
                            o && (o[t] = !0, n[t] = o)
                        }
                    }
                }, s.prototype.createTextTrack = function(t, e, r) {
                    var i = this.media;
                    if (i) return i.addTextTrack(t, e, r)
                }, s.prototype.destroy = function() {
                    l.prototype.destroy.call(this)
                }, s.prototype.onMediaAttaching = function(t) {
                    this.media = t.media, this._cleanTracks()
                }, s.prototype.onMediaDetaching = function() {
                    var e = this.captionsTracks;
                    Object.keys(e).forEach(function(t) {
                        Ct(e[t]), delete e[t]
                    })
                }, s.prototype.onManifestLoading = function() {
                    this.lastSn = -1, this.prevCC = -1, this.vttCCs = {
                        ccOffset: 0,
                        presentationOffset: 0
                    }, this._cleanTracks()
                }, s.prototype._cleanTracks = function() {
                    var t = this.media;
                    if (t) {
                        var e = t.textTracks;
                        if (e)
                            for (var r = 0; r < e.length; r++) Ct(e[r])
                    }
                }, s.prototype.onManifestLoaded = function(t) {
                    var a = this;
                    if (this.textTracks = [], this.unparsedVttFrags = this.unparsedVttFrags || [], this.initPTS = undefined, this.cueRanges = [], this.config.enableWebVTT) {
                        this.tracks = t.subtitles || [];
                        var o = this.media ? this.media.textTracks : [];
                        this.tracks.forEach(function(t, e) {
                            var r = void 0;
                            if (e < o.length) {
                                var i = o[e];
                                (function n(t, e) {
                                    return t && t.label === e.name && !(t.textTrack1 || t.textTrack2)
                                })(i, t) && (r = i)
                            }
                            r || (r = a.createTextTrack("subtitles", t.name, t.lang)), t["default"] ? r.mode = a.hls.subtitleDisplay ? "showing" : "hidden" : r.mode = "disabled", a.textTracks.push(r)
                        })
                    }
                }, s.prototype.onLevelSwitching = function() {
                    this.enabled = "NONE" !== this.hls.currentLevel.closedCaptions
                }, s.prototype.onFragLoaded = function(t) {
                    var e = t.frag,
                        r = t.payload;
                    if ("main" === e.type) {
                        var i = e.sn;
                        if (i !== this.lastSn + 1) {
                            var n = this.cea608Parser;
                            n && n.reset()
                        }
                        this.lastSn = i
                    } else if ("subtitle" === e.type)
                        if (r.byteLength) {
                            if ("undefined" == typeof this.initPTS) return void this.unparsedVttFrags.push(t);
                            var a = e.decryptdata;
                            null != a && null != a.key && "AES-128" === a.method || this._parseVTTs(e, r)
                        } else this.hls.trigger(F.a.SUBTITLE_FRAG_PROCESSED, {
                            success: !1,
                            frag: e
                        })
                }, s.prototype._parseVTTs = function(e, t) {
                    var r = this.vttCCs;
                    r[e.cc] || (r[e.cc] = {
                        start: e.start,
                        prevCC: this.prevCC,
                        "new": !0
                    }, this.prevCC = e.cc);
                    var n = this.textTracks,
                        a = this.hls;
                    Ye.parse(t, this.initPTS, r, e.cc, function(t) {
                        var i = n[e.trackId];
                        "disabled" !== i.mode ? (t.forEach(function(t) {
                            if (!i.cues.getCueById(t.id)) try {
                                i.addCue(t)
                            } catch (r) {
                                var e = new window.TextTrackCue(t.startTime, t.endTime, t.text);
                                e.id = t.id, i.addCue(e)
                            }
                        }), a.trigger(F.a.SUBTITLE_FRAG_PROCESSED, {
                            success: !0,
                            frag: e
                        })) : a.trigger(F.a.SUBTITLE_FRAG_PROCESSED, {
                            success: !1,
                            frag: e
                        })
                    }, function(t) {
                        M.b.log("Failed to parse VTT cue: " + t), a.trigger(F.a.SUBTITLE_FRAG_PROCESSED, {
                            success: !1,
                            frag: e
                        })
                    })
                }, s.prototype.onFragDecrypted = function(t) {
                    var e = t.payload,
                        r = t.frag;
                    if ("subtitle" === r.type) {
                        if ("undefined" == typeof this.initPTS) return void this.unparsedVttFrags.push(t);
                        this._parseVTTs(r, e)
                    }
                }, s.prototype.onFragParsingUserdata = function(t) {
                    if (this.enabled && this.config.enableCEA708Captions)
                        for (var e = 0; e < t.samples.length; e++) {
                            var r = this.extractCea608Data(t.samples[e].bytes);
                            this.cea608Parser.addData(t.samples[e].pts, r)
                        }
                }, s.prototype.extractCea608Data = function(t) {
                    for (var e = 31 & t[0], r = 2, i = void 0, n = void 0, a = void 0, o = [], s = 0; s < e; s++) i = t[r++], n = 127 & t[r++], a = 127 & t[r++], 0 === n && 0 === a || 0 != (4 & i) && 0 === (3 & i) && (o.push(n), o.push(a));
                    return o
                }, s
            }(l),
            qe = function() {
                function i(t, e) {
                    for (var r = 0; r < e.length; r++) {
                        var i = e[r];
                        i.enumerable = i.enumerable || !1, i.configurable = !0, "value" in i && (i.writable = !0), Object.defineProperty(t, i.key, i)
                    }
                }
                return function(t, e, r) {
                    return e && i(t.prototype, e), r && i(t, r), t
                }
            }();

        function Xe(t) {
            for (var e = [], r = 0; r < t.length; r++) "subtitles" === t[r].kind && e.push(t[r]);
            return e
        }
        var ze = function(n) {
                function a(t) {
                    ! function r(t, e) {
                        if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function")
                    }(this, a);
                    var e = function i(t, e) {
                        if (!t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                        return !e || "object" != typeof e && "function" != typeof e ? t : e
                    }(this, n.call(this, t, F.a.MEDIA_ATTACHED, F.a.MEDIA_DETACHING, F.a.MANIFEST_LOADING, F.a.MANIFEST_LOADED, F.a.SUBTITLE_TRACK_LOADED));
                    return e.tracks = [], e.trackId = -1, e.media = null, e.subtitleDisplay = !0, e
                }
                return function r(t, e) {
                    if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function, not " + typeof e);
                    t.prototype = Object.create(e && e.prototype, {
                        constructor: {
                            value: t,
                            enumerable: !1,
                            writable: !0,
                            configurable: !0
                        }
                    }), e && (Object.setPrototypeOf ? Object.setPrototypeOf(t, e) : t.__proto__ = e)
                }(a, n), a.prototype._onTextTracksChanged = function() {
                    if (this.media) {
                        for (var t = -1, e = Xe(this.media.textTracks), r = 0; r < e.length; r++)
                            if ("hidden" === e[r].mode) t = r;
                            else if ("showing" === e[r].mode) {
                            t = r;
                            break
                        }
                        this.subtitleTrack = t
                    }
                }, a.prototype.destroy = function() {
                    l.prototype.destroy.call(this)
                }, a.prototype.onMediaAttached = function(t) {
                    var e = this;
                    this.media = t.media, this.media && (this.queuedDefaultTrack && (this.subtitleTrack = this.queuedDefaultTrack, delete this.queuedDefaultTrack), this.trackChangeListener = this._onTextTracksChanged.bind(this), this.useTextTrackPolling = !(this.media.textTracks && "onchange" in this.media.textTracks), this.useTextTrackPolling ? this.subtitlePollingInterval = setInterval(function() {
                        e.trackChangeListener()
                    }, 500) : this.media.textTracks.addEventListener("change", this.trackChangeListener))
                }, a.prototype.onMediaDetaching = function() {
                    this.media && (this.useTextTrackPolling ? clearInterval(this.subtitlePollingInterval) : this.media.textTracks.removeEventListener("change", this.trackChangeListener), this.media = null)
                }, a.prototype.onManifestLoading = function() {
                    this.tracks = [], this.trackId = -1
                }, a.prototype.onManifestLoaded = function(t) {
                    var e = this,
                        r = t.subtitles || [];
                    this.tracks = r, this.trackId = -1, this.hls.trigger(F.a.SUBTITLE_TRACKS_UPDATED, {
                        subtitleTracks: r
                    }), r.forEach(function(t) {
                        t["default"] && (e.media ? e.subtitleTrack = t.id : e.queuedDefaultTrack = t.id)
                    })
                }, a.prototype.onTick = function() {
                    var t = this.trackId,
                        e = this.tracks[t];
                    if (e) {
                        var r = e.details;
                        r && !r.live || (M.b.log("(re)loading playlist for subtitle track " + t), this.hls.trigger(F.a.SUBTITLE_TRACK_LOADING, {
                            url: e.url,
                            id: t
                        }))
                    }
                }, a.prototype.onSubtitleTrackLoaded = function(t) {
                    var e = this;
                    t.id < this.tracks.length && (M.b.log("subtitle track " + t.id + " loaded"), this.tracks[t.id].details = t.details, t.details.live && !this.timer && (this.timer = setInterval(function() {
                        e.onTick()
                    }, 1e3 * t.details.targetduration, this)), !t.details.live && this.timer && this._stopTimer())
                }, a.prototype.setSubtitleTrackInternal = function(t) {
                    var e = this.hls,
                        r = this.tracks;
                    if (!("number" != typeof t || t < -1 || t >= r.length) && (this._stopTimer(), this.trackId = t, M.b.log("switching to subtitle track " + t), e.trigger(F.a.SUBTITLE_TRACK_SWITCH, {
                            id: t
                        }), -1 !== t)) {
                        var i = r[t],
                            n = i.details;
                        n && !n.live || (M.b.log("(re)loading playlist for subtitle track " + t), e.trigger(F.a.SUBTITLE_TRACK_LOADING, {
                            url: i.url,
                            id: t
                        }))
                    }
                }, a.prototype._stopTimer = function() {
                    this.timer && (clearInterval(this.timer), this.timer = null)
                }, a.prototype._toggleTrackModes = function(t) {
                    var e = this.media,
                        r = this.subtitleDisplay,
                        i = this.trackId;
                    if (e) {
                        var n = Xe(e.textTracks);
                        if (-1 === t)[].slice.call(n).forEach(function(t) {
                            t.mode = "disabled"
                        });
                        else {
                            var a = n[i];
                            a && (a.mode = "disabled")
                        }
                        var o = n[t];
                        o && (o.mode = r ? "showing" : "hidden")
                    }
                }, qe(a, [{
                    key: "subtitleTracks",
                    get: function() {
                        return this.tracks
                    }
                }, {
                    key: "subtitleTrack",
                    get: function() {
                        return this.trackId
                    },
                    set: function(t) {
                        this.trackId !== t && (this._toggleTrackModes(t), this.setSubtitleTrackInternal(t))
                    }
                }]), a
            }(l),
            Qe = r(8);
        var $e = window.performance,
            Je = "STOPPED",
            Ze = "IDLE",
            tr = "KEY_LOADING",
            er = "FRAG_LOADING",
            rr = function(n) {
                function a(t) {
                    ! function r(t, e) {
                        if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function")
                    }(this, a);
                    var e = function i(t, e) {
                        if (!t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                        return !e || "object" != typeof e && "function" != typeof e ? t : e
                    }(this, n.call(this, t, F.a.MEDIA_ATTACHED, F.a.ERROR, F.a.KEY_LOADED, F.a.FRAG_LOADED, F.a.SUBTITLE_TRACKS_UPDATED, F.a.SUBTITLE_TRACK_SWITCH, F.a.SUBTITLE_TRACK_LOADED, F.a.SUBTITLE_FRAG_PROCESSED));
                    return e.config = t.config, e.vttFragSNsProcessed = {}, e.vttFragQueues = undefined, e.currentlyProcessing = null, e.state = Je, e.currentTrackId = -1, e.decrypter = new Qe.a(t.observer, t.config), e
                }
                return function r(t, e) {
                    if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function, not " + typeof e);
                    t.prototype = Object.create(e && e.prototype, {
                        constructor: {
                            value: t,
                            enumerable: !1,
                            writable: !0,
                            configurable: !0
                        }
                    }), e && (Object.setPrototypeOf ? Object.setPrototypeOf(t, e) : t.__proto__ = e)
                }(a, n), a.prototype.onHandlerDestroyed = function() {
                    this.state = Je
                }, a.prototype.clearVttFragQueues = function() {
                    var e = this;
                    this.vttFragQueues = {}, this.tracks.forEach(function(t) {
                        e.vttFragQueues[t.id] = []
                    })
                }, a.prototype.nextFrag = function() {
                    if (null === this.currentlyProcessing && -1 < this.currentTrackId && this.vttFragQueues[this.currentTrackId].length) {
                        var t = this.currentlyProcessing = this.vttFragQueues[this.currentTrackId].shift();
                        this.fragCurrent = t, this.hls.trigger(F.a.FRAG_LOADING, {
                            frag: t
                        }), this.state = er
                    }
                }, a.prototype.onSubtitleFragProcessed = function(t) {
                    t.success && this.vttFragSNsProcessed[t.frag.trackId].push(t.frag.sn), this.currentlyProcessing = null, this.state = Ze, this.nextFrag()
                }, a.prototype.onMediaAttached = function() {
                    this.state = Ze
                }, a.prototype.onError = function(t) {
                    var e = t.frag;
                    e && "subtitle" !== e.type || this.currentlyProcessing && (this.currentlyProcessing = null, this.nextFrag())
                }, a.prototype.doTick = function() {
                    var e = this;
                    switch (this.state) {
                        case Ze:
                            var t, r = this.tracks,
                                i = this.currentTrackId,
                                n = this.vttFragSNsProcessed[i],
                                a = this.vttFragQueues[i],
                                o = this.currentlyProcessing ? this.currentlyProcessing.sn : -1,
                                s = function s(t) {
                                    return -1 < n.indexOf(t.sn)
                                },
                                l = function l(e) {
                                    return a.some(function(t) {
                                        return t.sn === e.sn
                                    })
                                };
                            if (!r) break;
                            if (i < r.length && (t = r[i].details), void 0 === t) break;
                            t.fragments.forEach(function(t) {
                                s(t) || t.sn === o || l(t) || (t.encrypted ? (M.b.log("Loading key for " + t.sn), e.state = tr, e.hls.trigger(F.a.KEY_LOADING, {
                                    frag: t
                                })) : (t.trackId = i, a.push(t), e.nextFrag()))
                            })
                    }
                }, a.prototype.onSubtitleTracksUpdated = function(t) {
                    var e = this;
                    M.b.log("subtitle tracks updated"), this.tracks = t.subtitleTracks, this.clearVttFragQueues(), this.vttFragSNsProcessed = {}, this.tracks.forEach(function(t) {
                        e.vttFragSNsProcessed[t.id] = []
                    })
                }, a.prototype.onSubtitleTrackSwitch = function(t) {
                    if (this.currentTrackId = t.id, this.tracks && -1 !== this.currentTrackId) {
                        var e = this.tracks[this.currentTrackId];
                        e && e.details && this.tick()
                    }
                }, a.prototype.onSubtitleTrackLoaded = function() {
                    this.tick()
                }, a.prototype.onKeyLoaded = function() {
                    this.state === tr && (this.state = Ze, this.tick())
                }, a.prototype.onFragLoaded = function(t) {
                    var e = this.fragCurrent,
                        r = t.frag.decryptdata,
                        i = t.frag,
                        n = this.hls;
                    if (this.state === er && e && "subtitle" === t.frag.type && e.sn === t.frag.sn && 0 < t.payload.byteLength && null != r && null != r.key && "AES-128" === r.method) {
                        var a = void 0;
                        try {
                            a = $e.now()
                        } catch (o) {
                            a = Date.now()
                        }
                        this.decrypter.decrypt(t.payload, r.key.buffer, r.iv.buffer, function(t) {
                            var e = void 0;
                            try {
                                e = $e.now()
                            } catch (o) {
                                e = Date.now()
                            }
                            n.trigger(F.a.FRAG_DECRYPTED, {
                                frag: i,
                                payload: t,
                                stats: {
                                    tstart: a,
                                    tdecrypt: e
                                }
                            })
                        })
                    }
                }, a
            }(ut),
            ir = function() {
                function i(t, e) {
                    for (var r = 0; r < e.length; r++) {
                        var i = e[r];
                        i.enumerable = i.enumerable || !1, i.configurable = !0, "value" in i && (i.writable = !0), Object.defineProperty(t, i.key, i)
                    }
                }
                return function(t, e, r) {
                    return e && i(t.prototype, e), r && i(t, r), t
                }
            }();
        var nr = window.XMLHttpRequest,
            ar = "com.widevine.alpha",
            or = "com.microsoft.playready",
            sr = function sr(t, e, r) {
                var i = {
                    videoCapabilities: []
                };
                return e.forEach(function(t) {
                    i.videoCapabilities.push({
                        contentType: 'video/mp4; codecs="' + t + '"'
                    })
                }), [i]
            },
            lr = function lr(t, e, r) {
                switch (t) {
                    case ar:
                        return sr(e, r);
                    default:
                        throw Error("Unknown key-system: " + t)
                }
            },
            ur = function(n) {
                function a(t) {
                    ! function r(t, e) {
                        if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function")
                    }(this, a);
                    var e = function i(t, e) {
                        if (!t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                        return !e || "object" != typeof e && "function" != typeof e ? t : e
                    }(this, n.call(this, t, F.a.MEDIA_ATTACHED, F.a.MANIFEST_PARSED));
                    return e._widevineLicenseUrl = t.config.widevineLicenseUrl, e._licenseXhrSetup = t.config.licenseXhrSetup, e._emeEnabled = t.config.emeEnabled, e._requestMediaKeySystemAccess = t.config.requestMediaKeySystemAccessFunc, e._mediaKeysList = [], e._media = null, e._hasSetMediaKeys = !1, e._isMediaEncrypted = !1, e._requestLicenseFailureCount = 0, e
                }
                return function r(t, e) {
                    if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function, not " + typeof e);
                    t.prototype = Object.create(e && e.prototype, {
                        constructor: {
                            value: t,
                            enumerable: !1,
                            writable: !0,
                            configurable: !0
                        }
                    }), e && (Object.setPrototypeOf ? Object.setPrototypeOf(t, e) : t.__proto__ = e)
                }(a, n), a.prototype.getLicenseServerUrl = function(t) {
                    var e = void 0;
                    switch (t) {
                        case ar:
                            e = this._widevineLicenseUrl;
                            break;
                        default:
                            e = null
                    }
                    return e || (M.b.error('No license server URL configured for key-system "' + t + '"'), this.hls.trigger(F.a.ERROR, {
                        type: h.b.KEY_SYSTEM_ERROR,
                        details: h.a.KEY_SYSTEM_LICENSE_REQUEST_FAILED,
                        fatal: !0
                    })), e
                }, a.prototype._attemptKeySystemAccess = function(e, t, r) {
                    var i = this,
                        n = lr(e, t, r);
                    n ? (M.b.log("Requesting encrypted media key-system access"), this.requestMediaKeySystemAccess(e, n).then(function(t) {
                        i._onMediaKeySystemAccessObtained(e, t)
                    })["catch"](function(t) {
                        M.b.error('Failed to obtain key-system "' + e + '" access:', t)
                    })) : M.b.warn("Can not create config for key-system (maybe because platform is not supported):", e)
                }, a.prototype._onMediaKeySystemAccessObtained = function(e, t) {
                    var r = this;
                    M.b.log('Access for key-system "' + e + '" obtained');
                    var i = {
                        mediaKeys: null,
                        mediaKeysSession: null,
                        mediaKeysSessionInitialized: !1,
                        mediaKeySystemAccess: t,
                        mediaKeySystemDomain: e
                    };
                    this._mediaKeysList.push(i), t.createMediaKeys().then(function(t) {
                        i.mediaKeys = t, M.b.log('Media-keys created for key-system "' + e + '"'), r._onMediaKeysCreated()
                    })["catch"](function(t) {
                        M.b.error("Failed to create media-keys:", t)
                    })
                }, a.prototype._onMediaKeysCreated = function() {
                    var e = this;
                    this._mediaKeysList.forEach(function(t) {
                        t.mediaKeysSession || (t.mediaKeysSession = t.mediaKeys.createSession(), e._onNewMediaKeySession(t.mediaKeysSession))
                    })
                }, a.prototype._onNewMediaKeySession = function(e) {
                    var r = this;
                    M.b.log("New key-system session " + e.sessionId), e.addEventListener("message", function(t) {
                        r._onKeySessionMessage(e, t.message)
                    }, !1)
                }, a.prototype._onKeySessionMessage = function(e, t) {
                    M.b.log("Got EME message event, creating license request"), this._requestLicense(t, function(t) {
                        M.b.log("Received license data, updating key-session"), e.update(t)
                    })
                }, a.prototype._onMediaEncrypted = function(t, e) {
                    M.b.log('Media is encrypted using "' + t + '" init data type'), this._isMediaEncrypted = !0, this._mediaEncryptionInitDataType = t, this._mediaEncryptionInitData = e, this._attemptSetMediaKeys(), this._generateRequestWithPreferredKeySession()
                }, a.prototype._attemptSetMediaKeys = function() {
                    if (!this._hasSetMediaKeys) {
                        var t = this._mediaKeysList[0];
                        if (!t || !t.mediaKeys) return M.b.error("Fatal: Media is encrypted but no CDM access or no keys have been obtained yet"), void this.hls.trigger(F.a.ERROR, {
                            type: h.b.KEY_SYSTEM_ERROR,
                            details: h.a.KEY_SYSTEM_NO_KEYS,
                            fatal: !0
                        });
                        M.b.log("Setting keys for encrypted media"), this._media.setMediaKeys(t.mediaKeys), this._hasSetMediaKeys = !0
                    }
                }, a.prototype._generateRequestWithPreferredKeySession = function() {
                    var e = this,
                        t = this._mediaKeysList[0];
                    if (!t) return M.b.error("Fatal: Media is encrypted but not any key-system access has been obtained yet"), void this.hls.trigger(F.a.ERROR, {
                        type: h.b.KEY_SYSTEM_ERROR,
                        details: h.a.KEY_SYSTEM_NO_ACCESS,
                        fatal: !0
                    });
                    if (t.mediaKeysSessionInitialized) M.b.warn("Key-Session already initialized but requested again");
                    else {
                        var r = t.mediaKeysSession;
                        r || (M.b.error("Fatal: Media is encrypted but no key-session existing"), this.hls.trigger(F.a.ERROR, {
                            type: h.b.KEY_SYSTEM_ERROR,
                            details: h.a.KEY_SYSTEM_NO_SESSION,
                            fatal: !0
                        }));
                        var i = this._mediaEncryptionInitDataType,
                            n = this._mediaEncryptionInitData;
                        M.b.log('Generating key-session request for "' + i + '" init data type'), t.mediaKeysSessionInitialized = !0, r.generateRequest(i, n).then(function() {
                            M.b.debug("Key-session generation succeeded")
                        })["catch"](function(t) {
                            M.b.error("Error generating key-session request:", t), e.hls.trigger(F.a.ERROR, {
                                type: h.b.KEY_SYSTEM_ERROR,
                                details: h.a.KEY_SYSTEM_NO_SESSION,
                                fatal: !1
                            })
                        })
                    }
                }, a.prototype._createLicenseXhr = function(t, e, r) {
                    var i = new nr,
                        n = this._licenseXhrSetup;
                    try {
                        if (n) try {
                            n(i, t)
                        } catch (a) {
                            i.open("POST", t, !0), n(i, t)
                        }
                        i.readyState || i.open("POST", t, !0)
                    } catch (a) {
                        return M.b.error("Error setting up key-system license XHR", a), void this.hls.trigger(F.a.ERROR, {
                            type: h.b.KEY_SYSTEM_ERROR,
                            details: h.a.KEY_SYSTEM_LICENSE_REQUEST_FAILED,
                            fatal: !0
                        })
                    }
                    return i.responseType = "arraybuffer", i.onreadystatechange = this._onLicenseRequestReadyStageChange.bind(this, i, t, e, r), i
                }, a.prototype._onLicenseRequestReadyStageChange = function(t, e, r, i) {
                    switch (t.readyState) {
                        case 4:
                            if (200 === t.status) this._requestLicenseFailureCount = 0, M.b.log("License request succeeded"), i(t.response);
                            else {
                                if (M.b.error("License Request XHR failed (" + e + "). Status: " + t.status + " (" + t.statusText + ")"), this._requestLicenseFailureCount++, this._requestLicenseFailureCount <= 3) {
                                    var n = 3 - this._requestLicenseFailureCount + 1;
                                    return M.b.warn("Retrying license request, " + n + " attempts left"), void this._requestLicense(r, i)
                                }
                                this.hls.trigger(F.a.ERROR, {
                                    type: h.b.KEY_SYSTEM_ERROR,
                                    details: h.a.KEY_SYSTEM_LICENSE_REQUEST_FAILED,
                                    fatal: !0
                                })
                            }
                    }
                }, a.prototype._generateLicenseRequestChallenge = function(t, e) {
                    var r = void 0;
                    return t.mediaKeySystemDomain === or ? M.b.error("PlayReady is not supported (yet)") : t.mediaKeySystemDomain === ar ? r = e : M.b.error("Unsupported key-system:", t.mediaKeySystemDomain), r
                }, a.prototype._requestLicense = function(t, e) {
                    M.b.log("Requesting content license for key-system");
                    var r = this._mediaKeysList[0];
                    if (!r) return M.b.error("Fatal error: Media is encrypted but no key-system access has been obtained yet"), void this.hls.trigger(F.a.ERROR, {
                        type: h.b.KEY_SYSTEM_ERROR,
                        details: h.a.KEY_SYSTEM_NO_ACCESS,
                        fatal: !0
                    });
                    var i = this.getLicenseServerUrl(r.mediaKeySystemDomain),
                        n = this._createLicenseXhr(i, t, e);
                    M.b.log("Sending license request to URL: " + i), n.send(this._generateLicenseRequestChallenge(r, t))
                }, a.prototype.onMediaAttached = function(t) {
                    var e = this;
                    if (this._emeEnabled) {
                        var r = t.media;
                        (this._media = r).addEventListener("encrypted", function(t) {
                            e._onMediaEncrypted(t.initDataType, t.initData)
                        })
                    }
                }, a.prototype.onManifestParsed = function(t) {
                    if (this._emeEnabled) {
                        var e = t.levels.map(function(t) {
                                return t.audioCodec
                            }),
                            r = t.levels.map(function(t) {
                                return t.videoCodec
                            });
                        this._attemptKeySystemAccess(ar, e, r)
                    }
                }, ir(a, [{
                    key: "requestMediaKeySystemAccess",
                    get: function() {
                        if (!this._requestMediaKeySystemAccess) throw new Error("No requestMediaKeySystemAccess function configured");
                        return this._requestMediaKeySystemAccess
                    }
                }]), a
            }(l),
            dr = "undefined" != typeof window && window.navigator && window.navigator.requestMediaKeySystemAccess ? window.navigator.requestMediaKeySystemAccess.bind(window.navigator) : null,
            cr = {
                autoStartLoad: !0,
                startPosition: -1,
                defaultAudioCodec: undefined,
                debug: !1,
                capLevelOnFPSDrop: !1,
                capLevelToPlayerSize: !1,
                initialLiveManifestSize: 1,
                maxBufferLength: 30,
                maxBufferSize: 6e7,
                maxBufferHole: .5,
                lowBufferWatchdogPeriod: .5,
                highBufferWatchdogPeriod: 3,
                nudgeOffset: .1,
                nudgeMaxRetry: 3,
                maxFragLookUpTolerance: .25,
                liveSyncDurationCount: 3,
                liveMaxLatencyDurationCount: Infinity,
                liveSyncDuration: undefined,
                liveMaxLatencyDuration: undefined,
                liveDurationInfinity: !1,
                maxMaxBufferLength: 600,
                enableWorker: !0,
                enableSoftwareAES: !0,
                manifestLoadingTimeOut: 1e4,
                manifestLoadingMaxRetry: 1,
                manifestLoadingRetryDelay: 1e3,
                manifestLoadingMaxRetryTimeout: 64e3,
                startLevel: undefined,
                levelLoadingTimeOut: 1e4,
                levelLoadingMaxRetry: 4,
                levelLoadingRetryDelay: 1e3,
                levelLoadingMaxRetryTimeout: 64e3,
                fragLoadingTimeOut: 2e4,
                fragLoadingMaxRetry: 6,
                fragLoadingRetryDelay: 1e3,
                fragLoadingMaxRetryTimeout: 64e3,
                startFragPrefetch: !1,
                fpsDroppedMonitoringPeriod: 5e3,
                fpsDroppedMonitoringThreshold: .2,
                appendErrorMaxRetry: 3,
                loader: qt,
                fLoader: undefined,
                pLoader: undefined,
                xhrSetup: undefined,
                licenseXhrSetup: undefined,
                abrController: Ut,
                bufferController: Bt,
                capLevelController: Kt,
                fpsController: Ht,
                stretchShortVideoTrack: !1,
                maxAudioFramesDrift: 1,
                forceKeyFrameOnDiscontinuity: !0,
                abrEwmaFastLive: 3,
                abrEwmaSlowLive: 9,
                abrEwmaFastVoD: 3,
                abrEwmaSlowVoD: 9,
                abrEwmaDefaultEstimate: 5e5,
                abrBandWidthFactor: .95,
                abrBandWidthUpFactor: .7,
                abrMaxWithRealBitrate: !1,
                maxStarvationDelay: 4,
                maxLoadingDelay: 4,
                minAutoBitrate: 0,
                emeEnabled: !1,
                widevineLicenseUrl: undefined,
                requestMediaKeySystemAccessFunc: dr
            };
        cr.subtitleStreamController = rr, cr.subtitleTrackController = ze, cr.timelineController = We, cr.cueHandler = i, cr.enableCEA708Captions = !0, cr.enableWebVTT = !0, cr.captionsTextTrack1Label = "English", cr.captionsTextTrack1LanguageCode = "en", cr.captionsTextTrack2Label = "Spanish", cr.captionsTextTrack2LanguageCode = "es", cr.audioStreamController = he, cr.audioTrackController = zt, cr.emeController = ur;
        var hr = function() {
            function i(t, e) {
                for (var r = 0; r < e.length; r++) {
                    var i = e[r];
                    i.enumerable = i.enumerable || !1, i.configurable = !0, "value" in i && (i.writable = !0), Object.defineProperty(t, i.key, i)
                }
            }
            return function(t, e, r) {
                return e && i(t.prototype, e), r && i(t, r), t
            }
        }();
        r(14);
        var fr = function() {
            function S() {
                var e = this,
                    t = 0 < arguments.length && arguments[0] !== undefined ? arguments[0] : {};
                ! function E(t, e) {
                    if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function")
                }(this, S);
                var r = S.DefaultConfig;
                if ((t.liveSyncDurationCount || t.liveMaxLatencyDurationCount) && (t.liveSyncDuration || t.liveMaxLatencyDuration)) throw new Error("Illegal hls.js config: don't mix up liveSyncDurationCount/liveMaxLatencyDurationCount and liveSyncDuration/liveMaxLatencyDuration");
                for (var i in r) i in t || (t[i] = r[i]);
                if (t.liveMaxLatencyDurationCount !== undefined && t.liveMaxLatencyDurationCount <= t.liveSyncDurationCount) throw new Error('Illegal hls.js config: "liveMaxLatencyDurationCount" must be gt "liveSyncDurationCount"');
                if (t.liveMaxLatencyDuration !== undefined && (t.liveMaxLatencyDuration <= t.liveSyncDuration || t.liveSyncDuration === undefined)) throw new Error('Illegal hls.js config: "liveMaxLatencyDuration" must be gt "liveSyncDuration"');
                Object(M.a)(t.debug), this.config = t, this._autoLevelCapping = -1;
                var n = this.observer = new q.a;
                n.trigger = function(t) {
                    for (var e = arguments.length, r = Array(1 < e ? e - 1 : 0), i = 1; i < e; i++) r[i - 1] = arguments[i];
                    n.emit.apply(n, [t, t].concat(r))
                }, n.off = function(t) {
                    for (var e = arguments.length, r = Array(1 < e ? e - 1 : 0), i = 1; i < e; i++) r[i - 1] = arguments[i];
                    n.removeListener.apply(n, [t].concat(r))
                }, this.on = n.on.bind(n), this.off = n.off.bind(n), this.once = n.once.bind(n), this.trigger = n.trigger.bind(n);
                var a = this.abrController = new t.abrController(this),
                    o = new t.bufferController(this),
                    s = new t.capLevelController(this),
                    l = new t.fpsController(this),
                    u = new A(this),
                    d = new w(this),
                    c = new L(this),
                    h = new It(this),
                    f = this.levelController = new kt(this),
                    p = new H(this),
                    g = [f, this.streamController = new Rt(this, p)],
                    v = t.audioStreamController;
                v && g.push(new v(this, p)), this.networkControllers = g;
                var y = [u, d, c, a, o, s, l, h, p];
                if (v = t.audioTrackController) {
                    var m = new v(this);
                    this.audioTrackController = m, y.push(m)
                }
                if (v = t.subtitleTrackController) {
                    var b = new v(this);
                    this.subtitleTrackController = b, y.push(b)
                }
                if (v = t.emeController) {
                    var T = new v(this);
                    this.emeController = T, y.push(T)
                } [t.subtitleStreamController, t.timelineController].forEach(function(t) {
                    t && y.push(new t(e))
                }), this.coreComponents = y
            }
            return S.isSupported = function() {
                return function n() {
                    var t = $(),
                        e = window.SourceBuffer || window.WebKitSourceBuffer,
                        r = t && "function" == typeof t.isTypeSupported && t.isTypeSupported('video/mp4; codecs="avc1.42E01E,mp4a.40.2"'),
                        i = !e || e.prototype && "function" == typeof e.prototype.appendBuffer && "function" == typeof e.prototype.remove;
                    return !!r && !!i
                }()
            }, hr(S, null, [{
                key: "version",
                get: function() {
                    return "0.11.0"
                }
            }, {
                key: "Events",
                get: function() {
                    return F.a
                }
            }, {
                key: "ErrorTypes",
                get: function() {
                    return h.b
                }
            }, {
                key: "ErrorDetails",
                get: function() {
                    return h.a
                }
            }, {
                key: "DefaultConfig",
                get: function() {
                    return S.defaultConfig ? S.defaultConfig : cr
                },
                set: function(t) {
                    S.defaultConfig = t
                }
            }]), S.prototype.destroy = function() {
                M.b.log("destroy"), this.trigger(F.a.DESTROYING), this.detachMedia(), this.coreComponents.concat(this.networkControllers).forEach(function(t) {
                    t.destroy()
                }), this.url = null, this.observer.removeAllListeners(), this._autoLevelCapping = -1
            }, S.prototype.attachMedia = function(t) {
                M.b.log("attachMedia"), this.media = t, this.trigger(F.a.MEDIA_ATTACHING, {
                    media: t
                })
            }, S.prototype.detachMedia = function() {
                M.b.log("detachMedia"), this.trigger(F.a.MEDIA_DETACHING), this.media = null
            }, S.prototype.loadSource = function(t) {
                t = a.a.buildAbsoluteURL(window.location.href, t, {
                    alwaysNormalize: !0
                }), M.b.log("loadSource:" + t), this.url = t, this.trigger(F.a.MANIFEST_LOADING, {
                    url: t
                })
            }, S.prototype.startLoad = function() {
                var e = 0 < arguments.length && arguments[0] !== undefined ? arguments[0] : -1;
                M.b.log("startLoad(" + e + ")"), this.networkControllers.forEach(function(t) {
                    t.startLoad(e)
                })
            }, S.prototype.stopLoad = function() {
                M.b.log("stopLoad"), this.networkControllers.forEach(function(t) {
                    t.stopLoad()
                })
            }, S.prototype.swapAudioCodec = function() {
                M.b.log("swapAudioCodec"), this.streamController.swapAudioCodec()
            }, S.prototype.recoverMediaError = function() {
                M.b.log("recoverMediaError");
                var t = this.media;
                this.detachMedia(), this.attachMedia(t)
            }, hr(S, [{
                key: "levels",
                get: function() {
                    return this.levelController.levels
                }
            }, {
                key: "currentLevel",
                get: function() {
                    return this.streamController.currentLevel
                },
                set: function(t) {
                    M.b.log("set currentLevel:" + t), this.loadLevel = t, this.streamController.immediateLevelSwitch()
                }
            }, {
                key: "nextLevel",
                get: function() {
                    return this.streamController.nextLevel
                },
                set: function(t) {
                    M.b.log("set nextLevel:" + t), this.levelController.manualLevel = t, this.streamController.nextLevelSwitch()
                }
            }, {
                key: "loadLevel",
                get: function() {
                    return this.levelController.level
                },
                set: function(t) {
                    M.b.log("set loadLevel:" + t), this.levelController.manualLevel = t
                }
            }, {
                key: "nextLoadLevel",
                get: function() {
                    return this.levelController.nextLoadLevel
                },
                set: function(t) {
                    this.levelController.nextLoadLevel = t
                }
            }, {
                key: "firstLevel",
                get: function() {
                    return Math.max(this.levelController.firstLevel, this.minAutoLevel)
                },
                set: function(t) {
                    M.b.log("set firstLevel:" + t), this.levelController.firstLevel = t
                }
            }, {
                key: "startLevel",
                get: function() {
                    return this.levelController.startLevel
                },
                set: function(t) {
                    M.b.log("set startLevel:" + t); - 1 !== t && (t = Math.max(t, this.minAutoLevel)), this.levelController.startLevel = t
                }
            }, {
                key: "autoLevelCapping",
                get: function() {
                    return this._autoLevelCapping
                },
                set: function(t) {
                    M.b.log("set autoLevelCapping:" + t), this._autoLevelCapping = t
                }
            }, {
                key: "autoLevelEnabled",
                get: function() {
                    return -1 === this.levelController.manualLevel
                }
            }, {
                key: "manualLevel",
                get: function() {
                    return this.levelController.manualLevel
                }
            }, {
                key: "minAutoLevel",
                get: function() {
                    for (var t = this.levels, e = this.config.minAutoBitrate, r = t ? t.length : 0, i = 0; i < r; i++) {
                        if (e < (t[i].realBitrate ? Math.max(t[i].realBitrate, t[i].bitrate) : t[i].bitrate)) return i
                    }
                    return 0
                }
            }, {
                key: "maxAutoLevel",
                get: function() {
                    var t = this.levels,
                        e = this.autoLevelCapping;
                    return -1 === e && t && t.length ? t.length - 1 : e
                }
            }, {
                key: "nextAutoLevel",
                get: function() {
                    return Math.min(Math.max(this.abrController.nextAutoLevel, this.minAutoLevel), this.maxAutoLevel)
                },
                set: function(t) {
                    this.abrController.nextAutoLevel = Math.max(this.minAutoLevel, t)
                }
            }, {
                key: "audioTracks",
                get: function() {
                    var t = this.audioTrackController;
                    return t ? t.audioTracks : []
                }
            }, {
                key: "audioTrack",
                get: function() {
                    var t = this.audioTrackController;
                    return t ? t.audioTrack : -1
                },
                set: function(t) {
                    var e = this.audioTrackController;
                    e && (e.audioTrack = t)
                }
            }, {
                key: "liveSyncPosition",
                get: function() {
                    return this.streamController.liveSyncPosition
                }
            }, {
                key: "subtitleTracks",
                get: function() {
                    var t = this.subtitleTrackController;
                    return t ? t.subtitleTracks : []
                }
            }, {
                key: "subtitleTrack",
                get: function() {
                    var t = this.subtitleTrackController;
                    return t ? t.subtitleTrack : -1
                },
                set: function(t) {
                    var e = this.subtitleTrackController;
                    e && (e.subtitleTrack = t)
                }
            }, {
                key: "subtitleDisplay",
                get: function() {
                    var t = this.subtitleTrackController;
                    return !!t && t.subtitleDisplay
                },
                set: function(t) {
                    var e = this.subtitleTrackController;
                    e && (e.subtitleDisplay = t)
                }
            }]), S
        }();
        e["default"] = fr
    }, function(t, e, u) {
        function l(r) {
            var i = {};

            function n(t) {
                if (i[t]) return i[t].exports;
                var e = i[t] = {
                    i: t,
                    l: !1,
                    exports: {}
                };
                return r[t].call(e.exports, e, e.exports, n), e.l = !0, e.exports
            }
            n.m = r, n.c = i, n.i = function(t) {
                return t
            }, n.d = function(t, e, r) {
                n.o(t, e) || Object.defineProperty(t, e, {
                    configurable: !1,
                    enumerable: !0,
                    get: r
                })
            }, n.n = function(t) {
                var e = t && t.__esModule ? function() {
                    return t["default"]
                } : function() {
                    return t
                };
                return n.d(e, "a", e), e
            }, n.o = function(t, e) {
                return Object.prototype.hasOwnProperty.call(t, e)
            }, n.p = "/", n.oe = function(t) {
                throw console.error(t), t
            };
            var t = n(n.s = ENTRY_MODULE);
            return t["default"] || t
        }
        var d = "[\\.|\\-|\\+|\\w|/|@]+",
            c = "\\((/\\*.*?\\*/)?s?.*?(" + d + ").*?\\)";

        function h(t) {
            return (t + "").replace(/[.?*+^$[\]\\(){}|-]/g, "\\$&")
        }

        function f(t, e, r) {
            var i = {};
            i[r] = [];
            var n = e.toString(),
                a = n.match(/^function\s?\(\w+,\s*\w+,\s*(\w+)\)/);
            if (!a) return i;
            for (var o, s = a[1], l = new RegExp("(\\\\n|\\W)" + h(s) + c, "g"); o = l.exec(n);) "dll-reference" !== o[3] && i[r].push(o[3]);
            for (l = new RegExp("\\(" + h(s) + '\\("(dll-reference\\s(' + d + '))"\\)\\)' + c, "g"); o = l.exec(n);) t[o[2]] || (i[r].push(o[1]), t[o[2]] = u(o[1]).m), i[o[2]] = i[o[2]] || [], i[o[2]].push(o[4]);
            return i
        }

        function p(r) {
            return Object.keys(r).reduce(function(t, e) {
                return t || 0 < r[e].length
            }, !1)
        }
        t.exports = function(t, e) {
            e = e || {};
            var r = {
                    main: u.m
                },
                i = e.all ? {
                    main: Object.keys(r)
                } : function h(t, e) {
                    for (var r = {
                            main: [e]
                        }, i = {
                            main: []
                        }, n = {
                            main: {}
                        }; p(r);)
                        for (var a = Object.keys(r), o = 0; o < a.length; o++) {
                            var s = a[o],
                                l = r[s].pop();
                            if (n[s] = n[s] || {}, !n[s][l] && t[s][l]) {
                                n[s][l] = !0, i[s] = i[s] || [], i[s].push(l);
                                for (var u = f(t, t[s][l], s), d = Object.keys(u), c = 0; c < d.length; c++) r[d[c]] = r[d[c]] || [], r[d[c]] = r[d[c]].concat(u[d[c]])
                            }
                        }
                    return i
                }(r, t),
                n = "";
            Object.keys(i).filter(function(t) {
                return "main" !== t
            }).forEach(function(e) {
                for (var t = 0; i[e][t];) t++;
                i[e].push(t), r[e][t] = "(function(module, exports, __webpack_require__) { module.exports = __webpack_require__; })", n = n + "var " + e + " = (" + l.toString().replace("ENTRY_MODULE", JSON.stringify(t)) + ")({" + i[e].map(function(t) {
                    return JSON.stringify(t) + ": " + r[e][t].toString()
                }).join(",") + "});\n"
            }), n = n + "(" + l.toString().replace("ENTRY_MODULE", JSON.stringify(t)) + ")({" + i.main.map(function(t) {
                return JSON.stringify(t) + ": " + r.main[t].toString()
            }).join(",") + "})(self);";
            var a = new window.Blob([n], {
                type: "text/javascript"
            });
            if (e.bare) return a;
            var o = (window.URL || window.webkitURL || window.mozURL || window.msURL).createObjectURL(a),
                s = new window.Worker(o);
            return s.objectURL = o, s
        }
    }, function(t, e, r) {
        "use strict";
        Object.defineProperty(e, "__esModule", {
            value: !0
        });
        var s = r(10),
            i = r(1),
            l = r(0),
            n = r(7),
            u = r.n(n),
            d = function d(n) {
                var a = new u.a;
                a.trigger = function(t) {
                    for (var e = arguments.length, r = Array(1 < e ? e - 1 : 0), i = 1; i < e; i++) r[i - 1] = arguments[i];
                    a.emit.apply(a, [t, t].concat(r))
                }, a.off = function(t) {
                    for (var e = arguments.length, r = Array(1 < e ? e - 1 : 0), i = 1; i < e; i++) r[i - 1] = arguments[i];
                    a.removeListener.apply(a, [t].concat(r))
                };
                var o = function o(t, e) {
                    n.postMessage({
                        event: t,
                        data: e
                    })
                };
                n.addEventListener("message", function(t) {
                    var e = t.data;
                    switch (e.cmd) {
                        case "init":
                            var r = JSON.parse(e.config);
                            n.demuxer = new s.a(a, e.typeSupported, r, e.vendor);
                            try {
                                Object(l.a)(!0 === r.debug)
                            } catch (i) {
                                console.warn("demuxerWorker: unable to enable logs")
                            }
                            o("init", null);
                            break;
                        case "demux":
                            n.demuxer.push(e.data, e.decryptdata, e.initSegment, e.audioCodec, e.videoCodec, e.timeOffset, e.discontinuity, e.trackSwitch, e.contiguous, e.duration, e.accurateTimeOffset, e.defaultInitPTS)
                    }
                }), a.on(i.a.FRAG_DECRYPTED, o), a.on(i.a.FRAG_PARSING_INIT_SEGMENT, o), a.on(i.a.FRAG_PARSED, o), a.on(i.a.ERROR, o), a.on(i.a.FRAG_PARSING_METADATA, o), a.on(i.a.FRAG_PARSING_USERDATA, o), a.on(i.a.INIT_PTS_FOUND, o), a.on(i.a.FRAG_PARSING_DATA, function(t, e) {
                    var r = [],
                        i = {
                            event: t,
                            data: e
                        };
                    e.data1 && (i.data1 = e.data1.buffer, r.push(e.data1.buffer), delete e.data1), e.data2 && (i.data2 = e.data2.buffer, r.push(e.data2.buffer), delete e.data2), n.postMessage(i, r)
                })
            };
        e["default"] = d
    }, function(t, e) {
        String.prototype.endsWith || function() {
            "use strict";
            var t = function() {
                    try {
                        var t = {},
                            e = Object.defineProperty,
                            r = e(t, t, t) && e
                    } catch (i) {}
                    return r
                }(),
                u = {}.toString,
                e = function(t) {
                    if (null == this) throw TypeError();
                    var e = String(this);
                    if (t && "[object RegExp]" == u.call(t)) throw TypeError();
                    var r = e.length,
                        i = String(t),
                        n = i.length,
                        a = r;
                    if (1 < arguments.length) {
                        var o = arguments[1];
                        o !== undefined && (a = o ? Number(o) : 0) != a && (a = 0)
                    }
                    var s = Math.min(Math.max(a, 0), r) - n;
                    if (s < 0) return !1;
                    for (var l = -1; ++l < n;)
                        if (e.charCodeAt(s + l) != i.charCodeAt(l)) return !1;
                    return !0
                };
            t ? t(String.prototype, "endsWith", {
                value: e,
                configurable: !0,
                writable: !0
            }) : String.prototype.endsWith = e
        }()
    }])["default"]
});
! function(t) {
    var e = {};

    function i(n) {
        if (e[n]) return e[n].exports;
        var o = e[n] = {
            i: n,
            l: !1,
            exports: {}
        };
        return t[n].call(o.exports, o, o.exports, i), o.l = !0, o.exports
    }
    i.m = t, i.c = e, i.d = function(t, e, n) {
        i.o(t, e) || Object.defineProperty(t, e, {
            enumerable: !0,
            get: n
        })
    }, i.r = function(t) {
        "undefined" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(t, Symbol.toStringTag, {
            value: "Module"
        }), Object.defineProperty(t, "__esModule", {
            value: !0
        })
    }, i.t = function(t, e) {
        if (1 & e && (t = i(t)), 8 & e) return t;
        if (4 & e && "object" == typeof t && t && t.__esModule) return t;
        var n = Object.create(null);
        if (i.r(n), Object.defineProperty(n, "default", {
                enumerable: !0,
                value: t
            }), 2 & e && "string" != typeof t)
            for (var o in t) i.d(n, o, function(e) {
                return t[e]
            }.bind(null, o));
        return n
    }, i.n = function(t) {
        var e = t && t.__esModule ? function() {
            return t["default"]
        } : function() {
            return t
        };
        return i.d(e, "a", e), e
    }, i.o = function(t, e) {
        return Object.prototype.hasOwnProperty.call(t, e)
    }, i.p = "/js/", i(i.s = 4)
}([function(t, e, i) {
    "use strict";
    Object.defineProperty(e, "__esModule", {
        value: !0
    });
    var n = function() {
        function t() {}
        return t.logDebug = function(t, e, i) {
            !0 === this.debug && (void 0 === i && (i = ""), console.log("selector[%s] -> method[%s] %s", e, t, i))
        }, t._pxToNum = function(t) {
            return parseFloat(t.replace("px", ""))
        }, t.getElement = function(t) {
            this.logDebug("getElement", t);
            var e = document.querySelector(t);
            return e || undefined
        }, t.onDocumentReady = function(t) {
            document.attachEvent ? document.attachEvent("onreadystatechange", function() {
                if ("complete" === document.readyState) return t()
            }) : document.addEventListener("DOMContentLoaded", t)
        }, t.hide = function(t) {
            this.logDebug("hide", t);
            var e = t;
            "object" != typeof e && (e = document.querySelector(t)), e && (e.style.display = "none")
        }, t.show = function(t) {
            this.logDebug("show", t);
            var e = t;
            "object" != typeof e && (e = document.querySelector(t)), e && (e.style.display = "block")
        }, t.empty = function(t) {
            this.logDebug("empty", t);
            var e = t;
            "object" != typeof e && (e = document.querySelector(t)), e && (e.innerHTML = "")
        }, t.remove = function(t) {
            this.logDebug("remove", t);
            var e = t;
            "object" != typeof e && (e = document.querySelector(t)), e && e.parentNode.removeChild(e)
        }, t.html = function(t, e) {
            this.logDebug("html", t);
            var i = t;
            "object" != typeof i && (i = document.querySelector(t)), i && (i.innerHTML = e)
        }, t.getHtml = function(t) {
            this.logDebug("getHtml", t);
            var e = t;
            return "object" != typeof e && (e = document.querySelector(t)), !!e && e.innerHTML
        }, t.text = function(t, e) {
            this.logDebug("text", t);
            var i = t;
            "object" != typeof i && (i = document.querySelector(t)), i && (i.textContent = e)
        }, t.getText = function(t) {
            this.logDebug("getText", t);
            var e = t;
            return "object" != typeof e && (e = document.querySelector(t)), !!e && e.textContent
        }, t.append = function(t, e) {
            this.logDebug("append", t);
            var i = t;
            "object" != typeof i && (i = document.querySelector(t)), i && ("object" == typeof e ? i.appendChild(e) : i.innerHTML += e)
        }, t.setAttr = function(t, e, i) {
            this.logDebug("setAttr", t, "attr[" + e + "] value[" + i + "]");
            var n = t;
            "object" != typeof n && (n = document.querySelector(t)), n && ("checked" == e ? n.checked = i : n.setAttribute(e, i))
        }, t.getAttr = function(t, e) {
            this.logDebug("getAttr", t, "attr[" + e + "]");
            var i = t;
            if ("object" != typeof i && (i = document.querySelector(t)), i) return i.getAttribute(e)
        }, t.removeAttr = function(t, e) {
            this.logDebug("removeAttr", t, "attr[" + e + "]");
            var i = t;
            "object" != typeof i && (i = document.querySelector(t)), i && i.removeAttribute(e)
        }, t.scrollToTop = function() {
            window.scrollTo(document.body, 0)
        }, t.addClass = function(t, e) {
            this.logDebug("addClass", t, "className[" + e + "]");
            var i = t;
            "object" != typeof i && (i = document.querySelector(t)), i.classList ? i.classList.add(e) : i.className += " " + e
        }, t.removeClass = function(t, e) {
            this.logDebug("removeClass", t, "className[" + e + "]");
            var i = t;
            "object" != typeof i && (i = document.querySelector(t)), i.classList ? i.classList.remove(e) : i.className = i.className.replace(new RegExp("(^|\\b)" + e.split(" ").join("|") + "(\\b|$)", "gi"), " ")
        }, t.hasClass = function(t, e) {
            this.logDebug("hasClass", t, "className[" + e + "]");
            var i = t;
            if ("object" != typeof i && (i = document.querySelector(t)), i) return i.classList ? i.classList.contains(e) : new RegExp("(^| )" + e + "( |$)", "gi").test(i.className)
        }, t.setCss = function(t, e, i) {
            this.logDebug("setCss", t, "prop[" + e + "] value[" + i + "]");
            var n = t;
            "object" != typeof n && (n = document.querySelector(t)), n && (n.style[e] = i)
        }, t.getCss = function(t, e) {
            return this.logDebug("getCss", t, "prop[" + e + "]"), window.getComputedStyle(document.querySelector(t))[e]
        }, t.onEvent = function(t, e, i) {
            this.logDebug("onEvent", t, "eventName[" + e + "]");
            var n = t;
            if ("object" != typeof n)
                for (var o = document.querySelectorAll(t), s = 0; s < o.length; s++) this._onEvent(o[s], e, i);
            else if ("undefined" == typeof n.length || "[object Window]" == n.toString() || "[object HTMLDocument]" == n.toString()) this._onEvent(n, e, i);
            else
                for (s = 0; s < n.length; s++) this._onEvent(n[s], e, i)
        }, t._onEvent = function(t, e, i) {
            if (t) {
                if ("undefined" == typeof t.events && (t.events = {}), "undefined" != typeof t.events[e]) {
                    for (var n = t.events[e], o = [], s = 0; s < n.length; s++) n[s] == i ? t.detachEvent ? t.detachEvent("on" + e, n[s]) : t.removeEventListener(e, n[s]) : o.push(n[s]);
                    t.events[e] = o, t.events[e].push(i)
                } else t.events[e] = [], t.events[e].push(i);
                t.attachEvent ? t.attachEvent("on" + e, i) : t.addEventListener(e, i)
            }
        }, t.onMultiEvent = function(t, e, i) {
            this.logDebug("onMultiEvent", t, "eventsNames[" + e + "]");
            for (var n = e.split(","), o = 0; o < n.length; o++) this.onEvent(t, n[o], i)
        }, t.offMultiEvent = function(t, e) {
            for (var i = e.split(","), n = 0; n < i.length; n++) this.offEvent(t, i[n])
        }, t.offEvent = function(t, e, i) {
            this.logDebug("offEvent", t, "eventName[" + e + "]");
            var n = t;
            if ("object" != typeof n && (n = document.querySelector(t)), n && "undefined" != typeof n.events && "undefined" != typeof n.events[e]) {
                for (var o = n.events[e], s = 0; s < o.length; s++) n.detachEvent ? n.detachEvent("on" + e, o[s]) : n.removeEventListener(e, o[s]);
                n.events[e] = []
            }
        }, t.triggerEvent = function(t, e) {
            this.logDebug("offEvent", t, "eventName[" + e + "]");
            var i, n = t;
            ("object" != typeof n && (n = document.querySelector(t)), document.createEvent) ? ((i = document.createEvent("HTMLEvents")).initEvent(e, !1, !0), n.dispatchEvent(i)) : ((i = document.createEventObject()).eventType = e, n.fireEvent("on" + e, i))
        }, t.triggerResize = function(t) {
            if (this.logDebug("triggerResize", t), document.createEvent) {
                (e = document.createEvent("HTMLEvents")).initEvent("resize", !1, !0), window.dispatchEvent(e)
            } else {
                var e = document.createEventObject();
                document.documentElement.fireEvent("onresize", e)
            }
        }, t.getWidth = function(t) {
            this.logDebug("getWidth", t);
            var e = t;
            if ("object" != typeof e && (e = document.querySelector(t)), e) {
                var i = getComputedStyle(e, null),
                    n = this._pxToNum(i.width);
                return n -= this._pxToNum(i.paddingLeft), n -= this._pxToNum(i.paddingRight), n -= this._pxToNum(i.marginRight), n -= this._pxToNum(i.marginLeft), n -= this._pxToNum(i.borderLeftWidth), n -= this._pxToNum(i.borderRightWidth)
            }
        }, t.getHeight = function(t) {
            this.logDebug("getHeight", t);
            var e = t;
            if ("object" != typeof e && (e = document.querySelector(t)), e) {
                var i = getComputedStyle(e, null),
                    n = this._pxToNum(i.height);
                return n -= this._pxToNum(i.paddingTop), n -= this._pxToNum(i.paddingBottom), n -= this._pxToNum(i.marginTop), n -= this._pxToNum(i.marginBottom), n -= this._pxToNum(i.borderTopWidth), n -= this._pxToNum(i.borderBottomWidth)
            }
        }, t.setWidth = function(t, e) {
            this.logDebug("setWidth", t, "value[" + e + "]"), "auto" != (e += "") && -1 == e.indexOf("%") && (e += "px");
            var i = t;
            "object" != typeof i && (i = document.querySelector(t)), i && (i.style.width = e)
        }, t.setHeight = function(t, e) {
            this.logDebug("setHeight", t, "value[" + e + "]");
            var i = t;
            "object" != typeof i && (i = document.querySelector(t)), "auto" != (e += "") && -1 == e.indexOf("%") && (e += "px"), i && (i.style.height = e)
        }, t.deepExtend = function(t, e) {
            return this.logDebug("deepExtend", ""), this._extend("overwriteValues_True", "overwriteObjects_False", t, e)
        }, t._extend = function() {
            for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
            for (var i = {}, n = !1, o = !1, s = 0; s < arguments.length; s++) "object" != typeof arguments[s] ? "overwriteValues_True" == arguments[s] ? n = !0 : "overwriteValues_False" == arguments[s] ? n = !1 : "overwriteObjects_True" == arguments[s] ? o = !0 : "overwriteObjects_False" == arguments[s] && (o = !1) : l(arguments[s], i, n, o);

            function l(t, e, i, n) {
                for (var o in t) "object" == typeof t[o] ? (("undefined" == typeof e[o] || n) && (e[o] = t[o]), l(t[o], e[o], i, n)) : ("undefined" == typeof e[o] || i) && (e[o] = t[o]);
                return e
            }
            return i
        }, t.each = function(t, e) {
            this.logDebug("each", "");
            var i = t;
            "object" != typeof i && (i = document.querySelectorAll(t)), Array.prototype.forEach.call(i, e)
        }, t.setVal = function(t, e) {
            this.logDebug("setVal", t, "value[" + e + "]");
            var i = t;
            "object" != typeof i && (i = document.querySelector(t)), i && (i.value = e)
        }, t.getVal = function(t) {
            this.logDebug("getVal", t);
            var e = t;
            return "object" != typeof e && (e = document.querySelector(t)), e ? e.value : void 0
        }, t.getParent = function(t) {
            this.logDebug("getParent", t);
            var e = t;
            if ("object" != typeof e && (e = document.querySelector(t)), e) return e.parentNode
        }, t.find = function(t, e) {
            this.logDebug("find", t, "selector2[" + e + "]");
            var i = t;
            if ("object" != typeof i && (i = document.querySelector(t)), i) return i.querySelector(e)
        }, t.findAll = function(t, e) {
            this.logDebug("findAll", t, "selector2[" + e + "]");
            var i = t;
            if ("object" != typeof i && (i = document.querySelector(t)), i) return i.querySelectorAll(e)
        }, t.fadeIn = function(t, e) {
            this.logDebug("fadeIn", t);
            var i = t;
            if ("object" != typeof i && (i = document.querySelector(t)), i) {
                i.style.opacity = 0, i.style.display = "block";
                var n = +(new Date).getTime(),
                    o = function() {
                        var t = +i.style.opacity + ((new Date).getTime() - n) / 400;
                        t > 1 && (t = 1), i.style.opacity = t, n = (new Date).getTime(), +i.style.opacity < 1 && (window.requestAnimationFrame && requestAnimationFrame(o) || setTimeout(o, 16)), 1 == t && "function" == typeof e && e()
                    };
                o()
            }
        }, t.fadeOut = function(t) {
            this.logDebug("fadeOut", t);
            var e = t;
            if ("object" != typeof e && (e = document.querySelector(t)), e) {
                e.style.opacity = 1;
                var i = +(new Date).getTime(),
                    n = function() {
                        var t = +e.style.opacity - ((new Date).getTime() - i) / 400;
                        t < 0 && (t = 0), e.style.opacity = t, i = (new Date).getTime(), +e.style.opacity > 0 ? window.requestAnimationFrame && requestAnimationFrame(n) || setTimeout(n, 16) : e.style.display = "none"
                    };
                n()
            }
        }, t.offset = function(t) {
            this.logDebug("offset", t);
            var e = t;
            "object" != typeof e && (e = document.querySelector(t));
            var i = e.getBoundingClientRect();
            return {
                top: i.top + document.body.scrollTop,
                left: i.left + document.body.scrollLeft
            }
        }, t.closest = function(t, e) {
            this.logDebug("closest", t, "parentSelector[" + e + "]");
            var i = t;
            return "object" != typeof i && (i = document.querySelector(t)), i.closest(e)
        }, t.isVisible = function(t) {
            this.logDebug("isVisible", t);
            var e = t;
            return "object" != typeof e && (e = document.querySelector(t)), "block" == e.style.display
        }, t.createElement = function(t) {
            this.logDebug("createElement", "");
            var e = document.createElement("div");
            return e.innerHTML = t.trim(), e.firstChild
        }, t.ajaxRequest = function(t) {
            this.logDebug("ajaxRequest", "");
            var e = new XMLHttpRequest;
            e.onreadystatechange = function() {
                e.readyState < 4 || (200 !== e.status && "function" == typeof t.error && t.error(e.statusText), 4 === e.readyState && "function" == typeof t.success && t.success(e.responseText))
            }, e.open("GET", t.url, !0), e.send("")
        }, t.isChecked = function(t) {
            this.logDebug("isChecked", t);
            var e = t;
            if ("object" != typeof e && (e = document.querySelector(t)), e) return e.checked
        }, t.checkMediaSource = function() {
            return "undefined" != typeof document.createElement("video").canPlayType
        }, t.isTouchDevice = function() {
            return "ontouchstart" in document.documentElement
        }, t.getRootDirectory = function() {
            for (var t = document.getElementsByTagName("script"), e = "", i = 0; i < t.length; i++) {
                var n = t[i].src;
                if ("" != n)
                    if ("SowerTecPlayer.min.js" == n.substring(n.lastIndexOf("/") + 1)) {
                        var o = "SowerTecPlayer.min.js".length,
                            s = n.length;
                        e = n.substring(0, s - o);
                        break
                    }
            }
            return e
        }, t.debug = !1, t
    }();
    e.Utils = n, window.Utils = n
}, function(t, e, i) {
    "use strict";
    Object.defineProperty(e, "__esModule", {
        value: !0
    });
    var n = function() {
        function t() {}
        return t.ifObjectExist = function(t) {
            return void 0 !== t && null !== t
        }, t.parseBoolean = function(t) {
            if (null !== t) switch (String(t).toLowerCase()) {
                case "true":
                case "yes":
                case "1":
                    return !0;
                case "false":
                case "no":
                case "0":
                    return !1;
                default:
                    return undefined
            }
            return !1
        }, t.isEmpty = function(t) {
            return void 0 === t || null === t || "" === t
        }, t.isDefined = function(t) {
            return "undefined" != typeof window[t]
        }, t.isPhone = function() {
            return this.isIphone() || this.isAndroid() || this.isWindowsPhone()
        }, t.isAndroid = function() {
            return navigator.userAgent.toLowerCase().indexOf("android") > -1
        }, t.isIphone = function() {
            return navigator.userAgent.match(/(iPod|iPhone)/)
        }, t.isIpad = function() {
            return navigator.userAgent.match(/(iPad)/)
        }, t.isWindowsPhone = function() {
            return navigator.userAgent.match(/(Windows Phone)/i)
        }, t.subWin = function(t, e, i, n, o, s, l) {
            var a = void 0 !== o ? o : 20,
                r = void 0 !== s ? s : 10;
            if (void 0 === t || "" === t) return !1;
            l = "width=" + i + ",height=" + n + ",top=" + r + ",left=" + a + ",screenX=" + a + ",screenY=" + r, e = void 0 === e || "" === e ? "New Window" : e.replace(/[^\w\d]/i, "");
            var c = window.open(t, e, l);
            c && c.focus()
        }, t.cleanSrc = function(t) {
            return t = t.replace(/^https:|^http:/g, "")
        }, t.formatTime = function(t) {
            var e = Math.floor(t / 60),
                i = Math.floor(t / 60) < 10 ? "0" + e : Math.floor(t / 60),
                n = Math.floor(t / 60) < 10 ? e : Math.floor(t / 60),
                o = Math.floor(t - 60 * n);
            return i + ":" + (Math.floor(t - 60 * n) < 10 ? "0" + o : Math.floor(t - 60 * n))
        }, t.isMobilePlatform = function() {
            return this.isPhone() || this.isIpad()
        }, t
    }();
    e.Helpers = n
}, function(t, e, i) {
    "use strict";
    Object.defineProperty(e, "__esModule", {
        value: !0
    });
    var n = i(0),
        o = i(1),
        s = i(6),
        l = i(7),
        a = function() {
            function t() {}
            return t.setDefaultConfig = function(t) {
                window.SowerTecPlayer.config = n.Utils.deepExtend(window.SowerTecPlayer.config, t)
            }, t.showConfig = function() {
                console.log(window.SowerTecPlayer.config)
            }, t.cleanAndInstall = function(t) {
                return n.Utils.empty("#" + t.contentId), this.install(t)
            }, t.install = function(t) {
                t.id = "" + (new Date).getTime() + ++this.countInstance;
                var e = "config_" + t.id;
                window.SowerTecPlayer.lastConfId = e;
                try {
                    o.Helpers.ifObjectExist(window.SowerTecPlayer.config) && (window.SowerTecPlayer[e] = n.Utils.deepExtend(window.SowerTecPlayer[e], window.SowerTecPlayer.config)), o.Helpers.ifObjectExist(window.SowerTecPlayerConfig) && (window.SowerTecPlayer[e] = n.Utils.deepExtend(window.SowerTecPlayer.config, window.SowerTecPlayerConfig)), window.SowerTecPlayer[e] = n.Utils.deepExtend(window.SowerTecPlayer[e], t)
                } catch (s) {
                    window.SowerTecPlayer[e] = n.Utils.deepExtend(window.SowerTecPlayer.config, t)
                }
                if (window.SowerTecPlayer.isLoading || !window.SowerTecPlayer[e].player.waitUntilContentLoaded) return this.installPlayer(e);
                var i = this;
                n.Utils.onEvent(window, "load", function() {
                    return i.installPlayer(e)
                })
            }, t.installPlayer = function(t) {
                var e, i = "";
                switch (o.Helpers.parseBoolean(window.SowerTecPlayer[t].player.forceSize) ? (n.Utils.setWidth("#" + window.SowerTecPlayer[t].contentId, window.SowerTecPlayer[t].player.width), n.Utils.setHeight("#" + window.SowerTecPlayer[t].contentId, window.SowerTecPlayer[t].player.height), n.Utils.triggerResize(window)) : (n.Utils.setWidth("#" + window.SowerTecPlayer[t].contentId, "100%"), n.Utils.setHeight("#" + window.SowerTecPlayer[t].contentId, "auto")), "auto" == window.SowerTecPlayer[t].player.height && (n.Utils.setHeight("#" + window.SowerTecPlayer[t].contentId, 9 * n.Utils.getWidth("#" + window.SowerTecPlayer[t].contentId) / 16), n.Utils.offEvent(window, "resize"), n.Utils.offEvent(window, "message"), n.Utils.onEvent(window, "resize", function() {
                        "auto" == window.SowerTecPlayer[window.SowerTecPlayer.lastConfId].player.height && n.Utils.setHeight("#" + window.SowerTecPlayer[window.SowerTecPlayer.lastConfId].contentId, 9 * n.Utils.getWidth("#" + window.SowerTecPlayer[window.SowerTecPlayer.lastConfId].contentId) / 16)
                    })), -1 == window.SowerTecPlayer[t].mediaSrc.defaultSrc.search("youtube") && -1 == window.SowerTecPlayer[t].mediaSrc.defaultSrc.search("youtu.be") ? window.SowerTecPlayer[t].player.forcePlayer ? i = window.SowerTecPlayer[t].player.defaultPlayer : window.SowerTecPlayer[t].mediaSrc.defaultSrc.search(".m3u8") >= 0 ? (window.SowerTecPlayer[t].isHls = !0, i = "html5") : (window.SowerTecPlayer[t].isHls = !1, window.SowerTecPlayer[t].mediaSrc.isLiveStreaming = !1, i = "html5") : i = "youtube", i) {
                    case "html5":
                        if (e = new l.html5(window.SowerTecPlayer[t]), "undefined" == typeof window.google || !o.Helpers.parseBoolean(window.SowerTecPlayer[t].player.adEnable) || "" === window.SowerTecPlayer[t].ads.adVideoTag.trim() && "" === window.SowerTecPlayer[t].ads.adBannerTag.trim()) n.Utils.remove("#" + window.SowerTecPlayer[t].ads.adsId + "_" + window.SowerTecPlayer[t].id), window.SowerTecPlayer[t].canShowControls = !0;
                        else new s.Ads(e).init(), window.SowerTecPlayer[t].canShowControls = !1;
                        break;
                    case "youtube":
                        if (e = new l.youtube(window.SowerTecPlayer[t]), "undefined" == typeof window.google || !o.Helpers.parseBoolean(window.SowerTecPlayer[t].player.adEnable) || "" === window.SowerTecPlayer[t].ads.adVideoTag.trim() && "" === window.SowerTecPlayer[t].ads.adBannerTag.trim()) n.Utils.remove("#" + window.SowerTecPlayer[t].ads.adsId + "_" + window.SowerTecPlayer[t].id), window.SowerTecPlayer[t].canShowControls = !0, o.Helpers.isIphone() && (e.removeVideo(), e.removeControls());
                        else new s.Ads(e).init(), window.SowerTecPlayer[t].canShowControls = !1
                }
                return window.SowerTecPlayer[t].externalApi.enable && e.initApi(window.SowerTecPlayer[t].externalApi), window.SowerTecPlayer[t].stats.enable && e.initStats(window.SowerTecPlayer[t].stats), e.install(), e
            }, t.countInstance = 0, t
        }();
    e.Media = a
}, function(t, e, i) {
    "use strict";
    Object.defineProperty(e, "__esModule", {
        value: !0
    });
    var n = i(9),
        o = i(10),
        s = function() {
            function t() {}
            return t.prototype.initApi = function(t) {
                this.api = new n.Api(t)
            }, t.prototype.initStats = function(t) {
                this.stats = new o.Stats(t)
            }, t
        }();
    e.Player = s
}, function(t, e, i) {
    t.exports = i(5)
}, function(t, e, i) {
    "use strict";
    Object.defineProperty(e, "__esModule", {
        value: !0
    });
    var n = i(0),
        o = i(2),
        s = i(15),
        l = i(16),
        a = {
            status: 0,
            adjustConfigPaths: function() {
                0 == a.status && (r.config.player.rootDir = n.Utils.getRootDirectory(), r.config.player.imageFolder = r.config.player.rootDir + r.config.player.imageFolder, r.config.player.swf = r.config.player.rootDir + r.config.player.swf, a.status = 1)
            }
        },
        r = {
            config: {
                version: "4.1.4",
                buildNumber: "",
                id: "",
                debug: !1,
                contentId: "SowerTecPlayer",
                templateContentId: "SowerTecPlayerTemplate",
                player: {
                    rootDir: "/",
                    waitUntilContentLoaded: !1,
                    forcePlayer: !1,
                    defaultPlayer: "html5",
                    domId: "SowerTecPlayerVideoPlayer",
                    imageFolder: "img/",
                    image: "",
                    autoPlay: !1,
                    pseudoStreaming: !1,
                    adEnable: !1,
                    forceSize: !0,
                    volume: 100,
                    width: 640,
                    height: 360,
                    hideControls: !1,
                    seek: "10",
                    disableFullScreen: !1,
                    swf: "flash/SowerTecPlayer.swf",
                    fireUri: "SowerTecPlayer.PlayerFlash.events.fire",
                    statsUri: "SowerTecPlayer.PlayerFlash.events.stats",
                    hlsLabels: {
                        bitrate: {},
                        resolution: {}
                    }
                },
                related: {
                    url: "",
                    autoPlayTime: 6e3,
                    autoPlayMsg: "__TITLE__ comienza en __TIME__ segundos"
                },
                externalApi: {
                    enable: !0,
                    validRequestsOrigins: []
                },
                mediaSrc: {
                    defaultSrc: "",
                    onErrorSrc: ""
                },
                playerHtml5: {
                    contentId: "sowertecHTML5Player",
                    videoId: "SowerTecPlayerVideo",
                    playerContent: {
                        contentId: "SowerTecPlayerContent",
                        playArea: "sowertecPlayArea",
                        playButton: "sowertecPlayButton",
                        pauseButton: "sowertecPauseButton",
                        rewindButton: "SowerTecPlayerRewindButton",
                        loader: "SowerTecPlayerLoader",
                        thumbnails: "SowerTecPlayerThumbnails"
                    },
                    controls: {
                        sharePanel: {
                            contentId: "sharePanel",
                            fbItem: "fbItem",
                            twItem: "twItem",
                            gpItem: "gpItem",
                            wpItem: "wpItem",
                            shareUrl: "shareUrl",
                            shareEmbed: "shareEmbed"
                        },
                        qualityPanel: {
                            contentId: "qualityPanel",
                            qualityMenu: "qualityMenu",
                            buttonQuality: "buttonQuality",
                            button: "button_"
                        },
                        thumbTime: "SowerTecPlayerThumbTime",
                        thumbCanvas: "SowerTecPlayerThumbCanvas",
                        thumbIndicator: "SowerTecPlayerThumbIndicator",
                        time: "SowerTecPlayerTimeContainer",
                        contentId: "sowertecVideoControls",
                        playButton: "sowertecVideoPlay",
                        pauseButton: "sowertecVideoPauseButton",
                        seekBar: "sowertecVideoSeek",
                        chargeBar: "sowertecChargeBar",
                        playingBar: "sowertecPlayingBar",
                        fullScreen: "sowertecFullScreen",
                        timeContent: "sowertecVideoTimer",
                        liveContent: "sowertecVideoLive",
                        forward30s: "sowertecVideoForward30s",
                        backward30s: "sowertecVideoBackward30s",
                        volumeBarCont: "sowertecVideoVolumeBox",
                        volumeBar: "sowertecVideoVolumeSlider",
                        volumeButton: "sowertecVideoVolumeButton",
                        volumeButtonMute: "sowertecVideoVolumeMute"
                    }
                },
                ads: {
                    adLanguage: "es",
                    adInfoMsg: "La publicidad finaliza en __TIME__ segundos.",
                    adsId: "ads",
                    adContainer: "adContainer",
                    adPlayButton: "adPlayButton",
                    closeAds: "closeAds",
                    adVideoTag: "",
                    adBannerTag: "",
                    adInfo: "adInfo",
                    adInfoContent: "adInfoContent",
                    adBannerInterval: 12e4,
                    overlayDelay: 1e4,
                    overlayAutoHideDelay: 2e4
                },
                share: {
                    enableShare: !1,
                    shareType: "normal",
                    shareUrl: "ALGO",
                    embedCode: "EMBED"
                },
                stats: {
                    enable: !1,
                    sst: {
                        events: {},
                        enable: !1,
                        id: "",
                        title: "",
                        section: "",
                        topic: "",
                        subTopic: "",
                        ts: "",
                        type: "art",
                        mediaType: "-v",
                        sendTimeCount: 0
                    },
                    analytics: {
                        events: {},
                        enable: !1,
                        category: "SowerTecPlayer",
                        label: ""
                    }
                }
            },
            install: function(t) {
                a.adjustConfigPaths(), n.Utils.onDocumentReady(function() {
                    if (n.Utils.checkMediaSource()) o.Media.install(t);
                    else {
                        var e = new s.Flash(t);
                        r.PlayerFlash.eventCallbacks = e.eventCallbacks, r.PlayerFlash.events.fire = e.fire, e.install()
                    }
                })
            },
            installNow: function(t) {
                if (a.adjustConfigPaths(), n.Utils.checkMediaSource()) o.Media.install(t);
                else {
                    var e = new s.Flash(t);
                    r.PlayerFlash.eventCallbacks = e.eventCallbacks, r.PlayerFlash.events.fire = e.fire, e.install()
                }
            },
            installPlayList: function(t, e) {
                a.adjustConfigPaths(), n.Utils.onDocumentReady(function() {
                    n.Utils.checkMediaSource() ? l.Playlist.install(t, e) : new s.Flash(t).install()
                })
            },
            PlayerFlash: {
                eventCallbacks: [],
                events: {
                    fire: null
                }
            }
        };
    window.SowerTecPlayer = r
}, function(t, e, i) {
    "use strict";
    Object.defineProperty(e, "__esModule", {
        value: !0
    });
    var n = i(0),
        o = i(1),
        s = function() {
            function t(t) {
                this.adsDone = !1, this.adBannerEnable = !1, this.testing = !0, this.player = t
            }
            return t.prototype.init = function() {
                var t = this.player.getItemID_jq(this.getConfig().ads.adInfoContent),
                    e = this.player.getItemID_jq(this.getConfig().ads.closeAds),
                    i = this.player.getItemID_jq(this.getConfig().ads.adContainer),
                    s = this.player.getItemID_jq(this.getConfig().playerHtml5.videoId),
                    l = this.player.getItemID_jq(this.getConfig().ads.adsId),
                    a = this.player.getItemID_jq(this.getConfig().playerHtml5.playerContent.playButton),
                    r = this.player.getItemID_jq(this.getConfig().ads.adPlayButton);
                n.Utils.hide(t), n.Utils.hide(e), this.adContainerElement = n.Utils.getElement(i), this.videoContent = n.Utils.getElement(s), o.Helpers.isPhone() ? this.adDisplayContainer = new google.ima.AdDisplayContainer(this.adContainerElement, this.videoContent) : this.adDisplayContainer = new google.ima.AdDisplayContainer(this.adContainerElement), this.adsLoader = new google.ima.AdsLoader(this.adDisplayContainer), this.adsLoader.addEventListener(google.ima.AdsManagerLoadedEvent.Type.ADS_MANAGER_LOADED, this.bindFn(this, this._onAdsManagerLoaded), !1), this.adsLoader.addEventListener(google.ima.AdErrorEvent.Type.AD_ERROR, this.bindFn(this, this._onAdError), !1), this.getConfig().player.autoPlay && !o.Helpers.isMobilePlatform() && this.resume(), o.Helpers.isIphone() ? (this.resume(), n.Utils.hide(l), n.Utils.hide(a), n.Utils.onEvent(r, "click", this.bindFn(this, this._onPlayClick)), n.Utils.hide(t)) : (n.Utils.onEvent(r, "click", this.bindFn(this, this._onPlayClick)), this.getConfig().player.autoPlay || n.Utils.show(r), n.Utils.hide(a), n.Utils.hide(t)), n.Utils.onEvent(e, "click", this.bindFn(this, this._onCloseClick))
            }, t.prototype._onPlayClick = function() {
                return this.player.prepareAds(), this.resume(), !1
            }, t.prototype._onCloseClick = function() {
                return n.Utils.hide(this.player.getItemID_jq(this.getConfig().ads.adsId)), !1
            }, t.prototype._onAdsManagerLoaded = function(t) {
                this.adsManager = t.getAdsManager(this.videoContent), this.processAdsManager()
            }, t.prototype._onAdError = function(t) {
                o.Helpers.isIphone() || this.resumeAfterAd(), this.adsManager && this.adsManager.destroy(), this.adsLoader && this.adsLoader.destroy(), "" === this.getConfig().ads.adBannerTag || this.tryLoadBanner || (this.tryLoadBanner = !0, this.startOverlay()), n.Utils.hide(this.player.getItemID_jq(this.getConfig().ads.adsId))
            }, t.prototype._onStarOverlay = function() {
                this.startOverlay()
            }, t.prototype._onShowOverlay = function() {
                this.showOverlay()
            }, t.prototype._onAutoHideOverlay = function() {
                n.Utils.hide(this.player.getItemID_jq(this.getConfig().ads.adsId))
            }, t.prototype._onContentPauseRequested = function() {
                this.getConfig().externalApi.enable, this.player.triggerStats("startPreRoll"), this.player.hideControls()
            }, t.prototype._onContentResumeRequested = function() {
                this.resumeAfterAd()
            }, t.prototype._onRemainingTime = function() {
                var t = Math.max(1, Math.floor(this.adsManager.getRemainingTime()));
                n.Utils.html(this.player.getItemID_jq(this.getConfig().ads.adInfo), this.getConfig().ads.adInfoMsg.replace("__TIME__", "" + t)), 1 === t && clearInterval(this.remainingTimer)
            }, t.prototype._onAdEvent = function(t) {
                var e = t.getAd(),
                    i = this.player.getItemID_jq(this.getConfig().ads.adsId);
                switch (t.type) {
                    case google.ima.AdEvent.Type.LOADED:
                        e.isLinear() || (this.adBannerEnable = !0, this.bannerWidth = e.getWidth(), this.bannerHeight = e.getHeight(), n.Utils.setWidth(i, e.getWidth()), n.Utils.setHeight(i, e.getHeight()), n.Utils.show(i), n.Utils.addClass(i, "banner-on"), n.Utils.show(this.player.getItemID_jq(this.getConfig().ads.closeAds)), this.adsManager.resize(this.bannerWidth, this.bannerHeight, google.ima.ViewMode.NORMAL)), n.Utils.triggerResize(window), this.adsManager.resume();
                        break;
                    case google.ima.AdEvent.Type.STARTED:
                        e.isLinear() && (o.Helpers.isMobilePlatform() || n.Utils.show(this.player.getItemID_jq(this.getConfig().ads.adInfoContent)), this.remainingTimer = setInterval(this.bindFn(this, this._onRemainingTime), 300));
                        break;
                    case google.ima.AdEvent.Type.CLICK:
                        break;
                    case google.ima.AdEvent.Type.ALL_ADS_COMPLETED:
                        "" !== this.getConfig().ads.adBannerTag && (this.getConfig().canShowControls = !0, this._onStarOverlay(), setTimeout(this.bindFn(this, this._onStarOverlay), this.getConfig().ads.overlayDelay));
                        break;
                    case google.ima.AdEvent.Type.COMPLETE:
                        this.resumeAfterAd(), e.isLinear() && (n.Utils.hide(this.player.getItemID_jq(this.getConfig().ads.adInfoContent)), null !== this.remainingTimer && clearInterval(this.remainingTimer), "" === this.getConfig().ads.adBannerTag || this.adBannerEnable || setTimeout(this.bindFn(this, this._onStarOverlay), this.getConfig().ads.overlayDelay))
                }
            }, t.prototype.bindFn = function(t, e) {
                return function() {
                    e.apply(t, arguments)
                }
            }, t.prototype.getConfig = function() {
                return this.player.config
            }, t.prototype.initAds = function() {
                var t = this;
                this.videoContent.removeAttribute("controls"), this.videoContent.removeEventListener("loadedmetadata", this.loadedMetadataCallback, !0), "" !== this.getConfig().ads.adVideoTag ? this.requestAds(this.getConfig().ads.adVideoTag) : "" !== this.getConfig().ads.adBannerTag && (this.getConfig().canShowControls = !0, this._onStarOverlay(), this.player.play(), setTimeout(this.bindFn(this, this._onStarOverlay), this.getConfig().ads.overlayDelay)), n.Utils.show(this.player.getItemID_jq(this.getConfig().ads.adsId));
                var e = this.player.getItemID_jq(this.getConfig().ads.adsId);
                n.Utils.onEvent(window, "resize", function() {
                    var i = n.Utils.getWidth(t.player.getItemID_jq(t.getConfig().playerHtml5.contentId)),
                        o = n.Utils.getHeight(t.player.getItemID_jq(t.getConfig().playerHtml5.contentId));
                    t.adsManager && (t.adBannerEnable ? (n.Utils.setCss(e, "top", o - t.bannerHeight - 45 + "px"), n.Utils.setCss(e, "left", i / 2 - t.bannerWidth / 2 + "px"), n.Utils.setWidth(e, t.bannerWidth), n.Utils.setHeight(e, t.bannerHeight)) : t.adsManager.resize(i, o, google.ima.ViewMode.NORMAL))
                }), n.Utils.triggerResize(window)
            }, t.prototype.startOverlay = function() {
                this.showOverlay();
                var t = this.player.getItemID_jq(this.getConfig().ads.adInfoContent);
                n.Utils.hide(t), this.bannerTimer || (this.bannerTimer = setInterval(this.bindFn(this, this.showOverlay), this.getConfig().ads.adBannerInterval))
            }, t.prototype.showOverlay = function() {
                this.adBannerEnable ? n.Utils.show(this.player.getItemID_jq(this.getConfig().ads.adsId)) : this.requestAds(this.getConfig().ads.adBannerTag), null !== this.bannerAutohideTimeOut && clearTimeout(this.bannerAutohideTimeOut), this.bannerAutohideTimeOut = setTimeout(this.bindFn(this, this._onAutoHideOverlay), this.getConfig().ads.overlayAutoHideDelay)
            }, t.prototype.initialUserAction = function() {
                this.adDisplayContainer.initialize()
            }, t.prototype.requestAds = function(t) {
                this.adsRequest = new google.ima.AdsRequest, this.adsRequest.adTagUrl = t, this.adsRequest.adType = "video", this.adsLoader.requestAds(this.adsRequest)
            }, t.prototype.processAdsManager = function() {
                this.adsManager.addEventListener(google.ima.AdErrorEvent.Type.AD_ERROR, this.bindFn(this, this._onAdError)), this.adsManager.addEventListener(google.ima.AdEvent.Type.CONTENT_PAUSE_REQUESTED, this.bindFn(this, this._onContentPauseRequested)), this.adsManager.addEventListener(google.ima.AdEvent.Type.CONTENT_RESUME_REQUESTED, this.bindFn(this, this._onContentResumeRequested)), this.adsManager.addEventListener(google.ima.AdEvent.Type.ALL_ADS_COMPLETED, this.bindFn(this, this._onAdEvent)), this.adsManager.addEventListener(google.ima.AdEvent.Type.LOADED, this.bindFn(this, this._onAdEvent)), this.adsManager.addEventListener(google.ima.AdEvent.Type.STARTED, this.bindFn(this, this._onAdEvent)), this.adsManager.addEventListener(google.ima.AdEvent.Type.COMPLETE, this.bindFn(this, this._onAdEvent)), this.adsManager.addEventListener(google.ima.AdEvent.Type.CLICK, this.bindFn(this, this._onAdEvent));
                try {
                    this.adsManager.init(n.Utils.getWidth("#" + this.getConfig().contentId), n.Utils.getHeight("#" + this.getConfig().contentId), google.ima.ViewMode.NORMAL), this.adsManager.start()
                } catch (t) {}
            }, t.prototype.resumeAfterAd = function() {
                this.getConfig().canShowControls = !0, o.Helpers.isIphone() && (this.player._setSrc(this.getConfig().mediaSrc.defaultSrc), this.player.load()), this.player.play(), n.Utils.hide(this.player.getItemID_jq(this.getConfig().ads.adsId)), o.Helpers.isIphone() ? this.videoContent.setAttribute("controls", "controls") : this.player.resetTimeToMenu(), this.getConfig().externalApi.enable, this.player.triggerStats("finishPreRoll")
            }, t.prototype.resume = function() {
                n.Utils.hide(this.player.getItemID_jq(this.getConfig().ads.adPlayButton)), this.adDisplayContainer.initialize(), this.initAds(), o.Helpers.isMobilePlatform() && this.player.resumeAds()
            }, t
        }();
    e.Ads = s
}, function(t, e, i) {
    "use strict";

    function n(t) {
        for (var i in t) e.hasOwnProperty(i) || (e[i] = t[i])
    }
    Object.defineProperty(e, "__esModule", {
        value: !0
    }), n(i(8)), n(i(14))
}, function(t, e, i) {
    "use strict";
    var n = this && this.__extends || function() {
        var t = Object.setPrototypeOf || {
            __proto__: []
        }
        instanceof Array && function(t, e) {
            t.__proto__ = e
        } || function(t, e) {
            for (var i in e) e.hasOwnProperty(i) && (t[i] = e[i])
        };
        return function(e, i) {
            function n() {
                this.constructor = e
            }
            t(e, i), e.prototype = null === i ? Object.create(i) : (n.prototype = i.prototype, new n)
        }
    }();
    Object.defineProperty(e, "__esModule", {
        value: !0
    });
    var o = i(0),
        s = i(1),
        l = i(3),
        a = i(11),
        r = i(12),
        c = function(t) {
            function e(e) {
                var i = t.call(this) || this;
                i.playerId = "", i.timeOutMenu = 0, i.seeksliding = !1, i.uiReady = !1, i.lastFailureTime = 0, i.maxFailureCount = 4, i.playerWaiting = 1, i.playerFailureCounter = 0, i.firstPlay = 1, i.isHls = !1, i.config = e, i.playerId = e.id, i.isHls = e.isHls, i.config.vars = {
                    timeReduced: null,
                    firstMove: null,
                    lastMove: null,
                    canHideControls: !0
                }, i.config.hls = null;
                var n = o.Utils.getHtml("#" + i.config.templateContentId),
                    s = (n ? new r.html5Template(i.config, n) : new r.html5Template(i.config)).getParsed();
                return o.Utils.html("#" + e.contentId, s), i
            }
            return n(e, t), e.prototype.install = function() {
                this.initPlayer(), this._setControlsEvent(), o.Utils.triggerEvent(window, "resize")
            }, e.prototype.initPlayer = function() {
                var t = this._getVideo(),
                    e = this;
                if (this.config.hls = new Hls, this.config.hls.debug = !0, this.config.qualities) {
                    this.config.qualities.auto = 0;
                    for (var i = 0; i < this.config.qualities.list.length; i++) this.config.qualities.list[i].label == this.config.qualities.defaultQ && (this.config.qualities.auto = i);
                    this.isHls ? (this.config.hls.loadSource(this.config.mediaSrc.defaultSrc), this.config.hls.attachMedia(t)) : this._setSrc(this.config.qualities.list[this.config.qualities.auto].src)
                } else this.isHls && Hls.isSupported() ? (this.config.hls.loadSource(this.config.mediaSrc.defaultSrc), this.config.hls.attachMedia(t), this.config.hls.on(Hls.Events.LEVEL_LOADED, function(t, i) {
                    e.config.mediaSrc.isLiveStreaming = i.details.live
                }), this.config.hls.on(Hls.Events.ERROR, function(t, i) {
                    if (i.fatal) switch (i.type) {
                        case Hls.ErrorTypes.NETWORK_ERROR:
                            e.config.hls.startLoad();
                            break;
                        case Hls.ErrorTypes.MEDIA_ERROR:
                            e.config.hls.recoverMediaError();
                            break;
                        default:
                            e.config.hls.destroy(), e._onErrorHls(t, i)
                    }
                }), this.config.hls.on(Hls.Events.MANIFEST_PARSED, function() {
                    e.config.hls.startLoad(), e.config.qualities = {
                        list: [],
                        defaultQ: "Auto"
                    }, e.config.qualities.auto = e.config.hls.levelController.levels.length - 1;
                    for (var i = 0; i < e.config.hls.levelController.levels.length; i++) "undefined" != typeof e.config.hls.levelController.levels[i].attrs && ("undefined" != typeof e.config.player.hlsLabels ? e.config.player.hlsLabels.bitrate && e.config.player.hlsLabels.bitrate[e.config.hls.levelController.levels[i].attrs["AVERAGE-BANDWIDTH"]] ? e.config.qualities.list.push({
                        label: e.config.player.hlsLabels.bitrate[e.config.hls.levelController.levels[i].attrs["AVERAGE-BANDWIDTH"]],
                        src: e.config.hls.levelController.levels[i].url[0]
                    }) : e.config.player.hlsLabels.resolution && e.config.player.hlsLabels.resolution[e.config.hls.levelController.levels[i].attrs.RESOLUTION] ? e.config.qualities.list.push({
                        label: e.config.player.hlsLabels.resolution[e.config.hls.levelController.levels[i].attrs.RESOLUTION],
                        src: e.config.hls.levelController.levels[i].url[0]
                    }) : "undefined" != typeof e.config.hls.levelController.levels[i].attrs.RESOLUTION ? e.config.qualities.list.push({
                        label: e.config.hls.levelController.levels[i].attrs.RESOLUTION,
                        src: e.config.hls.levelController.levels[i].url[0]
                    }) : e.config.qualities.list.push({
                        label: e.config.hls.levelController.levels[i].attrs.BANDWIDTH / 1e3 + " Kbps",
                        src: e.config.hls.levelController.levels[i].url[0]
                    }) : "undefined" != typeof e.config.hls.levelController.levels[i].attrs.RESOLUTION ? e.config.qualities.list.push({
                        label: e.config.hls.levelController.levels[i].attrs.RESOLUTION,
                        src: e.config.hls.levelController.levels[i].url[0]
                    }) : e.config.qualities.list.push({
                        label: e.config.hls.levelController.levels[i].attrs.BANDWIDTH / 1e3 + " Kbps",
                        src: e.config.hls.levelController.levels[i].url[0]
                    }));
                    var n = '<div class="rotulo-calidades"><span>Calidad</span></div>';
                    n += '<a class="active" id="' + e.getItemID(e.config.playerHtml5.controls.qualityPanel.button + "-1") + '">Auto</a>';
                    for (var s = e.config.qualities.list.length - 1; s >= 0; s--) n += '<a id="' + e.getItemID(e.config.playerHtml5.controls.qualityPanel.button + s) + '">' + e.config.qualities.list[s].label + "</a>";
                    o.Utils.html(e.getItemID_jq(e.config.playerHtml5.controls.qualityPanel.qualityMenu), n), o.Utils.setCss(e.getItemID_jq(e.config.playerHtml5.controls.qualityPanel.qualityMenu), "top", Number(o.Utils.getCss(e.getItemID_jq(e.config.playerHtml5.controls.qualityPanel.qualityMenu), "top").split("px")[0]) - 36 * e.config.qualities.list.length + "px"), e.config.qualities.list.length > 0 && (e.config.vars.currentStream = e.config.qualities.list[e.config.qualities.auto].src), o.Utils.show(e.getItemID_jq(e.config.playerHtml5.controls.qualityPanel.contentId)), e.config.player.autoPlay && !e.config.player.adEnable && t.play()
                })) : this._setSrc(this.config.mediaSrc.defaultSrc);
                this.initUI()
            }, e.prototype.initUI = function() {
                this.config.vars.firstMove = null, this.config.vars.lastMove = null, this.config.vars.canHideControls = !0;
                var t = this;
                this.config;
                if (this.config.player.hideControls && o.Utils.hide(this.getItemID_jq(this.config.playerHtml5.controls.contentId)), this.config.player.thumbnails && "" != this.config.player.thumbnails && this.setThumbnails(), s.Helpers.isMobilePlatform()) {
                    try {
                        for (var e = /:hover/, i = 0; i < document.styleSheets.length; i++) {
                            var n = document.styleSheets[i];
                            if (n.cssRules)
                                for (var l = n.cssRules.length - 1; l >= 0; l--) {
                                    var a = n.cssRules[l];
                                    a.type === CSSRule.STYLE_RULE && e.test(a.selectorText) && n.deleteRule(l)
                                }
                        }
                    } catch (c) {}(s.Helpers.isIpad() || s.Helpers.isIphone()) && o.Utils.hide(".SowerTecPlayer-volume"), o.Utils.each(this.getItemID_jq(this.config.playerHtml5.contentId) + " .wp-ico", function(t, e) {
                        o.Utils.show(t)
                    })
                } else o.Utils.each(this.getItemID_jq(this.config.playerHtml5.contentId) + " .wp-ico", function(t, e) {
                    o.Utils.hide(t)
                }), this._setVolume(this.config.player.volume / 100), this.config.vars.currentVolume = this._getVideo().volume;
                if (o.Utils.hide(this.getItemID_jq(this.config.playerHtml5.controls.rewindButton)), this.config.share.enableShare) switch (o.Utils.each(this.getItemID_jq(this.config.playerHtml5.contentId) + " .SowerTecPlayerShareURL", function(e, i) {
                        t.config.share.shareUrl.length > 0 ? o.Utils.setVal(e, t.config.share.shareUrl) : o.Utils.hide(o.Utils.getParent(e))
                    }), this.config.share.shareType) {
                    case "normal":
                        this.config.share.embedCode.length > 0 ? o.Utils.setVal(this.getItemID_jq(this.config.playerHtml5.contentId) + " .SowerTecPlayerEmbedCode", this.config.share.embedCode) : o.Utils.hide(o.Utils.getParent(this.getItemID_jq(this.config.playerHtml5.contentId) + " .SowerTecPlayerEmbedCode")), o.Utils.show(this.getItemID_jq(this.config.playerHtml5.contentId) + " .openSharePanel");
                        break;
                    case "min":
                    default:
                        o.Utils.show(this.getItemID_jq(this.config.playerHtml5.controls.sharePanel.contentId))
                } else o.Utils.hide(this.getItemID_jq(this.config.playerHtml5.controls.sharePanel.contentId)), o.Utils.hide(this.getItemID_jq(this.config.playerHtml5.contentId) + " .openSharePanel");
                if (o.Utils.hide(this.getItemID_jq(this.config.playerHtml5.playerContent.loader)), o.Utils.removeAttr(this.getItemID_jq(this.config.playerHtml5.videoId), "autoplay"), this.config.player.adEnable || (this.config.player.autoPlay ? o.Utils.setAttr(this.getItemID_jq(this.config.playerHtml5.videoId), "autoplay", "") : o.Utils.removeAttr(this.getItemID_jq(this.config.playerHtml5.videoId), "autoplay")), this.config.qualities) {
                    var r = '<div class="rotulo-calidades"><span>Calidad</span></div>';
                    for (i = this.config.qualities.list.length - 1; i >= 0; i--) i == this.config.qualities.auto ? r += '<a class="active" id="' + this.getItemID(this.config.playerHtml5.controls.qualityPanel.button + i) + '">' + this.config.qualities.list[i].label + "</a>" : r += '<a id="' + this.getItemID(this.config.playerHtml5.controls.qualityPanel.button + i) + '">' + this.config.qualities.list[i].label + "</a>";
                    o.Utils.html(this.getItemID_jq(this.config.playerHtml5.controls.qualityPanel.qualityMenu), r), o.Utils.setCss(this.getItemID_jq(this.config.playerHtml5.controls.qualityPanel.qualityMenu), "top", Number(o.Utils.getCss(this.getItemID_jq(this.config.playerHtml5.controls.qualityPanel.qualityMenu), "top").split("px")[0]) - 36 * this.config.qualities.list.length + "px"), this.config.vars.currentStream = this.config.qualities.list[this.config.qualities.auto].src
                } else o.Utils.hide(this.getItemID_jq(this.config.playerHtml5.controls.qualityPanel.contentId));
                "" !== this.config.player.image && this._getVideo().setAttribute("poster", this.config.player.image), this.hideControls(), 1 == this.config.player.disableFullScreen && o.Utils.hide(this.getItemID_jq(this.config.playerHtml5.controls.fullScreen))
            }, e.prototype.hideControls = function() {
                this.config;
                if (this.config.vars.canHideControls || !this.config.canShowControls) {
                    o.Utils.getElement(this.getItemID_jq(this.config.playerHtml5.contentId));
                    o.Utils.fadeOut(this.getItemID_jq(this.config.playerHtml5.controls.qualityPanel.qualityMenu));
                    var t = o.Utils.getElement(this.getItemID_jq(this.config.playerHtml5.controls.contentId));
                    o.Utils.hasClass(t, "transition-on-bottom") && (o.Utils.removeClass(t, "transition-on-bottom"), o.Utils.addClass(t, "transition-off-bottom"));
                    var e = o.Utils.getElement(this.getItemID_jq(this.config.playerHtml5.contentId) + " .openSharePanel");
                    if (o.Utils.hasClass(e, "transition-on-top") && (o.Utils.removeClass(e, "transition-on-top"), o.Utils.addClass(e, "transition-off-top")), this.config.share.enableShare) {
                        var i = o.Utils.getElement(this.getItemID_jq(this.config.playerHtml5.controls.sharePanel.contentId));
                        o.Utils.hasClass(i, "transition-on-top") && (o.Utils.removeClass(i, "transition-on-top"), o.Utils.addClass(i, "transition-off-top"))
                    }
                    if (s.Helpers.parseBoolean(this.config.player.adEnable) && ("" !== this.config.ads.adVideoTag.trim() || "" !== this.config.ads.adBannerTag.trim())) {
                        t = o.Utils.getElement(this.getItemID_jq(this.config.playerHtml5.controls.contentId));
                        o.Utils.getElement(this.getItemID_jq(this.config.ads.adsId))
                    }
                    o.Utils.hide(this.getItemID_jq(this.config.playerHtml5.controls.timeContent + "2")), o.Utils.fadeOut(this.getItemID_jq(this.config.playerHtml5.playerContent.pauseButton))
                } else clearTimeout(this.config.vars.timeOutControls), this.config.vars.timeOutControls = setTimeout(this.bindFn(this, function() {
                    this.hideControls()
                }), 2500)
            }, e.prototype.setThumbnails = function() {
                this.config;
                var t = this;
                o.Utils.ajaxRequest({
                    url: this.config.player.thumbnails,
                    success: function(e) {
                        var i = Array(),
                            n = e.split("\n\n"),
                            s = n.length,
                            l = n,
                            a = "\r\n"; - 1 == n[1].indexOf("\r\n") && (a = "\n");
                        for (var r = 1; r < s; r++) {
                            var c = Object(),
                                h = l[r].substr(0, 12),
                                g = l[r].substr(17, 12),
                                d = l[r].indexOf(a),
                                p = ""; - 1 != d && (p = l[r].substr(d + a.length));
                            var u = h.split(".")[0].split(":");
                            c.startTime = 3600 * Number(u[0]) + 60 * Number(u[1]) + Number(u[2]);
                            var f = g.split(".")[0].split(":");
                            c.stopTime = 3600 * Number(f[0]) + 60 * Number(f[1]) + Number(f[2]);
                            var m = p.split("#");
                            c.thumbImage = m[0];
                            var y = m[1].split("=")[1].split(",");
                            c.x = y[0], c.y = y[1], c.w = y[2], c.h = y[3], i.push(c)
                        }
                        t.config.Thumbnails = i, t.config.canvas = o.Utils.getElement(t.getItemID_jq(t.config.playerHtml5.controls.thumbCanvas)), t.config.context = t.config.canvas.getContext("2d"), t.config.imageObj = new Image, t.config.currentThumbnail = ""
                    },
                    error: function(t) {
                        console.log("Disculpe, existiÃƒÂ³ un problema")
                    }
                })
            }, e.prototype.showControls = function() {
                if (this.config.canShowControls && !this.config.player.hideControls) {
                    o.Utils.getElement(this.getItemID_jq(this.config.playerHtml5.contentId));
                    var t = o.Utils.getElement(this.getItemID_jq(this.config.playerHtml5.controls.contentId));
                    o.Utils.hasClass(t, "transition-off-bottom") && (o.Utils.removeClass(t, "transition-off-bottom"), o.Utils.addClass(t, "transition-on-bottom"));
                    var e = o.Utils.getElement(this.getItemID_jq(this.config.playerHtml5.contentId) + " .openSharePanel");
                    if (o.Utils.hasClass(e, "transition-off-top") && (o.Utils.removeClass(e, "transition-off-top"), o.Utils.addClass(e, "transition-on-top")), this.config.share.enableShare) {
                        var i = o.Utils.getElement(this.getItemID_jq(this.config.playerHtml5.controls.sharePanel.contentId));
                        o.Utils.hasClass(i, "transition-off-top") && (o.Utils.removeClass(i, "transition-off-top"), o.Utils.addClass(i, "transition-on-top"))
                    }
                    if (s.Helpers.parseBoolean(this.config.player.adEnable) && ("" !== this.config.ads.adVideoTag.trim() || "" !== this.config.ads.adBannerTag.trim())) {
                        t = o.Utils.getElement(this.getItemID_jq(this.config.playerHtml5.controls.contentId));
                        var n = o.Utils.getElement(this.getItemID_jq(this.config.ads.adsId));
                        o.Utils.hasClass(n, "banner-on") && (o.Utils.hasClass(n, "open") || (o.Utils.addClass(n, "open"), o.Utils.hasClass(n, "animate") && n.finish(), o.Utils.addClass(n, "animate"), o.Utils.fadeIn(n, function() {
                            o.Utils.removeClass(n, "animate")
                        })))
                    }
                    o.Utils.show(this.getItemID_jq(this.config.playerHtml5.controls.timeContent + "2"))
                }
            }, e.prototype._getVideo = function() {
                return o.Utils.getElement(this.getItemID_jq(this.config.playerHtml5.videoId))
            }, e.prototype._setSrc = function(t) {
                this._getVideo().src = s.Helpers.cleanSrc(t)
            }, e.prototype.changeQuality = function(t, e) {
                void 0 === e && (e = ""), o.Utils.show(this.getItemID_jq(this.config.playerHtml5.playerContent.loader)), this.lastFailureTime = 0, this.playerWaiting = 0, this.playerFailureCounter = 0, this.firstPlay = 1, this._getVideo().src = t + "#t=" + e, this._getVideo().play()
            }, e.prototype.changeQualityHls = function(t, e) {
                this.config.hls.loadLevel = parseInt(t)
            }, e.prototype._getCurSrc = function() {
                return this._getVideo().src
            }, e.prototype.togglePlayPause = function(t) {
                var e = this._getVideo();
                this.config.vars.canHideControls = !0, this.config.canShowControls = !0, this.hideControls(), e.paused ? e.play() : e.pause()
            }, e.prototype.load = function() {
                this._getVideo().load()
            }, e.prototype.play = function() {
                0 == this._getVideo().currentTime && o.Utils.show(this.getItemID_jq(this.config.playerHtml5.playerContent.loader)), this.api && this.api.trigger("play"), this._getVideo().play()
            }, e.prototype.pause = function() {
                this._getVideo().paused || (this.api && this.api.trigger("pause"), this.config.vars.canHideControls = !0, this.config.canShowControls = !0, this.hideControls(), this._getVideo().pause())
            }, e.prototype.mute = function() {
                this._mute()
            }, e.prototype.unmute = function() {
                this._unmute()
            }, e.prototype.seek = function(t) {
                this._getVideo().currentTime + t < this._getVideo().duration && this._getVideo().currentTime + t > 0 && (this._getVideo().currentTime += t)
            }, e.prototype.back = function() {
                this._getVideo().currentTime - this.config.player.seek > 0 && (this._getVideo().currentTime -= this.config.player.seek)
            }, e.prototype.forward = function() {
                this._getVideo().currentTime + this.config.player.seek > 0 && (this._getVideo().currentTime += this.config.player.seek)
            }, e.prototype.forward30s = function() {
                this.seek(30)
            }, e.prototype.backward30s = function() {
                this.seek(-30)
            }, e.prototype.setVolume = function(t) {
                this._setVolume(t)
            }, e.prototype.resetTimeToMenu = function() {
                this.showControls(), clearTimeout(this.config.vars.timeOutControls), this.config.vars.timeOutControls = setTimeout(this.bindFn(this, function() {
                    this.hideControls()
                }), 2500)
            }, e.prototype.seekMobile = function(t) {
                switch (t.type) {
                    case "touchstart":
                        this.config.vars.lastMove = null, this.config.vars.firstMove = t.targetTouches[0].pageX, this.config.vars.lastMove = t.targetTouches[0].pageX;
                        break;
                    case "touchmove":
                        this.config.vars.lastMove = t.targetTouches[0].pageX;
                        break;
                    case "touchend":
                        this.config.vars.lastMove - this.config.vars.firstMove < 0 ? this.config.vars.firstMove - this.config.vars.lastMove > this._getVideo().offsetWidth / 7 && this._getVideo().currentTime - Number(this.config.player.seek) > 0 && (this._getVideo().currentTime -= Number(this.config.player.seek), this.api && this.api.trigger("seek", this._getVideo().currentTime), this.triggerStats("seek")) : this.config.vars.lastMove - this.config.vars.firstMove > this._getVideo().offsetWidth / 7 && this._getVideo().currentTime + Number(this.config.player.seek) < this._getVideo().duration && (this._getVideo().currentTime += Number(this.config.player.seek), this.api && this.api.trigger("seek", this._getVideo().currentTime), this.triggerStats("seek"))
                }
            }, e.prototype.keyHandler = function(t) {
                switch (t.preventDefault(), t.keyCode) {
                    case 32:
                        this.togglePlayPause();
                        break;
                    case 37:
                    case 38:
                    case 39:
                    case 40:
                        break;
                    case 48:
                        this._getVideo().currentTime = 0;
                        break;
                    case 49:
                        this._getVideo().currentTime = Math.floor(.1 * this._getVideo().duration);
                        break;
                    case 50:
                        this._getVideo().currentTime = Math.floor(.2 * this._getVideo().duration);
                        break;
                    case 51:
                        this._getVideo().currentTime = Math.floor(.3 * this._getVideo().duration);
                        break;
                    case 52:
                        this._getVideo().currentTime = Math.floor(.4 * this._getVideo().duration);
                        break;
                    case 53:
                        this._getVideo().currentTime = Math.floor(.5 * this._getVideo().duration);
                        break;
                    case 54:
                        this._getVideo().currentTime = Math.floor(.6 * this._getVideo().duration);
                        break;
                    case 55:
                        this._getVideo().currentTime = Math.floor(.7 * this._getVideo().duration);
                        break;
                    case 56:
                        this._getVideo().currentTime = Math.floor(.8 * this._getVideo().duration);
                        break;
                    case 57:
                        this._getVideo().currentTime = Math.floor(.9 * this._getVideo().duration)
                }
            }, e.prototype.fullScreen = function() {
                var t = o.Utils.getElement(this.getItemID_jq(this.config.playerHtml5.contentId));
                if (s.Helpers.isIpad() || s.Helpers.isIphone()) {
                    if (this._getVideo().webkitSupportsFullscreen) return this._getVideo().webkitEnterFullscreen(), this.triggerStats("full"), !0
                } else document.webkitIsFullScreen || document.mozFullScreen || document.msFullscreenElement ? (document.exitFullscreen ? document.exitFullscreen() : document.mozCancelFullScreen ? document.mozCancelFullScreen() : document.webkitExitFullscreen && document.webkitExitFullscreen(), this.triggerStats("nofull")) : (t.requestFullscreen ? t.requestFullscreen() : t.mozRequestFullScreen ? t.mozRequestFullScreen() : t.webkitRequestFullscreen ? t.webkitRequestFullscreen() : t.msRequestFullscreen && t.msRequestFullscreen(), this.triggerStats("full"));
                return !1
            }, e.prototype._onTimeUpdate = function(t) {
                var e = t.target.currentTime;
                this.api && this.api.trigger("updateTime", e);
                var i = t.target.duration,
                    n = Math.floor(100 * e / i);
                if ("undefined" != typeof this.config.mediaSrc.isLiveStreaming && 1 == this.config.mediaSrc.isLiveStreaming ? (o.Utils.hide(this.getItemID_jq(this.config.playerHtml5.controls.seekBar)), o.Utils.hide(this.getItemID_jq(this.config.playerHtml5.controls.timeContent)), o.Utils.hide(this.getItemID_jq(this.config.playerHtml5.controls.timeContent + "2")), o.Utils.show(this.getItemID_jq(this.config.playerHtml5.controls.liveContent))) : o.Utils.show(this.getItemID_jq(this.config.playerHtml5.controls.seekBar)), o.Utils.hide(this.getItemID_jq(this.config.playerHtml5.playerContent.rewindButton)), o.Utils.setWidth(this.getItemID_jq(this.config.playerHtml5.controls.playingBar), Math.floor(o.Utils.getWidth(this.getItemID_jq(this.config.playerHtml5.controls.seekBar)) * n) / 100), t.target.duration === Infinity) return o.Utils.hide(this.getItemID_jq(this.config.playerHtml5.controls.seekBar)), o.Utils.hide(this.getItemID_jq(this.config.playerHtml5.controls.timeContent)), void o.Utils.hide(this.getItemID_jq(this.config.playerHtml5.controls.timeContent + "2"));
                this.config.vars.timeReduced ? (o.Utils.text(this.getItemID_jq(this.config.playerHtml5.controls.timeContent), s.Helpers.formatTime(e)), o.Utils.text(this.getItemID_jq(this.config.playerHtml5.controls.timeContent + "2"), s.Helpers.formatTime(e))) : isNaN(i) || (o.Utils.text(this.getItemID_jq(this.config.playerHtml5.controls.timeContent), s.Helpers.formatTime(e) + " / " + s.Helpers.formatTime(i)), o.Utils.text(this.getItemID_jq(this.config.playerHtml5.controls.timeContent + "2"), s.Helpers.formatTime(e) + " / " + s.Helpers.formatTime(i)))
            }, e.prototype._onError = function() {}, e.prototype._onErrorHls = function(t, e) {}, e.prototype._onFullScreen = function() {
                return this.fullScreen(), !1
            }, e.prototype._onEndedIphone = function() {
                switch (this.config.player.showPanelOnComplete) {
                    case "related":
                        a.Related.init(this.config, this);
                        break;
                    case "share":
                    default:
                        this.config;
                        o.Utils.getWidth(this.getItemID_jq(this.config.playerHtml5.contentId)) < 350 ? this.config.share.enableShare && (o.Utils.hide(this.getItemID_jq(this.config.playerHtml5.contentId) + " .SowerTecPlayerShareNormal"), o.Utils.hide(this.getItemID_jq(this.config.playerHtml5.contentId) + " .openSharePanel"), o.Utils.show(this.getItemID_jq(this.config.playerHtml5.controls.sharePanel.contentId))) : this.config.share.enableShare && "normal" === this.config.share.shareType && o.Utils.triggerEvent(this.getItemID_jq(this.config.playerHtml5.contentId) + " .openSharePanel a", "click")
                }
                this.api && this.api.trigger("stop")
            }, e.prototype._onEnded = function() {
                switch (o.Utils.show(this.getItemID_jq(this.config.playerHtml5.controls.playButton)), o.Utils.hide(this.getItemID_jq(this.config.playerHtml5.controls.pauseButton)), o.Utils.fadeOut(this.getItemID_jq(this.config.playerHtml5.playerContent.playButton)), this.config.player.showPanelOnComplete) {
                    case "related":
                        a.Related.init(this.config, this);
                        break;
                    case "share":
                    default:
                        this.config;
                        o.Utils.getWidth(this.getItemID_jq(this.config.playerHtml5.contentId)) < 350 ? this.config.share.enableShare && (o.Utils.hide(this.getItemID_jq(this.config.playerHtml5.contentId) + " .SowerTecPlayerShareNormal"), o.Utils.hide(this.getItemID_jq(this.config.playerHtml5.contentId) + " .openSharePanel"), o.Utils.show(this.getItemID_jq(this.config.playerHtml5.controls.sharePanel.contentId))) : this.config.share.enableShare && "normal" === this.config.share.shareType && o.Utils.triggerEvent(this.getItemID_jq(this.config.playerHtml5.contentId) + " .openSharePanel a", "click")
                }
                this.api && this.api.trigger("stop")
            }, e.prototype._onPause = function() {
                o.Utils.show(this.getItemID_jq(this.config.playerHtml5.controls.playButton)), o.Utils.hide(this.getItemID_jq(this.config.playerHtml5.controls.pauseButton)), o.Utils.fadeIn(this.getItemID_jq(this.config.playerHtml5.playerContent.playButton)), this.triggerStats("pause")
            }, e.prototype._onPlaying = function() {
                o.Utils.removeAttr(this.getItemID_jq(this.config.playerHtml5.videoId), "autoPlay"), o.Utils.hide(this.getItemID_jq(this.config.playerHtml5.controls.playButton)), o.Utils.hide(this.getItemID_jq(this.config.playerHtml5.playerContent.loader)), o.Utils.show(this.getItemID_jq(this.config.playerHtml5.controls.pauseButton)), o.Utils.fadeOut(this.getItemID_jq(this.config.playerHtml5.playerContent.playButton)), s.Helpers.isIphone() && o.Utils.hide(this.getItemID_jq(this.config.playerHtml5.playerContent.playArea))
            }, e.prototype.prepareAds = function() {}, e.prototype.resumeAds = function() {
                s.Helpers.isIphone() || (this._getVideo().play(), this._getVideo().pause())
            }, e.prototype._onPlay = function() {
                o.Utils.show(this.getItemID_jq(this.config.playerHtml5.controls.loader)), o.Utils.hide(this.getItemID_jq(this.config.playerHtml5.controls.playButton)), o.Utils.show(this.getItemID_jq(this.config.playerHtml5.controls.pauseButton)), o.Utils.fadeOut(this.getItemID_jq(this.config.playerHtml5.playerContent.playButton)), this.triggerStats("play")
            }, e.prototype.triggerStats = function(t, e) {
                this.stats && this.stats.send(t, e)
            }, e.prototype.copyUrl = function(t) {
                t.target;
                var e = t.target.dataset.copytarget,
                    i = e ? document.querySelector(e) : null;
                if (i && i.select) {
                    i.select();
                    document.execCommand("copy");
                    i.blur()
                }
            }, e.prototype.debugNetworkState = function(t) {
                switch (t) {
                    case 0:
                        console.log("NETWORK_EMPTY");
                        break;
                    case 1:
                        console.log("NETWORK_IDLE");
                        break;
                    case 2:
                        console.log("NETWORK_LOADING");
                        break;
                    case 3:
                        console.log("NETWORK_NO_SOURCE")
                }
            }, e.prototype.debugReadyState = function(t) {
                switch (t) {
                    case 0:
                        console.log("HAVE_NOTHING");
                        break;
                    case 1:
                        console.log("HAVE_METADATA");
                        break;
                    case 2:
                        console.log("HAVE_CURRENT_DATA");
                        break;
                    case 3:
                        console.log("HAVE_FUTURE_DATA");
                        break;
                    case 4:
                        console.log("HAVE_ENOUGH_DATA")
                }
            }, e.prototype.resetVideoTag = function() {
                var t = this._getVideo(),
                    e = o.Utils.getAttr(t, "id"),
                    i = o.Utils.getParent(t);
                o.Utils.remove(t);
                var n = '<video playsinline id="' + e + '" class="SowerTecPlayerVideoPlayer" preload="none" src=""> </video>';
                o.Utils.append(i, n)
            }, e.prototype._setControlsEvent = function() {
                var t = this._getVideo(),
                    e = (this.config, this);
                if (o.Utils.offEvent(t, "error"), o.Utils.onEvent(t, "error", this.bindFn(this, this._onError)), s.Helpers.isIphone()) {
                    o.Utils.remove(".SowerTecPlayerShareNormal"), o.Utils.remove(".SowerTecPlayer-main-button"), o.Utils.offEvent(t, "ended"), o.Utils.onEvent(t, "ended", this.bindFn(this, this._onEndedIphone)), o.Utils.remove(this.getItemID_jq(this.config.playerHtml5.controls.contentId)), o.Utils.hide(this.getItemID_jq(this.config.playerHtml5.playerContent.playArea));
                    this.config;
                    o.Utils.offEvent(this.getItemID_jq(this.config.playerHtml5.contentId) + " .openSharePanel a", "click"), o.Utils.onEvent(this.getItemID_jq(this.config.playerHtml5.contentId) + " .openSharePanel a", "click", function(t) {
                        t.preventDefault(), o.Utils.fadeIn(o.Utils.find(o.Utils.getParent(e.getItemID_jq(e.config.playerHtml5.playerContent.playArea) + " .openSharePanel"), ".SowerTecPlayerShareNormal"))
                    }), o.Utils.offEvent(this.getItemID_jq(this.config.playerHtml5.contentId) + " .SowerTecPlayerShareNormal .close-box", "click"), o.Utils.onEvent(this.getItemID_jq(this.config.playerHtml5.contentId) + " .SowerTecPlayerShareNormal .close-box", "click", function(t) {
                        t.preventDefault(), o.Utils.fadeOut(o.Utils.closest(e.getItemID_jq(e.config.playerHtml5.contentId) + " .SowerTecPlayerShareNormal .close-box", ".SowerTecPlayerShareNormal"))
                    }), o.Utils.offEvent(this.getItemID_jq(this.config.playerHtml5.contentId) + " .fb-ico", "click"), o.Utils.onEvent(this.getItemID_jq(this.config.playerHtml5.contentId) + " .fb-ico", "click", function(t) {
                        s.Helpers.subWin("http://www.facebook.com/share.php?u=" + encodeURIComponent(e.config.share.shareUrl), "", 400, 400)
                    }), o.Utils.offEvent(this.getItemID_jq(this.config.playerHtml5.contentId) + " .tw-ico", "click"), o.Utils.onEvent(this.getItemID_jq(this.config.playerHtml5.contentId) + " .tw-ico", "click", function(t) {
                        s.Helpers.subWin("http://twitter.com/home?status=" + encodeURIComponent(e.config.share.shareUrl), "", 400, 400)
                    }), o.Utils.offEvent(this.getItemID_jq(this.config.playerHtml5.contentId) + " .gp-ico", "click"), o.Utils.onEvent(this.getItemID_jq(this.config.playerHtml5.contentId) + " .gp-ico", "click", function(t) {
                        s.Helpers.subWin("https://plus.google.com/share?url=" + encodeURIComponent(e.config.share.shareUrl), "", 400, 400)
                    }), o.Utils.offEvent(this.getItemID_jq(this.config.playerHtml5.contentId) + " .wp-ico", "click"), o.Utils.onEvent(this.getItemID_jq(this.config.playerHtml5.contentId) + " .wp-ico", "click", function(t) {
                        s.Helpers.subWin("whatsapp://send?text=" + encodeURIComponent(e.config.share.shareUrl), "", 400, 400)
                    }), t.setAttribute("controls", "controls")
                } else {
                    o.Utils.offEvent(t, "touchstart"), o.Utils.onEvent(t, "touchstart", this.bindFn(this, this.seekMobile)), o.Utils.offEvent(t, "touchend"), o.Utils.onEvent(t, "touchend", this.bindFn(this, this.seekMobile)), o.Utils.offEvent(t, "touchmove"), o.Utils.onEvent(t, "touchmove", this.bindFn(this, this.seekMobile)), o.Utils.offEvent(t, "click"), o.Utils.onEvent(t, "click", this.bindFn(this, this.resetTimeToMenu)), o.Utils.offEvent(t, "ended"), o.Utils.onEvent(t, "ended", this.bindFn(this, this._onEnded)), o.Utils.offEvent(t, "timeupdate"), o.Utils.onEvent(t, "timeupdate", this.bindFn(this, this._onTimeUpdate)), o.Utils.offEvent(t, "pause"), o.Utils.onEvent(t, "pause", this.bindFn(this, this._onPause)), o.Utils.offEvent(t, "waiting"), o.Utils.onEvent(t, "waiting", function(t) {
                        o.Utils.show(e.getItemID_jq(e.config.playerHtml5.playerContent.loader)), e.playerWaiting = 1, e.playerFailureCounter++
                    }), o.Utils.offEvent(t, "playing"), t.addEventListener("playing", function(t) {
                        o.Utils.hide(e.getItemID_jq(e.config.playerHtml5.playerContent.loader)), e.playerWaiting = 0, e.firstPlay = 0
                    }), o.Utils.onEvent(t, "playing", function(t) {
                        o.Utils.hide(e.getItemID_jq(e.config.playerHtml5.playerContent.loader)), e.playerWaiting = 0, e.firstPlay = 0
                    }), o.Utils.offEvent(t, "progress"), o.Utils.onEvent(t, "progress", function(i) {
                        if (!e.isHls && e.config.qualities && e.config.qualities.list && e.config.qualities.list.length > 0) {
                            var n = Math.ceil((new Date).getTime() / 1e3);
                            if (!e.playerWaiting && (2 == i.target.networkState || 1 == i.target.networkState) && i.target.readyState > 2 || !e.firstPlay && n - e.lastFailureTime > 1 && (e.lastFailureTime = n, e.playerFailureCounter++), e.playerFailureCounter > e.maxFailureCount) {
                                for (var o = e.config.qualities.list.length - 1, s = e.config.qualities.list.length - 1; s >= 0; s--)
                                    if (e.config.vars.currentStream == e.config.qualities.list[s].src) {
                                        o = --s;
                                        break
                                    } o >= 0 && e.config.vars.currentStream != e.config.qualities.list[o].src && (e.config.vars.currentStream = e.config.qualities.list[o].src, e.bindFn(e, e.changeQuality(e.config.qualities.list[o].src, t.currentTime)))
                            }
                        }
                    }), o.Utils.offEvent(t, "playing"), o.Utils.onEvent(t, "playing", this.bindFn(this, this._onPlaying)), o.Utils.offEvent(t, "play"), o.Utils.onEvent(t, "play", this.bindFn(this, this._onPlay)), o.Utils.offEvent(this.getItemID_jq(this.config.playerHtml5.contentId), "mouseenter"), o.Utils.onEvent(this.getItemID_jq(this.config.playerHtml5.contentId), "mouseenter", this.bindFn(this, this.resetTimeToMenu)), o.Utils.offEvent(this.getItemID_jq(this.config.playerHtml5.contentId), "mousemove"), o.Utils.onEvent(this.getItemID_jq(this.config.playerHtml5.contentId), "mousemove", this.bindFn(this, this.resetTimeToMenu)), o.Utils.offEvent(this.getItemID_jq(this.config.playerHtml5.contentId), "mouseleave"), o.Utils.onEvent(this.getItemID_jq(this.config.playerHtml5.contentId), "mouseleave", this.bindFn(this, this.hideControls)), o.Utils.offMultiEvent(this.getItemID_jq(this.config.playerHtml5.playerContent.pauseButton), "click,touchstart"), o.Utils.onMultiEvent(this.getItemID_jq(this.config.playerHtml5.playerContent.pauseButton), "click,touchstart", this.bindFn(this, this.pause)), o.Utils.offEvent(this.getItemID_jq(this.config.playerHtml5.playerContent.playButton), "click"), o.Utils.onEvent(this.getItemID_jq(this.config.playerHtml5.playerContent.playButton), "click", this.bindFn(this, this.togglePlayPause)), o.Utils.offEvent(this.getItemID_jq(this.config.playerHtml5.controls.playButton), "click"), o.Utils.onEvent(this.getItemID_jq(this.config.playerHtml5.controls.playButton), "click", this.bindFn(this, this.togglePlayPause)), o.Utils.offEvent(this.getItemID_jq(this.config.playerHtml5.controls.pauseButton), "click"), o.Utils.onEvent(this.getItemID_jq(this.config.playerHtml5.controls.pauseButton), "click", this.bindFn(this, this.togglePlayPause)), o.Utils.offMultiEvent(this.getItemID_jq(this.config.playerHtml5.playerContent.playArea), "click,touchstart"), o.Utils.onMultiEvent(this.getItemID_jq(this.config.playerHtml5.playerContent.playArea), "click,touchstart", function(i) {
                        o.Utils.isTouchDevice() || "click" != i.type || e.bindFn(e, e.togglePlayPause)(), "touchstart" == i.type && (e.config.vars.canHideControls = !1, e.config.canShowControls = !0, t.paused || (e.config.vars.canHideControls = !0, o.Utils.fadeIn(e.getItemID_jq(e.config.playerHtml5.playerContent.pauseButton))))
                    }), o.Utils.offEvent(this.getItemID_jq(this.config.playerHtml5.controls.forward30s), "click"), o.Utils.onEvent(this.getItemID_jq(this.config.playerHtml5.controls.forward30s), "click", this.bindFn(this, this.forward30s)), o.Utils.offEvent(this.getItemID_jq(this.config.playerHtml5.controls.backward30s), "click"), o.Utils.onEvent(this.getItemID_jq(this.config.playerHtml5.controls.backward30s), "click", this.bindFn(this, this.backward30s)), o.Utils.offEvent(this.getItemID_jq(this.config.playerHtml5.controls.volumeButton), "click"), o.Utils.onEvent(this.getItemID_jq(this.config.playerHtml5.controls.volumeButton), "click", function() {
                        e._getVideo().volume > 0 ? e._mute() : e._unmute()
                    }), o.Utils.offEvent(this.getItemID_jq(this.config.playerHtml5.controls.volumeButtonMute), "click"), o.Utils.onEvent(this.getItemID_jq(this.config.playerHtml5.controls.volumeButtonMute), "click", function() {
                        e._getVideo().volume > 0 ? e._mute() : (0 == e.config.vars.currentVolume && (e.config.vars.currentVolume = 50), e._unmute())
                    }), o.Utils.offEvent(this.getItemID_jq(this.config.playerHtml5.contentId), "keypress"), o.Utils.onEvent(this.getItemID_jq(this.config.playerHtml5.contentId), "keypress", this.bindFn(this, this.keyHandler)), o.Utils.offMultiEvent(this.getItemID_jq(this.config.playerHtml5.controls.volumeBarCont), "mouseup,mousedown,mouseleave,touchmove"), o.Utils.onMultiEvent(this.getItemID_jq(this.config.playerHtml5.controls.volumeBarCont), "mouseup,mousedown,mouseleave,touchmove", function(t) {
                        var i = o.Utils.getElement(e.getItemID_jq(e.config.playerHtml5.controls.volumeBarCont));
                        switch (t.type) {
                            case "mousedown":
                                var n = (parseInt(t.pageX) - o.Utils.offset(i).left) / o.Utils.getWidth(i);
                                e._setVolume(n), o.Utils.offEvent(i, "mousemove"), o.Utils.onEvent(i, "mousemove", function(t) {
                                    var n = (parseInt(t.pageX) - o.Utils.offset(i).left) / o.Utils.getWidth(i);
                                    return e._setVolume(n), !1
                                });
                                break;
                            case "mouseup":
                            case "mouseleave":
                                o.Utils.offEvent(i, "mousemove");
                                break;
                            case "touchmove":
                                n = (parseInt(t.touches[0].pageX) - o.Utils.offset(i).left) / o.Utils.getWidth(i);
                                e._setVolume(n)
                        }
                        return !1
                    }), o.Utils.offMultiEvent(this.getItemID_jq(this.config.playerHtml5.controls.seekBar), "mousedown,mouseleave,mousemove,touchmove,touchstart,touchend"), o.Utils.onMultiEvent(this.getItemID_jq(this.config.playerHtml5.controls.seekBar), "mousedown,mouseleave,mousemove,touchmove,touchstart,touchend", function(t) {
                        var i = o.Utils.getElement(e.getItemID_jq(e.config.playerHtml5.controls.seekBar)),
                            n = o.Utils.getElement(e.getItemID_jq(e.config.playerHtml5.playerContent.thumbnails)),
                            l = o.Utils.getElement(e.getItemID_jq(e.config.playerHtml5.controls.thumbIndicator));
                        switch (t.type) {
                            case "mousedown":
                                var a = e._getVideo(),
                                    r = (parseInt(t.pageX) - o.Utils.offset(i).left) / o.Utils.getWidth(i),
                                    c = Math.floor(a.duration * r);
                                if (isNaN(a.duration)) {
                                    a.play();
                                    var h = a.onloadedmetadata;
                                    a.onloadedmetadata = function() {
                                        c = Math.floor(a.duration * r), a.currentTime = c, this.api && this.api.trigger("seek", a.currentTime), e.triggerStats("seek"), a.onloadedmetadata = h, e.bindFn(e, e.play())
                                    }
                                } else a.currentTime = c, this.api && this.api.trigger("seek", a.currentTime), e.triggerStats("seek"), a.play();
                                break;
                            case "mouseleave":
                                o.Utils.hide(n), o.Utils.hide(l), s.Helpers.isMobilePlatform() || (e.config.vars.canHideControls = !0);
                                break;
                            case "mousemove":
                                if (!s.Helpers.isMobilePlatform() && e.config.player.thumbnails && "" != e.config.player.thumbnails) {
                                    a = e._getVideo(), r = (parseInt(t.pageX) - o.Utils.offset(i).left) / o.Utils.getWidth(i);
                                    var g = Math.floor(a.duration * r);
                                    if (!isNaN(g)) {
                                        o.Utils.html(e.getItemID_jq(e.config.playerHtml5.controls.thumbTime), s.Helpers.formatTime(g));
                                        for (var d = 0; d < e.config.Thumbnails.length; d++)
                                            if (e.config.Thumbnails[d].startTime < g && e.config.Thumbnails[d].stopTime > g) {
                                                var p = e.config.Thumbnails[d].x,
                                                    u = e.config.Thumbnails[d].y,
                                                    f = e.config.Thumbnails[d].w,
                                                    m = e.config.Thumbnails[d].h;
                                                e.config.imageObj.onload = function() {
                                                    e.config.context.drawImage(e.config.imageObj, p, u, f, m, 0, 0, 120, 68), e.config.currentThumbnail = e.config.imageObj.src
                                                };
                                                var y = e.config.player.thumbnails.split("/");
                                                y[y.length - 1] = e.config.Thumbnails[d].thumbImage, y = y.join("/"), e.config.currentThumbnail != y || "" == e.config.imageObj.src ? e.config.imageObj.src = y : e.config.context.drawImage(e.config.imageObj, p, u, f, m, 0, 0, 120, 68)
                                            } var _ = t.offsetX + 10 - o.Utils.getWidth(n) / 2,
                                            I = o.Utils.getElement(e.getItemID_jq(e.config.playerHtml5.contentId));
                                        _ = (_ = _ < 0 ? 0 : _) + o.Utils.getWidth(n) > o.Utils.getWidth(I) ? o.Utils.getWidth(I) - o.Utils.getWidth(n) : _;
                                        var v = t.offsetX + 7 - o.Utils.getWidth(l) / 2;
                                        o.Utils.setCss(n, "left", _ + "px"), o.Utils.setCss(l, "left", v + "px"), o.Utils.show(n), o.Utils.show(l)
                                    }
                                }
                                break;
                            case "touchmove":
                                a = e._getVideo(), r = (parseInt(t.touches[0].pageX) - o.Utils.offset(i).left) / o.Utils.getWidth(i), c = Math.floor(a.duration * r);
                                if (isNaN(a.duration)) {
                                    a.play();
                                    h = a.onloadedmetadata;
                                    a.onloadedmetadata = function() {
                                        c = Math.floor(a.duration * r), a.currentTime = c, this.api && this.api.trigger("seek", a.currentTime), e.triggerStats("seek"), a.onloadedmetadata = h, e.bindFn(e, e.play())
                                    }
                                } else {
                                    a.currentTime = c;
                                    var b = Math.floor(100 * a.currentTime / a.duration);
                                    o.Utils.setWidth(e.getItemID_jq(e.config.playerHtml5.controls.playingBar), Math.floor(o.Utils.getWidth(e.getItemID_jq(e.config.playerHtml5.controls.seekBar)) * b) / 100), this.api && this.api.trigger("seek", a.currentTime), e.triggerStats("seek"), a.play()
                                }
                        }
                        return !1
                    }), s.Helpers.isMobilePlatform() || (o.Utils.offEvent(this.getItemID_jq(this.config.playerHtml5.controls.seekBar), "mouseenter"), o.Utils.onEvent(this.getItemID_jq(this.config.playerHtml5.controls.seekBar), "mouseenter", function() {
                        e.config.vars.canHideControls = !1
                    })), o.Utils.offEvent(this.getItemID_jq(this.config.playerHtml5.playerContent.rewindButton), "click"), o.Utils.onEvent(this.getItemID_jq(this.config.playerHtml5.playerContent.rewindButton), "click", function() {
                        e._getVideo().currentTime = 0, o.Utils.hide(e.getItemID_jq(e.config.playerHtml5.playerContent.rewindButton)), e._getVideo().play()
                    }), o.Utils.offEvent(this.getItemID_jq(this.config.playerHtml5.controls.sharePanel.shareUrl + "_btn"), "click"), o.Utils.onEvent(this.getItemID_jq(this.config.playerHtml5.controls.sharePanel.shareUrl + "_btn"), "click", this.bindFn(this, this.copyUrl)), o.Utils.offEvent(this.getItemID_jq(this.config.playerHtml5.controls.sharePanel.shareEmbed + "_btn"), "click"), o.Utils.onEvent(this.getItemID_jq(this.config.playerHtml5.controls.sharePanel.shareEmbed + "_btn"), "click", this.bindFn(this, this.copyUrl)), o.Utils.offMultiEvent(this.getItemID_jq(this.config.playerHtml5.controls.qualityPanel.qualityPanel), "mouseover,mouseout"), o.Utils.onMultiEvent(this.getItemID_jq(this.config.playerHtml5.controls.qualityPanel.qualityPanel), "mouseover,mouseout", function(t) {
                        switch (t.type) {
                            case "mouseover":
                                e.config.vars.canHideControls = !1;
                                break;
                            case "mouseout":
                                e.config.vars.canHideControls = !0
                        }
                    }), o.Utils.offEvent(this.getItemID_jq(this.config.playerHtml5.controls.qualityPanel.buttonQuality), "click"), o.Utils.onEvent(this.getItemID_jq(this.config.playerHtml5.controls.qualityPanel.buttonQuality), "click", function() {
                        o.Utils.isVisible(e.getItemID_jq(e.config.playerHtml5.controls.qualityPanel.qualityMenu)) ? o.Utils.fadeOut(e.getItemID_jq(e.config.playerHtml5.controls.qualityPanel.qualityMenu)) : o.Utils.fadeIn(e.getItemID_jq(e.config.playerHtml5.controls.qualityPanel.qualityMenu))
                    }), o.Utils.offMultiEvent(this.getItemID_jq(this.config.playerHtml5.controls.qualityPanel.qualityMenu), "mouseleave,click"), o.Utils.onMultiEvent(this.getItemID_jq(this.config.playerHtml5.controls.qualityPanel.qualityMenu), "mouseleave,click", function(i) {
                        switch (i.type) {
                            case "click":
                                if (o.Utils.each(e.getItemID_jq(e.config.playerHtml5.controls.qualityPanel.qualityMenu) + " a", function(t, e) {
                                        o.Utils.removeClass(t, "active")
                                    }), "auto" == i.target.id) e.config.vars.currentStream != e.config.qualities.list[e.config.qualities.auto].src && (e.config.vars.currentStream = e.config.qualities.list[e.config.qualities.auto].src, e.bindFn(e, e.changeQuality("auto")));
                                else {
                                    var n = i.target.id.split("_")[1]; - 1 == n && 1 == e.isHls ? e.bindFn(e, e.changeQualityHls(n, t.currentTime)) : e.config.vars.currentStream != e.config.qualities.list[i.target.id.split("_")[1]].src && (e.config.vars.currentStream = e.config.qualities.list[i.target.id.split("_")[1]].src, 1 == e.isHls ? e.bindFn(e, e.changeQualityHls(i.target.id.split("_")[1], t.currentTime)) : e.bindFn(e, e.changeQuality(e.config.qualities.list[i.target.id.split("_")[1]].src, t.currentTime))), o.Utils.addClass("#" + i.target.id, "active")
                                }
                                o.Utils.fadeOut(e.getItemID_jq(e.config.playerHtml5.controls.qualityPanel.qualityMenu));
                                break;
                            case "mouseout":
                                o.Utils.fadeOut(e.getItemID_jq(e.config.playerHtml5.controls.qualityPanel.qualityMenu))
                        }
                    }), this.config.player.disableFullScreen || (o.Utils.offEvent(document, "webkitfullscreenchange"), o.Utils.onEvent(document, "webkitfullscreenchange", this.bindFn(this, this._onFullScreenChange)), o.Utils.offEvent(document, "webkitfullscreenchange"), o.Utils.onEvent(document, "webkitfullscreenchange", this.bindFn(this, this._onFullScreenChange)), o.Utils.offEvent(document, "fullscreenchange"), o.Utils.onEvent(document, "fullscreenchange", this.bindFn(this, this._onFullScreenChange)), o.Utils.offEvent(document, "MSFullscreenChange"), o.Utils.offEvent(document, "MSFullscreenChange", this.bindFn(this, this._onFullScreenChange))), o.Utils.offEvent(this.getItemID_jq(this.config.playerHtml5.controls.fullScreen), "click"), o.Utils.onEvent(this.getItemID_jq(this.config.playerHtml5.controls.fullScreen), "click", this.bindFn(this, this._onFullScreen));
                    this.config;
                    o.Utils.offEvent(this.getItemID_jq(this.config.playerHtml5.contentId) + " .openSharePanel a", "click"), o.Utils.onEvent(this.getItemID_jq(this.config.playerHtml5.contentId) + " .openSharePanel a", "click", function(t) {
                        t.preventDefault(), o.Utils.fadeIn(o.Utils.find(o.Utils.getParent(e.getItemID_jq(e.config.playerHtml5.contentId) + " .openSharePanel"), ".SowerTecPlayerShareNormal"))
                    }), o.Utils.offEvent(this.getItemID_jq(this.config.playerHtml5.contentId) + " .SowerTecPlayerShareNormal .close-box", "click"), o.Utils.onEvent(this.getItemID_jq(this.config.playerHtml5.contentId) + " .SowerTecPlayerShareNormal .close-box", "click", function(t) {
                        t.preventDefault(), o.Utils.fadeOut(o.Utils.closest(e.getItemID_jq(e.config.playerHtml5.contentId) + " .SowerTecPlayerShareNormal .close-box", ".SowerTecPlayerShareNormal"))
                    }), o.Utils.offEvent(this.getItemID_jq(this.config.playerHtml5.contentId) + " .SowerTecPlayerShareNormal .close-box", "click"), o.Utils.onEvent(this.getItemID_jq(this.config.playerHtml5.contentId) + " .SowerTecPlayerShareNormal .close-box", "click", function(t) {
                        t.preventDefault(), o.Utils.fadeOut(o.Utils.closest(e.getItemID_jq(e.config.playerHtml5.contentId) + " .SowerTecPlayerShareNormal .close-box", ".SowerTecPlayerShareNormal"))
                    }), o.Utils.offEvent(this.getItemID_jq(this.config.playerHtml5.contentId) + " .fb-ico", "click"), o.Utils.onEvent(this.getItemID_jq(this.config.playerHtml5.contentId) + " .fb-ico", "click", function() {
                        s.Helpers.subWin("http://www.facebook.com/share.php?u=" + encodeURIComponent(e.config.share.shareUrl), "", 400, 400)
                    }), o.Utils.offEvent(this.getItemID_jq(this.config.playerHtml5.contentId) + " .tw-ico", "click"), o.Utils.onEvent(this.getItemID_jq(this.config.playerHtml5.contentId) + " .tw-ico", "click", function() {
                        s.Helpers.subWin("http://twitter.com/home?status=" + encodeURIComponent(e.config.share.shareUrl), "", 400, 400)
                    }), o.Utils.offEvent(this.getItemID_jq(this.config.playerHtml5.contentId) + " .gp-ico", "click"), o.Utils.onEvent(this.getItemID_jq(this.config.playerHtml5.contentId) + " .gp-ico", "click", function() {
                        s.Helpers.subWin("https://plus.google.com/share?url=" + encodeURIComponent(e.config.share.shareUrl), "", 400, 400)
                    }), o.Utils.offEvent(this.getItemID_jq(this.config.playerHtml5.contentId) + " .wp-ico", "click"), o.Utils.onEvent(this.getItemID_jq(this.config.playerHtml5.contentId) + " .wp-ico", "click", function() {
                        s.Helpers.subWin("whatsapp://send?text=" + encodeURIComponent(e.config.share.shareUrl), "", 400, 400)
                    }), o.Utils.onEvent(window, "resize", function(i) {
                        var n = o.Utils.getWidth(e.getItemID_jq(e.config.playerHtml5.contentId)),
                            s = o.Utils.getHeight(e.getItemID_jq(e.config.playerHtml5.contentId)),
                            l = "";
                        if (e.config.share.enableShare) switch (e.config.share.shareType) {
                            case "normal":
                                o.Utils.show(e.getItemID_jq(e.config.playerHtml5.contentId) + " .openSharePanel"), o.Utils.hide(e.getItemID_jq(e.config.playerHtml5.controls.sharePanel.contentId));
                                break;
                            case "min":
                            default:
                                o.Utils.show(e.getItemID_jq(e.config.playerHtml5.controls.sharePanel.contentId)), o.Utils.hide(e.getItemID_jq(e.config.playerHtml5.contentId) + " .openSharePanel")
                        }
                        s < 200 ? (o.Utils.setAttr(e.getItemID_jq(e.config.playerHtml5.playerContent.playButton) + " img", "style", "width:22px !important;height:22px !important;margin-top:10px !important"), o.Utils.setAttr(e.getItemID_jq(e.config.playerHtml5.playerContent.rewindButton) + " img", "style", "width:22px !important;height:22px !important;margin-top:10px !important"), o.Utils.setAttr(e.getItemID_jq(e.config.playerHtml5.playerContent.loader) + " img", "style", "width:22px !important;height:22px !important;margin-top:10px !important"), o.Utils.setAttr(e.getItemID_jq(e.config.ads.adPlayButton) + " img", "style", "width:22px !important;height:22px !important;margin-top:10px !important"), o.Utils.setWidth(".SowerTecPlayer-main-button", 62), o.Utils.setHeight(".SowerTecPlayer-main-button", 42)) : s < 300 ? (o.Utils.setAttr(e.getItemID_jq(e.config.playerHtml5.playerContent.playButton) + " img", "style", "width:40px !important;height:40px !important;margin-top:10px !important"), o.Utils.setAttr(e.getItemID_jq(e.config.playerHtml5.playerContent.rewindButton) + " img", "style", "width:40px !important;height:40px !important;margin-top:10px !important"), o.Utils.setAttr(e.getItemID_jq(e.config.playerHtml5.playerContent.loader) + " img", "style", "width:40px !important;height:40px !important;margin-top:10px !important"), o.Utils.setAttr(e.getItemID_jq(e.config.ads.adPlayButton) + " img", "style", "width:40px !important;height:40px !important;margin-top:10px !important"), o.Utils.setWidth(".SowerTecPlayer-main-button", 70), o.Utils.setHeight(".SowerTecPlayer-main-button", 50)) : (o.Utils.setAttr(e.getItemID_jq(e.config.playerHtml5.playerContent.playButton) + " img", "style", "width:90px !important;height:90px !important;"), o.Utils.setAttr(e.getItemID_jq(e.config.playerHtml5.playerContent.rewindButton) + " img", "style", "width:90px !important;height:90px !important;"), o.Utils.setAttr(e.getItemID_jq(e.config.playerHtml5.playerContent.loader) + " img", "style", "width:90px !important;height:90px !important;"), o.Utils.setAttr(e.getItemID_jq(e.config.ads.adPlayButton) + " img", "style", "width:90px !important;height:90px !important;"), o.Utils.setWidth(".SowerTecPlayer-main-button", 90), o.Utils.setHeight(".SowerTecPlayer-main-button", 90)), e.config.qualities ? e.config.player.disableFullScreen ? (n < 300 ? o.Utils.hide(".config-auxi") : o.Utils.show(".config-auxi"), n < 380 ? o.Utils.hide(".sowertecLogo") : o.Utils.show(".sowertecLogo")) : (n < 320 ? o.Utils.hide(".config-auxi") : o.Utils.show(".config-auxi"), n < 400 ? o.Utils.hide(".sowertecLogo") : o.Utils.show(".sowertecLogo")) : e.config.player.disableFullScreen ? n < 360 ? o.Utils.hide(".sowertecLogo") : o.Utils.show(".sowertecLogo") : n < 380 ? o.Utils.hide(".sowertecLogo") : o.Utils.show(".sowertecLogo"), n < 350 && e.config.share.enableShare && (o.Utils.hide(e.getItemID_jq(e.config.playerHtml5.contentId) + " .SowerTecPlayerShareNormal"), o.Utils.hide(e.getItemID_jq(e.config.playerHtml5.contentId) + " .openSharePanel"), o.Utils.show(e.getItemID_jq(e.config.playerHtml5.controls.sharePanel.contentId))), l = n < 200 ? "SowerTecPlayer SowerTecPlayer-320 SowerTecPlayer-200" : n < 340 ? "SowerTecPlayer SowerTecPlayer-320" : "SowerTecPlayer", e.config.vars.timeReduced = n < 250, o.Utils.getAttr(e.getItemID_jq(e.config.playerHtml5.contentId), "class") !== l && o.Utils.setAttr(e.getItemID_jq(e.config.playerHtml5.contentId), "class", l);
                        var a = Math.floor(100 * t.currentTime / t.duration);
                        o.Utils.setWidth(e.getItemID_jq(e.config.playerHtml5.controls.playingBar), Math.floor(o.Utils.getWidth(e.getItemID_jq(e.config.playerHtml5.controls.seekBar)) * a) / 100 + "px"), e.resetTimeToMenu()
                    }), o.Utils.triggerEvent(window, "resize"), t.removeAttribute("controls")
                }
            }, e.prototype._onFullScreenChange = function(t) {}, e.prototype._setVolume = function(t) {
                t > .95 && (t = 1), t < .1 ? (t = 0, o.Utils.show(this.getItemID_jq(this.config.playerHtml5.controls.volumeButtonMute)), o.Utils.hide(this.getItemID_jq(this.config.playerHtml5.controls.volumeButton))) : (o.Utils.hide(this.getItemID_jq(this.config.playerHtml5.controls.volumeButtonMute)), o.Utils.show(this.getItemID_jq(this.config.playerHtml5.controls.volumeButton))), this._getVideo().volume = t, this.config.vars.currentVolume = t;
                var e = Math.floor(100 * t) + "%";
                o.Utils.setWidth(this.getItemID_jq(this.config.playerHtml5.controls.volumeBar), e)
            }, e.prototype._mute = function() {
                var t = this.config.vars.currentVolume;
                this._setVolume(0), this.config.vars.currentVolume = t, this.api && this.api.trigger("mute"), this.triggerStats("mute")
            }, e.prototype._unmute = function() {
                0 === this.config.vars.currentVolume ? this._setVolume(this.config.player.volume / 100) : this._setVolume(this.config.vars.currentVolume), this.api && this.api.trigger("unmute"), this.triggerStats("unmute")
            }, e.prototype.getItemID = function(t) {
                return t + "_" + this.playerId
            }, e.prototype.getItemID_jq = function(t) {
                return "#" + t + "_" + this.playerId
            }, e.prototype.bindFn = function(t, e) {
                return function() {
                    e.apply(t, arguments)
                }
            }, e
        }(l.Player);
    e.html5 = c
}, function(t, e, i) {
    "use strict";
    Object.defineProperty(e, "__esModule", {
        value: !0
    });
    var n = i(0),
        o = function() {
            function t(t) {
                this.iframeContainer = {}, this.methods = {}, this.iframeContainer = {
                    enable: !1,
                    id: "",
                    source: "",
                    origin: ""
                };
                var e = this;
                n.Utils.onEvent(window, "message", function(i) {
                    var n = t.validRequestsOrigins;
                    if ("string" === ("undefined" != typeof i.data && typeof i.data.method) && (0 === n.length || -1 !== n.indexOf(i.origin))) switch (i.data.method) {
                        case "_register":
                            e.iframeContainer.enable = !0, e.iframeContainer.id = i.data.id, e.iframeContainer.source = i.source, e.iframeContainer.origin = i.origin, e.trigger("_registerDone");
                            break;
                        default:
                            var o = e.methods[i.data.method];
                            if ("function" == typeof o) try {
                                o(i.data.param)
                            } catch (s) {
                                console.error("error al ejecutar: " + i.data.method)
                            }
                    }
                }), this.registerMethods()
            }
            return t.prototype.registerMethods = function() {
                this.methods.pause = this.apiPause, this.methods.play = this.apiPlay, this.methods.seek = this.apiSeek, this.methods.back = this.apiBack, this.methods.forward = this.apiForward, this.methods.setVolume = this.apiSetVolume, this.methods.mute = this.apiMute, this.methods.unmute = this.apiUnMute
            }, t.prototype.apiPause = function() {
                this.player.pause()
            }, t.prototype.apiPlay = function() {
                this.player.play()
            }, t.prototype.apiSeek = function(t) {
                this.player.seek(t)
            }, t.prototype.apiBack = function() {
                this.player.back()
            }, t.prototype.apiForward = function() {
                this.player.forward()
            }, t.prototype.apiSetVolume = function(t) {
                this.player.setVolume(t)
            }, t.prototype.apiMute = function() {
                this.player.mute()
            }, t.prototype.apiUnMute = function() {
                this.player.unmute()
            }, t.prototype.setPlayer = function(t) {
                this.player = t
            }, t.prototype.trigger = function(t, e) {
                var i = this.iframeContainer;
                i.enable && i.source.postMessage({
                    id: i.id,
                    event: t,
                    param: e
                }, i.origin)
            }, t
        }();
    e.Api = o
}, function(t, e, i) {
    "use strict";
    Object.defineProperty(e, "__esModule", {
        value: !0
    });
    var n = i(1),
        o = function() {
            function t(t) {
                this.config = t
            }
            return t.prototype.send = function(t, e, i) {
                "timePlayed" === t && (this.config.timePlayed += e), "play" !== t || this.config.start || n.Helpers.isEmpty(this.config.analytics.events.start) || (t = "start", this.config.start = !0), n.Helpers.parseBoolean(this.config.sst.enable) && !n.Helpers.isEmpty(this.config.sst.events[t]) && this.sendSst(t), n.Helpers.parseBoolean(this.config.analytics.enable) && !n.Helpers.isEmpty(this.config.analytics.events[t]) && this.sendAnalytics(this.config.analytics.events[t], this.config.analytics, e)
            }, t.prototype.sendSst = function(t) {
                if ("timePlayed" === t) {
                    var e = Math.floor(this.config.timePlayed / 6e4);
                    if (!(e > this.config.sst.sendTimeCount)) return;
                    this.config.sst.sendTimeCount = e, t = "1min"
                } else t = this.config.sst.events[t];
                var i = ";";
                i += ["articulo", this.config.sst.section, this.config.sst.ts, "video", t].join(";"), n.Helpers.isEmpty(this.config.sst.section) ? this.config.sst.section = "sin_seccion" : this.config.sst.section = [this.config.sst.section, this.config.sst.topic, this.config.sst.subTopic].join(";"), n.Helpers.isDefined("sst7_click") && window.sst7_click(this.config.sst.id, i, this.config.sst.title, this.config.sst.type), n.Helpers.isDefined("sst8_click") && window.sst8_click("vid", this.config.sst.ts + this.config.sst.mediaType + t, ";" + this.config.sst.section, this.config.sst.title)
            }, t.prototype.sendAnalytics = function(t, e, i) {
                n.Helpers.isDefined("ga") ? "" != e.label && null != e.label ? window.ga("send", "event", e.category, t, e.label) : window.ga("send", "event", e.category, t) : n.Helpers.isDefined("_gaq") && ("" != e.label && null != e.label ? window._gaq.push(["_trackEvent", e.category, t, e.label]) : window._gaq.push(["_trackEvent", e.category, t]))
            }, t
        }();
    e.Stats = o
}, function(t, e, i) {
    "use strict";
    Object.defineProperty(e, "__esModule", {
        value: !0
    });
    var n = i(0),
        o = function() {
            function t() {}
            return t.init = function(t, e) {
                this.config = t, this.playerId = t.id, this.player = e;
                var i = this;
                if (this.config.related && this.config.related.url) {
                    var o = n.Utils.getElement(this.getItemID_jq(this.config.playerHtml5.contentId)),
                        s = n.Utils.getElement(this.getItemID_jq(this.config.playerHtml5.contentId) + " .sowertecRelatedContainer");
                    this.config.vars.timerActive = !0, this.config.vars.countTimer = 0, this.config.vars.relatedInitialized ? (this.autoPlay(), n.Utils.fadeIn(s)) : (this.config.vars.relatedInitialized = !0, this.config.vars.relatedList = [], this.config.vars.relatedListTemp = [], this.config.vars.defaultRelatedItemW = 200, this.config.vars.defaultRelatedItemH = 113, this.config.vars.marginRelatedItem = 10, n.Utils.onEvent(window, "resize", function() {
                        for (var t = n.Utils.getHeight(o) - n.Utils.getHeight(n.Utils.find(s, ".sowertecRelatedClose")), e = n.Utils.getWidth(o), l = 0, a = 0, r = Math.floor(e / (i.config.vars.defaultRelatedItemW + i.config.vars.marginRelatedItem)), c = Math.floor(t / (i.config.vars.defaultRelatedItemH + i.config.vars.marginRelatedItem)), h = 0; h < i.config.vars.relatedList.length; h++) l < c ? a < r && (i.config.vars.relatedList[h].mediaSrc.defaultSrc !== i.config.mediaSrc ? (n.Utils.setCss(i.config.vars.relatedList[h].relatedElement, "left", a * (i.config.vars.marginRelatedItem + i.config.vars.defaultRelatedItemW) + "px"), n.Utils.setCss(i.config.vars.relatedList[h].relatedElement, "top", l * (i.config.vars.marginRelatedItem + i.config.vars.defaultRelatedItemH) + "px"), n.Utils.show(i.config.vars.relatedList[h].relatedElement), a++) : n.Utils.hide(i.config.vars.relatedList[h].relatedElement), a >= r && (a = 0, l++)) : n.Utils.hide(i.config.vars.relatedList[h].relatedElement);
                        n.Utils.setCss(n.Utils.find(s, ".sowertecRelatedItems"), "left", e / 2 - r * (i.config.vars.marginRelatedItem + i.config.vars.defaultRelatedItemW) / 2 + "px"), n.Utils.setCss(n.Utils.find(s, ".sowertecRelatedItems"), "top", t / 2 - c * (i.config.vars.marginRelatedItem + i.config.vars.defaultRelatedItemH) / 2 + n.Utils.getHeight(n.Utils.find(s, ".sowertecRelatedClose")) + "px")
                    }), n.Utils.ajaxRequest({
                        url: i.config.related.url,
                        success: function(t) {
                            if (0 !== (t = JSON.parse(t)).length && t.length !== undefined) {
                                i.config.vars.relatedList = t, i.config.vars.relatedListTemp = t;
                                for (var e = 0; e < i.config.vars.relatedList.length; e++) i.config.vars.relatedList[e].relatedElement = n.Utils.createElement('<div class="sowertecRelatedItem" id="' + i.getItemID("relatedItem_" + e) + '"><div class="sowertecRelatedInfoContainer">\n                                <p class="sowertecRelatedTitle">' + i.config.vars.relatedList[e].title + '</p>\n                            </div>\n                            <img src="' + i.config.vars.relatedList[e].img + '" width="200" height="113" alt="' + i.config.vars.relatedList[e].title + '"></div>'), n.Utils.append(n.Utils.find(s, ".sowertecRelatedItems"), i.config.vars.relatedList[e].relatedElement);
                                n.Utils.fadeIn(s), n.Utils.triggerResize(window), n.Utils.each(n.Utils.findAll(s, ".sowertecRelatedItem"), function(t, e) {
                                    n.Utils.onEvent(t, "click", function(e) {
                                        var o = n.Utils.getAttr(t, "id");
                                        o = o.split("_")[1], i.config.vars.autoPlayRelatedTimeOut && clearTimeout(i.config.vars.autoPlayRelatedTimeOut), i.config.mediaSrc = i.config.vars.relatedList[o].mediaSrc, i.player._setSrc(i.config.mediaSrc.defaultSrc), i.player.load(), i.player.play(), n.Utils.hide(s), i.config.vars.relatedListTemp = []
                                    })
                                }), i.autoPlay()
                            } else i.config.vars.relatedInitialized = !1, n.Utils.hide(s)
                        },
                        error: function() {
                            i.config.vars.relatedInitialized = !1, n.Utils.hide(s)
                        }
                    }), n.Utils.onEvent(n.Utils.find(s, ".sowertecRelatedClose"), "click", function() {
                        i.config.vars.timerActive = !1, n.Utils.hide(s)
                    }))
                }
            }, t.autoPlay = function() {
                var t = n.Utils.getElement(this.getItemID_jq(this.config.playerHtml5.contentId) + " .sowertecRelatedContainer");
                if (this.config.vars.autoPlayRelatedTimeOut && clearTimeout(this.config.vars.autoPlayRelatedTimeOut), this.config.vars.timerActive)
                    if (this.config.vars.countTimer < this.config.related.autoPlayTime)
                        if (this.config.vars.countTimer++, this.config.vars.relatedListTemp.length > 0) {
                            var e = this.config.vars.relatedListTemp[0],
                                i = this.config.related.autoPlayMsg.replace("__TIME__", this.config.related.autoPlayTime - this.config.vars.countTimer + "");
                            i = i.replace("__TITLE__", e.title), n.Utils.html(n.Utils.find(t, ".sowertecRelatedAutoPlayMsg"), i), n.Utils.setWidth(n.Utils.find(t, ".sowertecRelatedAutoPlayMsg"), n.Utils.getWidth(t) - 40 + "px"), this.config.vars.autoPlayRelatedTimeOut = setTimeout(this.bindFn(this, this.autoPlay), 1e3)
                        } else n.Utils.html(n.Utils.find(t, ".sowertecRelatedAutoPlayMsg"), ""), clearTimeout(this.config.vars.autoPlayRelatedTimeOut);
                else if (this.config.vars.countTimer == this.config.related.autoPlayTime) {
                    (e = this.config.vars.relatedListTemp.shift()) && (this.config.vars.countTimer = 0, this.config.mediaSrc = e.mediaSrc, this.player._setSrc(e.mediaSrc.defaultSrc), this.player.play()), n.Utils.hide(t)
                }
            }, t.getItemID = function(t) {
                return t + "_" + this.playerId
            }, t.getItemID_jq = function(t) {
                return "#" + t + "_" + this.playerId
            }, t.bindFn = function(t, e) {
                return function() {
                    e.apply(t, arguments)
                }
            }, t.playerId = "", t
        }();
    e.Related = o
}, function(t, e, i) {
    "use strict";
    var n = this && this.__extends || function() {
        var t = Object.setPrototypeOf || {
            __proto__: []
        }
        instanceof Array && function(t, e) {
            t.__proto__ = e
        } || function(t, e) {
            for (var i in e) e.hasOwnProperty(i) && (t[i] = e[i])
        };
        return function(e, i) {
            function n() {
                this.constructor = e
            }
            t(e, i), e.prototype = null === i ? Object.create(i) : (n.prototype = i.prototype, new n)
        }
    }();
    Object.defineProperty(e, "__esModule", {
        value: !0
    });
    var o = function(t) {
        function e(e, i) {
            var n = t.call(this) || this;
            return n.template = '\n        <div id="__config.playerHtml5.contentId_____config.id__" class="SowerTecPlayer">\n         <div id="__config.playerHtml5.playerContent.contentId_____config.id__" class="SowerTecPlayerContent">\n            <video playsinline id="__config.playerHtml5.videoId_____config.id__" class="SowerTecPlayerVideoPlayer" preload="none" autoplay> </video>\n            <div  id="__config.playerHtml5.playerContent.playArea_____config.id__" class="sowertecPlayArea" tabindex="1"> </div>\n        </div>\n <div class="SowerTecPlayer-thumbnails" style="display:none" id="__config.playerHtml5.playerContent.thumbnails_____config.id__">\n            <canvas id="__config.playerHtml5.controls.thumbCanvas_____config.id__" width="120" height="68"></canvas>\n            <span class="dateThumb" id="__config.playerHtml5.controls.thumbTime_____config.id__">00:00:00</span>\n        </div>\n        <div class="SowerTecPlayer-thumbIndicator" style="display:none" id="__config.playerHtml5.controls.thumbIndicator_____config.id__"></div>\n        <div class="SowerTecPlayer-main-button" id="__config.playerHtml5.playerContent.playButton_____config.id__"><a ><img style="margin-top:10px !important" src="__config.player.imageFolder__https://ahxpro.com/players/video/img/main_play.png" alt="Reproducir" title="Reproducir" width="40" height="40"></a></div>\n        <div class="SowerTecPlayer-main-button" style="display: none;" id="__config.playerHtml5.playerContent.pauseButton_____config.id__"><a><svg viewBox="0 0 24 24"><path fill="#ffffff" d="M14,19H18V5H14M6,19H10V5H6V19Z"></path></svg></a></div>\n        <div class="SowerTecPlayer-main-button" id="__config.playerHtml5.playerContent.rewindButton_____config.id__" style="display:none"><a ><img style="margin-top:10px !important" src="__config.player.imageFolder__https://ahxpro.com/players/video/img/main_replay.png" alt="Reproducir" title="Reproducir" width="40" height="40"></a></div>\n        <div class="SowerTecPlayer-main-button" id="__config.playerHtml5.playerContent.loader_____config.id__" style="display:none"><img style="margin-top:10px !important" class="loading spin" src="__config.player.imageFolder__https://ahxpro.com/players/video/img/rolling.png"></div>\n   <div class="controls transition-on-bottom" id="__config.playerHtml5.controls.contentId_____config.id__">\n            <div class="progressbar">\n            <div class="total-progressbar" id="__config.playerHtml5.controls.seekBar_____config.id__">\n                <div class="charge-progressbar" id="__config.playerHtml5.controls.chargeBar_____config.id__"></div>\n                <div class="playing-progressbar" id="__config.playerHtml5.controls.playingBar_____config.id__"><div class="playing-progressbar-circle"></div></div>\n            </div>\n            </div>\n            <div class="SowerTecPlayer-buttons-auxi">\n                <a href="https://www.obslivestream.com" class="sowertecLogo" title="OBS Live Stream" target="_blank"><img src="__config.player.imageFolder__https://ahxpro.com/players/video/img/obs.png"  width="40" height="40"></a>\n                <a  class="play-button" id="__config.playerHtml5.controls.playButton_____config.id__"><img src="__config.player.imageFolder__https://ahxpro.com/players/video/img/play_ico.png" alt="Reproducir" title="Reproducir" width="35" height="35"></a>\n                <a  class="pause-button" id="__config.playerHtml5.controls.pauseButton_____config.id__" style="display:none"><img src="__config.player.imageFolder__pause_ico.png" alt="Pausar" title="Pausar" width="40" height="40"></a>\n                <a  class="volume-button SowerTecPlayer-volume" id="__config.playerHtml5.controls.volumeButton_____config.id__"><img src="__config.player.imageFolder__https://ahxpro.com/players/video/img/vol_ico.png" alt="VolÃƒÂºmen" title="VolÃƒÂºmen" width="40" height="40"></a>\n                <a  class="volume-button SowerTecPlayer-volume" id="__config.playerHtml5.controls.volumeButtonMute_____config.id__" style="display:none"><img src="__config.player.imageFolder__mute_ico.png" alt="VolÃƒÂºmen" title="VolÃƒÂºmen" width="40" height="40" ></a>\n                <div id="__config.playerHtml5.controls.volumeBarCont_____config.id__" class="volume-progressbar SowerTecPlayer-volume">\n                    <div id="__config.playerHtml5.controls.volumeBar_____config.id__" class="level-progressbar"><div class="circle"></div></div>\n                </div>\n                <span class="date" id="__config.playerHtml5.controls.timeContent_____config.id__"></span>\n                <span class="live" id="__config.playerHtml5.controls.liveContent_____config.id__">VIVO</span>\n                <div class="config-button" id="__config.playerHtml5.controls.qualityPanel.contentId_____config.id__" style="">\n                    <div class="config-auxi">\n                        <img src="__config.player.imageFolder__conf_https://ahxpro.com/players/video/img/ico.png" id="__config.playerHtml5.controls.qualityPanel.buttonQuality_____config.id__" alt="ConfiguraciÃƒÂ³n" title="ConfiguraciÃƒÂ³n" width="40" height="40">\n                        <div class="res-menu" id="__config.playerHtml5.controls.qualityPanel.qualityMenu_____config.id__">\n                            <a  class="active">Auto</a>\n                            <a ></a>\n                            <a ></a>\n                            <a ></a>\n                        </div>\n                    </div>\n                </div>\n                <a  class="fullscreen-button" id="__config.playerHtml5.controls.fullScreen_____config.id__"><img src="__config.player.imageFolder__https://ahxpro.com/players/video/img/full_ico.png" alt="Pantalla Completa" title="Pantalla Completa" width="40" height="40"></a>\n            </div>\n        </div>\n </div>\n    ', delete e.hls, n.config = e, void 0 !== i && "" !== i && (n.template = i), n
        }
        return n(e, t), e.prototype.getParsed = function() {
            return this.parseObject(this.template, this.config, "config")
        }, e
    }(i(13).htmlTemplate);
    e.html5Template = o
}, function(t, e, i) {
    "use strict";
    Object.defineProperty(e, "__esModule", {
        value: !0
    });
    var n = function() {
        function t() {}
        return t.prototype.parseObject = function(t, e, i) {
            for (var n in void 0 === i && (i = ""), e) e.hasOwnProperty(n) && (t = "object" == typeof e[n] ? this.parseObject(t, e[n], i + "." + n) : this.replacePlaceHolder(t, i + "." + n, e[n]));
            return t
        }, t.prototype.replacePlaceHolder = function(t, e, i) {
            var n = new RegExp("__" + e + "__", "g");
            return t.replace(n, i)
        }, t
    }();
    e.htmlTemplate = n
}, function(t, e, i) {
    "use strict";
    var n = this && this.__extends || function() {
        var t = Object.setPrototypeOf || {
            __proto__: []
        }
        instanceof Array && function(t, e) {
            t.__proto__ = e
        } || function(t, e) {
            for (var i in e) e.hasOwnProperty(i) && (t[i] = e[i])
        };
        return function(e, i) {
            function n() {
                this.constructor = e
            }
            t(e, i), e.prototype = null === i ? Object.create(i) : (n.prototype = i.prototype, new n)
        }
    }();

}, function(t, e, i) {
    "use strict";
    Object.defineProperty(e, "__esModule", {
        value: !0
    });
    var n = i(0),
        o = i(1),
        s = function() {
            function t(t) {
                this.config = {}, this.playerId = "", this.installed = !1, this.isReady = !1, this.eventCallbacks = [], o.Helpers.ifObjectExist(window.SowerTecPlayer.config) && (t = n.Utils.deepExtend(window.SowerTecPlayer.config, t)), o.Helpers.ifObjectExist(window.SowerTecPlayerConfig) && (t = n.Utils.deepExtend(t, window.SowerTecPlayerConfig)), t.id = "" + (new Date).getTime(), this.config = t, this.playerId = "SowerTecPlayer_" + t.id, this.registerCallbacks()
            }
            return t.prototype.install = function() {
                if (null === n.Utils.getElement("#" + this.config.contentId)) throw new Error;
                n.Utils.append("#" + this.config.contentId, '<div id="' + this.config.player.domId + "_" + this.config.id + '" class="' + this.config.player.domId + '"></div>');
                var t = ["fireURI=", this.config.player.fireUri, "&statsURI=", this.config.player.statsUri, "&playerId=", this.getId()].join("");
                n.Utils.append("#" + this.config.player.domId + "_" + this.config.id, this.createFlashObject(this.config.player.swf, this.playerId, t)), this.installed = !0
            }, t.prototype.registerCallbacks = function() {
                this.eventCallbacks.push({
                    player: this,
                    event: "ready",
                    callback: function(t) {
                        t.isReady = !0, t.initPlayer()
                    }
                }), this.eventCallbacks.push({
                    player: this,
                    event: "play",
                    callback: function(t) {}
                })
            }, t.prototype.fire = function(t, e, i) {
                var n = window.SowerTecPlayer.PlayerFlash.eventCallbacks;
                if (e)
                    for (var o = 0; o < n.length; o++) {
                        t === n[o].player.getId() && e === n[o].event && n[o].callback.apply(this, [n[o].player, i])
                    }
            }, t.prototype.createFlashObject = function(t, e, i) {
                return ['<object classid="clsid:d27cdb6e-ae6d-11cf-96b8-444553540000"', ' codebase="http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=10,0,0,0"', ' width="100%"  height="100%"  id="', e, '"  align="middle">', '<param name="allowScriptAccess" value="always" />', '<param name="scale" value="exactFit">', '<param name="allowFullScreen" value="true" />', '<param name="movie" value="', t = t + "?" + i, '" />', '<param name="quality" value="high" />', '<param name="bgcolor" value="#000" />', '<param name="WMODE" value="opaque"/>', '<param name="flashvars" value="' + i + '" />', '<embed src="', t, '" quality="high" bgcolor="#000"', ' width="100%" height="100%" name="', e, '" align="middle"', ' allowScriptAccess="always"', ' allowFullScreen="true"', ' type="application/x-shockwave-flash"', ' pluginspage="http://www.macromedia.com/go/getflashplayer"', ' wmode="opaque"', ' flashvars="', i, '" /></object>'].join("")
            }, t.prototype.isInstalled = function() {
                if (!this.installed) throw new Error;
                return this.installed
            }, t.prototype.getId = function() {
                return this.config.id
            }, t.prototype.getMovie = function() {
                if (this.isInstalled()) {
                    if (-1 !== navigator.appName.indexOf("Microsoft")) {
                        var t = window[this.playerId];
                        return t.length > 1 ? t[0] : t
                    }
                    return document[this.playerId]
                }
            }, t.prototype.initPlayer = function() {
                return !!this.isReady && (this.getMovie().setConfig(this.config), !0)
            }, t.prototype.play = function() {
                return !!this.isReady && (this.getMovie().play(), !0)
            }, t.prototype.back = function() {
                return !!this.isReady && (this.getMovie().back(), !0)
            }, t.prototype.forward = function() {
                return !!this.isReady && (this.getMovie().forward(), !0)
            }, t.prototype.mute = function() {
                return !!this.isReady && (this.getMovie().mute(), !0)
            }, t.prototype.unmute = function() {
                return !!this.isReady && (this.getMovie().unmute(), !0)
            }, t.prototype.setVolume = function(t) {
                return !!this.isReady && (this.getMovie().setVolume(t), !0)
            }, t.prototype.seek = function(t) {
                return !!this.isReady && (this.getMovie().seek(t), !0)
            }, t
        }();
    e.Flash = s
}, function(t, e, i) {
    "use strict";
    Object.defineProperty(e, "__esModule", {
        value: !0
    });
    var n = i(0),
        o = i(2),
        s = function() {
            function t() {}
            return t.install = function(t, e) {
                this.configList = e, this.initUI(t.contentId), this.setEvents(), t.contentId = "playListVideoContent", o.Media.setDefaultConfig(t), this.initVideoByID(0)
            }, t.initUI = function(t) {
                for (var e = '<div class="sowertecListContainer"><ul>', i = 0; i < this.configList.length; i++) e += '<li><a id="selecsowertecVideo_' + i + '" class="selecsowertecVideo">' + this.configList[i].description + "</a></li>";
                e += '</ul> <div id="playListVideoContent"></div></div>', n.Utils.append("#" + t, e)
            }, t.setEvents = function() {
                var t = this;
                n.Utils.onEvent(".selecsowertecVideo", "click", function(e) {
                    var i = e.target.id.split("_")[1];
                    t.initVideoByID(i)
                })
            }, t.initVideoByID = function(t) {
                var e = {
                    contentId: "playListVideoContent",
                    player: {
                        image: this.configList[t].image
                    },
                    mediaSrc: {
                        defaultSrc: this.configList[t].mediaSrc
                    }
                };
                o.Media.cleanAndInstall(e)
            }, t.defaultOptions = {}, t.configList = [], t
        }();
    e.Playlist = s
}]);
